"""
        TOPIC: SCHOOL MANAGEMENT SYSTEM
        
        CREATED BY : UTSAV SINGHAL
        BATCH      : 2021-22
        CLASS      : XII-A
        ROLL NO.   : 26609455
"""

from tkinter import*
from tkinter import ttk
from tkinter.ttk import Progressbar
from tkinter.ttk import Style
from PIL import Image,ImageTk
from tkinter import messagebox
from tkinter import filedialog
from tkcalendar import DateEntry
from tabulate import tabulate
import matplotlib.pyplot as pl
import mysql.connector
import random
import pandas
import time
import os

window = Tk()

width_of_window = 427
height_of_window = 250
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

x_coordinate = (screen_width / 2) - (width_of_window / 2)
y_coordinate = (screen_height / 2) - (height_of_window / 2)

window.geometry("%dx%d+%d+%d"%(width_of_window, height_of_window, x_coordinate, y_coordinate))
window.overrideredirect(1)

splash = Style()
splash.theme_use("clam")
splash.configure("red.Horizontal.TProgressbar", foreground = "red", background = "#4F4F4F")

progress = Progressbar(window, style = "red.Horizontal.TProgressbar", orient = HORIZONTAL, length = 500, mode = "determinate")

def Main_Window():
    class START:

        def __init__(self,root_start):
            self.root_start = root_start
            self.root_start.title("Start Menu")
            self.root_start.geometry("1350x700+0+0")

            label_main = Label(root_start, text = "SCHOOL MANAGEMENT SYSTEM    ", font = ('arial', 40, 'bold'), bg = "darkolivegreen", fg = "white")
            label_main.pack(side = TOP, fill = X)
            label_main = Label(root_start, text = "", font = ('arial', 25, 'bold'), bg = "darkolivegreen", fg = "white")
            label_main.pack(side = BOTTOM, fill = X)
            label_main = Label(self.root_start, text = "\t", font = ('arial', 50, 'bold'), bg = "black", fg = "white")
            label_main.pack(side = LEFT, fill = Y)
            label_main = Label(self.root_start, text = "    ", font = ('arial', 25, 'bold'), bg = "black", fg = "white")
            label_main.pack(side = RIGHT, fill = Y)
            label_frame = LabelFrame(self.root_start, text = "", height = 700, width = 1350, bg = "red", fg = "white", bd = 15)
            label_frame.pack(fill = BOTH)

            # img_logout
            img_logout = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\Log_Out.jpg")
            img_logout = img_logout.resize((200, 68), Image.ANTIALIAS)
            self.photoimg_logout = ImageTk.PhotoImage(img_logout)
            self.btn_logout = Button(self.root_start, image = self.photoimg_logout, cursor="hand2", bg = "darkolivegreen", command = self.root_start.destroy)
            self.btn_logout.place(x = 1165, y = 0, width = 200, height = 68)

            # Admission
            btn_1 = Button(self.root_start, text = "Admission", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.admission)
            btn_1.place(x = 1, y = 70, width = 300, height = 65)
            img_1 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\admission_icon.jpg")
            img_1 = img_1.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_1 = ImageTk.PhotoImage(img_1)
            self.btn_1 = Button(label_frame, image = self.photoimg_1, cursor="hand2", command = self.admission)
            self.btn_1.place(x = 10, y = 10, width = 300, height = 175)

            # Student
            btn_2 = Button(self.root_start, text = "Student", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.student)
            btn_2.place(x = 1, y = 135, width = 300, height = 65)
            img_2 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\student_icon.jpg")
            img_2 = img_2.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_2 = ImageTk.PhotoImage(img_2)
            self.btn_2 = Button(label_frame, image = self.photoimg_2, cursor="hand2", command = self.student)
            self.btn_2.place(x = 340, y = 10, width = 300, height = 175)

            # Teacher
            btn_3 = Button(self.root_start, text = "Teacher", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.teacher)
            btn_3.place(x = 1, y = 200, width = 300, height = 65)
            img_3 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\teacher_icon.jpg")
            img_3 = img_3.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_3 = ImageTk.PhotoImage(img_3)
            self.btn_3 = Button(label_frame, image = self.photoimg_3, cursor="hand2", command = self.teacher)
            self.btn_3.place(x = 680, y = 10, width = 300, height = 175)

            # Exam Management
            btn_4 = Button(self.root_start, text = "Exam Management", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.exam_management)
            btn_4.place(x = 1, y = 265, width = 300, height = 65)
            img_4 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\exam_icon.jpg")
            img_4 = img_4.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_4 = ImageTk.PhotoImage(img_4)
            self.btn_4 = Button(label_frame, image = self.photoimg_4, cursor="hand2", command = self.exam_management)
            self.btn_4.place(x = 170, y = 195, width = 300, height = 175)

            # Report Card
            btn_5 = Button(self.root_start, text = "Report Card", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.report_card)
            btn_5.place(x = 1, y = 330, width = 300, height = 65)
            img_5 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\report_icon.jpg")
            img_5 = img_5.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_5 = ImageTk.PhotoImage(img_5)
            self.btn_5 = Button(label_frame, image = self.photoimg_5, cursor="hand2", command = self.report_card)
            self.btn_5.place(x = 500, y = 195, width = 300, height = 175)

            # Progress Report
            btn_6 = Button(self.root_start, text = "Progress Report", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.progress_report)
            btn_6.place(x = 1, y = 395, width = 300, height = 65)
            img_6 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\progress_icon.jpg")
            img_6 = img_6.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_6 = ImageTk.PhotoImage(img_6)
            self.btn_6 = Button(label_frame, image = self.photoimg_6, cursor="hand2", command = self.progress_report)
            self.btn_6.place(x = 10, y = 380, width = 300, height = 175)

            # Achievement Record
            btn_7 = Button(self.root_start, text = "Achievement\nRecord", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.achievement_record)
            btn_7.place(x = 1, y = 460, width = 300, height = 100)
            img_7 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\achievement_icon.jpg")
            img_7 = img_7.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_7 = ImageTk.PhotoImage(img_7)
            self.btn_7 = Button(label_frame, image = self.photoimg_7, cursor="hand2", command = self.achievement_record)
            self.btn_7.place(x = 340, y = 380, width = 300, height = 175)

            # Export Excel
            btn_8 = Button(self.root_start, text = "Create Database \nand Tables", font = ("Handlee", 20, "bold"), bg = "black", fg = "white", relief = RAISED, bd = 10, command = self.create_table)
            btn_8.place(x = 1, y = 560, width = 300, height = 100)
            img_8 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\start_images\create_table_icon.jpg")
            img_8 = img_8.resize((300, 175), Image.ANTIALIAS)
            self.photoimg_8 = ImageTk.PhotoImage(img_8)
            self.btn_8 = Button(label_frame, image = self.photoimg_8, cursor="hand2", command = self.create_table)
            self.btn_8.place(x = 680, y = 380, width = 300, height = 175)

        def admission(self):
            class Admission:

                def __init__(self,root_admission):
                    self.root_admission = root_admission
                    self.root_admission.geometry("1350x700+0+0")
                    self.root_admission.title("ADMISSION MANAGEMENT SYSTEM")

                    self.root_admission.config(bg = "Darkred")

                    # 1st
                    img_1 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\7th.jpg")
                    img_1 = img_1.resize((455,160), Image.ANTIALIAS)
                    self.photoimg_1 = ImageTk.PhotoImage(img_1)

                    self.btn_1 = Button(self.root_admission, image = self.photoimg_1, cursor="hand2")
                    self.btn_1.place(x = 0, y = 0, width = 455, height = 160)

                    # 2nd
                    img_2 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\11th.jpg")
                    img_2 = img_2.resize((455,160), Image.ANTIALIAS)
                    self.photoimg_2 = ImageTk.PhotoImage(img_2)

                    self.btn_2 = Button(self.root_admission, image = self.photoimg_2, cursor="hand2")
                    self.btn_2.place(x = 455, y = 0, width = 455, height = 160)

                    # 3rd
                    img_3 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\clg.jpg")
                    img_3 = img_3.resize((455,160), Image.ANTIALIAS)
                    self.photoimg_3 = ImageTk.PhotoImage(img_3)

                    self.btn_3 = Button(self.root_admission, image = self.photoimg_3, cursor="hand2")
                    self.btn_3.place(x = 910, y = 0, width = 455, height = 160)

                    # bg image
                    img_4 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\university.jpg")
                    img_4 = img_4.resize((1370,540), Image.ANTIALIAS)
                    self.photoimg_4 = ImageTk.PhotoImage(img_4)

                    bg_lbl = Label(self.root_admission, image = self.photoimg_4, bd=2, relief=RIDGE)
                    bg_lbl.place(x = 0, y = 160, width = 1370, height = 550)

                    lbl_title = Label(bg_lbl, text = " < ----  ADMISSION MANAGEMENT SYSTEM  ---- > ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 1365, height = 60)

                    # Add Student Details
                    add = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\add_icon.jpg")
                    add = add.resize((248,248), Image.ANTIALIAS)
                    self.photoadd = ImageTk.PhotoImage(add)
                    self.btn_1 = Button(self.root_admission, command = self.add_student, image = self.photoadd)
                    self.btn_1.place(x = 125, y = 250, width = 250, height = 250)

                    title_1 = Button(self.root_admission, text = "Add Student", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.add_student)
                    title_1.place(x = 110, y = 520)

                    # Show Details
                    show = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\show_record_icon.jpg")
                    show = show.resize((278,248), Image.ANTIALIAS)
                    self.photoshow = ImageTk.PhotoImage(show)
                    self.btn_2 = Button(self.root_admission, command = self.show_record, image = self.photoshow)
                    self.btn_2.place(x = 410, y = 250, width = 280, height = 250)

                    title_2 = Button(self.root_admission, text = "Show Record", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.show_record)
                    title_2.place(x = 405, y = 520)

                    # Search Record
                    search = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\search_icon.jpg")
                    search = search.resize((278,248), Image.ANTIALIAS)
                    self.photosearch = ImageTk.PhotoImage(search)
                    self.btn_3 = Button(self.root_admission, command = self.search_record, image = self.photosearch)
                    self.btn_3.place(x = 715, y = 250, width = 285, height = 250)

                    title_3 = Button(self.root_admission, text = "Search", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.search_record)
                    title_3.place(x = 755, y = 520)

                    # Export To Text
                    export = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\admission_images\text_icon.jpg")
                    export = export.resize((248,248), Image.ANTIALIAS)
                    self.photoexport = ImageTk.PhotoImage(export)
                    self.btn_4 = Button(self.root_admission, command = self.export_txt, image = self.photoexport)
                    self.btn_4.place(x = 1025, y = 250, width = 250, height = 250)

                    title_4 = Button(self.root_admission, text = "Export To \nText File", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.export_txt)
                    title_4.place(x = 1025, y = 520, width = 250, height = 130)

                def add_student(self):
                    class Add_Student:
                        
                        def __init__(self,root_add):
                            self.root_add = root_add
                            self.root_add.title("ADD STUDENT DETAILS")
                            self.root_add.geometry("1100x650+150+20")
                            self.root_add.config(bg = "Darkgoldenrod")

                            self.root_add.focus_force()
                            self.root_add.grab_set()
                            self.root_add.resizable(FALSE, FALSE)

                            bg_lbl = Label(self.root_add, bd=2, relief=RIDGE)
                            bg_lbl.place(x = 5, y = 5, width = 1090, height = 640)

                            lbl_title = Label(bg_lbl, text = " < ----  ADD STUDENT DETAILS  ---- > ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                            lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                            # Manage Frame
                            Manage_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                            Manage_Frame.place(x = 5, y = 65, width = 1080, height = 565)

                            # Top Frame
                            DataTopFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                            DataTopFrame.place(x = 0, y = 0, width = 1075, height = 60)

                            # Left Frame
                            DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataLeftFrame.place(x = 40, y = 60, width = 600, height = 350)

                            # Right Frame
                            DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Course Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataRightFrame.place(x = 660, y = 60, width = 350, height = 350)

                            # Bottom Frame
                            DataBottomFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                            DataBottomFrame.place(x = 0, y = 410, width = 1075, height = 145)

                            # Variables
                            self.var_admission_id = StringVar()
                            self.var_student_name = StringVar()
                            self.var_father_name = StringVar()
                            self.var_father_occupation = StringVar()
                            self.var_mother_name = StringVar()
                            self.var_mother_occupation = StringVar()
                            self.var_year = StringVar()
                            self.var_city = StringVar()
                            self.var_gender = StringVar()
                            self.var_dob = StringVar()
                            self.var_email = StringVar()
                            self.var_phone = StringVar()
                            self.var_address = StringVar()
                            self.var_pin = StringVar()
                            self.var_class_section = StringVar()
                            self.var_course_id = StringVar()
                            self.var_mandatory_subjects = StringVar()
                            self.var_additional_subject = StringVar()
                            self.var_choose_subject = StringVar()

                            # Student Information
                            self.txt_id = str(random.randint(1000, 9999))
                            self.var_admission_id.set(self.txt_id)
                            id = Label(DataLeftFrame, text = "Admission ID : ", font = ("Times New Roman", 12, "bold"), bg = "White")
                            id.place(x = 3, y = 3)
                            self.id = Entry(DataLeftFrame, textvariable = self.var_admission_id, font = ("Courgette", 14, "bold"), justify = CENTER, state = DISABLED)
                            self.id.place(x = 120, y = 3, width = 150)

                            ## Name
                            lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_name.place(x = 280, y = 3)

                            txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_name.place(x = 425, y = 3)

                            ## Father Name
                            lbl_father_name = Label(DataLeftFrame, text = "Father Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_father_name.place(x = 3, y = 50)

                            txt_father_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_father_name, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_father_name.place(x = 120, y = 50)

                            ## Father Occupation
                            lbl_father_occupation = Label(DataLeftFrame, text = "Father Occupation :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_father_occupation.place(x = 280, y = 50)

                            txt_father_occupation = ttk.Entry(DataLeftFrame, textvariable  = self.var_father_occupation, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_father_occupation.place(x = 425, y = 50)

                            ## Mother Name
                            lbl_mother_name = Label(DataLeftFrame, text = "Mother Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_mother_name.place(x = 3, y = 97)

                            txt_mother_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_mother_name, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_mother_name.place(x = 120, y = 97)

                            ## Mother Occupation
                            lbl_mother_occupation = Label(DataLeftFrame, text = "Mother Occupation :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_mother_occupation.place(x = 280, y = 97)

                            txt_mother_occupation = ttk.Entry(DataLeftFrame, textvariable  = self.var_mother_occupation, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_mother_occupation.place(x = 425, y = 97)

                            ## Year
                            current_year = Label(DataLeftFrame, text = "Academic Year :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            current_year.place(x = 3, y = 144)

                            com_txt_current_year = ttk.Combobox(DataLeftFrame, textvariable  = self.var_year, font = ("Times New Roman", 12, "bold"), width = 16, state = "readonly")
                            com_txt_current_year["value"] = ("Select Year", "2020-2021", "2021-2022", "2022-2023", "2023-2024", "2024-2025", "2025-2026", "2026-2027", "2027-2028", "2028-2029", "2029-2030", "2030-2031", "2031-2032", "2032-2033", "2033-2034", "2034-2035", "2035-2036", "2036-2037", "2037-2038", "2038-2039", "2039-2040")
                            com_txt_current_year.current(0)
                            com_txt_current_year.place(x = 120, y = 144)

                            ## City
                            lbl_city = Label(DataLeftFrame, text = "City :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_city.place(x = 280, y = 144)

                            txt_city = ttk.Entry(DataLeftFrame, textvariable  = self.var_city, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_city.place(x = 425, y = 144)

                            ## Gender
                            lbl_gender = Label(DataLeftFrame, text = "Gender :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_gender.place(x = 3, y = 191)

                            com_txt_gender = ttk.Combobox(DataLeftFrame, textvariable  = self.var_gender, font = ("Times New Roman", 12, "bold"), width = 16, state = "readonly")
                            com_txt_gender["values"] = ("Select Gender", "Male", "Female", "Other")
                            com_txt_gender.current(0)
                            com_txt_gender.place(x = 120, y = 191)

                            ## DOB
                            lbl_dob = Label(DataLeftFrame, text = "DOB :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_dob.place(x = 280, y = 191)

                            cal = DateEntry(DataLeftFrame, selectmode = 'day', textvariable = self.var_dob, font = ("Times New Roman", 12, "bold"), width = 16, state = "readonly")
                            cal.place(x = 425, y = 191)

                            ## Email
                            lbl_email = Label(DataLeftFrame, text = "Email :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_email.place(x = 3, y = 238)

                            txt_email = ttk.Entry(DataLeftFrame, textvariable  = self.var_email, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_email.place(x = 120, y = 238)

                            ## Phone
                            lbl_email = Label(DataLeftFrame, text = "Phone :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_email.place(x = 280, y = 238)

                            txt_email = ttk.Entry(DataLeftFrame, textvariable  = self.var_phone, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_email.place(x = 425, y = 238)

                            ## Address
                            lbl_address = Label(DataLeftFrame, text = "Address :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_address.place(x = 3, y = 285)

                            txt_address = ttk.Entry(DataLeftFrame, textvariable  = self.var_address, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_address.place(x = 120, y = 285)

                            ## Pin Code
                            lbl_pin = Label(DataLeftFrame, text = "Pin Code :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_pin.place(x = 280, y = 285)

                            txt_pin = ttk.Entry(DataLeftFrame, textvariable  = self.var_pin, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_pin.place(x = 425, y = 285)

                            # Course Information
                            ## Class
                            lbl_class_section = Label(DataRightFrame, text = "Class - Section :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_class_section.place(x = 3, y = 3)
                            com_txt_class_section = ttk.Combobox(DataRightFrame, textvariable  = self.var_class_section, font = ("Times New Roman", 12, "bold"), width = 16, state = "readonly")
                            com_txt_class_section["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                            com_txt_class_section.current(0)
                            com_txt_class_section.place(x = 120, y = 3)

                            btn_Enter = Button(DataRightFrame, command = self.course_details, text = "↩", width = 3, bg = "Silver", fg = "Black")
                            btn_Enter.place(x = 280, y = 3)

                            ## Course
                            course_std = Label(DataRightFrame, text = "Course ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            course_std.place(x = 3, y = 50)
                            com_txtcourse_std = ttk.Entry(DataRightFrame, textvariable  = self.var_course_id, font = ("Times New Roman", 12, "bold"), width = 22, state = "readonly")
                            com_txtcourse_std.place(x = 120, y = 50)

                            ## Mandatory Subjects
                            mandatory_subjects_std = Label(DataRightFrame, text = "Mandatory Subjects :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            mandatory_subjects_std.place(x = 3, y = 97)
                            com_txtmandatory_subjects_std = ttk.Entry(DataRightFrame, textvariable  = self.var_mandatory_subjects, font = ("Times New Roman", 12, "bold"), width = 40, state = "readonly")
                            com_txtmandatory_subjects_std.place(x = 10, y = 130)

                            ## Additional Subject
                            additional_subject_std = Label(DataRightFrame, text = "Additional Subject :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            additional_subject_std.place(x = 3, y = 160)
                            com_txtadditional_subject_std = ttk.Entry(DataRightFrame, textvariable  = self.var_additional_subject, font = ("Times New Roman", 12, "bold"), width = 40, state = "readonly")
                            com_txtadditional_subject_std.place(x = 10, y = 200)

                            ## Choose
                            choose_subject_std = Label(DataRightFrame, text = "Choose One Additional Subject :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            choose_subject_std.place(x = 3, y = 240)
                            com_txtchoose_subject_std = Entry(DataRightFrame, textvariable  = self.var_choose_subject, font = ("Times New Roman", 12, "bold"), width = 40)
                            com_txtchoose_subject_std.place(x = 10, y = 280)

                            #Button Frame
                            btn_frame = Frame(DataTopFrame, bd=2, relief=RIDGE, bg="Black")
                            btn_frame.place(x = 0, y = 0, width = 1065, height = 50)

                            btn_Add = Button(btn_frame, text = "Save Record",command = self.add_data, font = ("Arial", 16, "bold"), bg = "Blue", fg = "White")
                            btn_Add.place(x = 4, y = 4, width = 211, height = 40)

                            btn_Update = Button(btn_frame, text = "Update Record", command = self.update_data, font = ("Arial", 16, "bold"), bg = "Blue", fg = "White")
                            btn_Update.place(x = 215, y = 4, width = 211, height = 40)

                            btn_Delete = Button(btn_frame, text = "Delete Record", command = self.delete_data, font = ("Arial", 16, "bold"),  bg = "Blue", fg = "White")
                            btn_Delete.place(x = 427, y = 4, width  =211, height = 40)

                            btn_Reset = Button(btn_frame, text = "Reset", command = self.reset_data, font = ("Arial", 16, "bold"), bg = "Blue", fg = "White")
                            btn_Reset.place(x = 639, y = 4, width  =211, height = 40)

                            btn_Close = Button(btn_frame, text = "Close", command = self.root_add.destroy, font = ("Arial", 16, "bold"), bg = "Blue", fg = "White")
                            btn_Close.place(x = 851, y = 4, width  =211, height = 40)

                            # ====================Student Table and Scroll Bar====================
                            table_frame = Frame(DataBottomFrame, bd = 4, relief = RIDGE)
                            table_frame.place(x = 5, y = 5, width = 1065, height = 130)

                            scroll_x = ttk.Scrollbar(table_frame, orient = HORIZONTAL)
                            scroll_y = ttk.Scrollbar(table_frame, orient = VERTICAL)
                            self.admission_table = ttk.Treeview(table_frame, column = ("id", "name", "mother", "occupation_mother", "father", "occupation_father", "year", "city", "gender", "dob", "email", "phone", "address", "pin", "course_id", "class", "mandatory", "additional", "chosen"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                            scroll_x.pack(side = BOTTOM, fill = X)
                            scroll_y.pack(side = RIGHT, fill = Y)

                            scroll_x.config(command  = self.admission_table.xview)
                            scroll_y.config(command  = self.admission_table.yview)

                            style = ttk.Style()
                            style.theme_use("vista")
                            style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                            self.admission_table.heading("id", text = "Admission ID")
                            self.admission_table.heading("name", text = "Student Name")
                            self.admission_table.heading("father", text = "Father Name")
                            self.admission_table.heading("occupation_father", text = "Father Occupation")
                            self.admission_table.heading("mother", text = "Mother Name")
                            self.admission_table.heading("occupation_mother", text = "Mother Occupation")
                            self.admission_table.heading("year", text = "Year")
                            self.admission_table.heading("city", text = "City")
                            self.admission_table.heading("gender", text = "Gender")
                            self.admission_table.heading("dob", text = "DOB")
                            self.admission_table.heading("email", text = "Email")
                            self.admission_table.heading("phone", text = "Phone No")
                            self.admission_table.heading("address", text = "Address")
                            self.admission_table.heading("pin", text = "Pin Code")
                            self.admission_table.heading("course_id", text = "Course ID")
                            self.admission_table.heading("class", text = "Class-Section")
                            self.admission_table.heading("mandatory", text = "Mandatory Sunjects")
                            self.admission_table.heading("additional", text = "Additional Subjects")
                            self.admission_table.heading("chosen", text = "Chosen Additional Subject")

                            self.admission_table["show"]  ="headings"

                            self.admission_table.column("id", width = 100)
                            self.admission_table.column("name", width = 150)
                            self.admission_table.column("father", width = 150)
                            self.admission_table.column("occupation_father", width = 150)
                            self.admission_table.column("mother", width = 150)
                            self.admission_table.column("occupation_mother", width = 150)
                            self.admission_table.column("year", width = 100)
                            self.admission_table.column("city", width = 100)
                            self.admission_table.column("gender", width = 100)
                            self.admission_table.column("dob", width = 100)
                            self.admission_table.column("email", width = 170)
                            self.admission_table.column("phone", width = 100)
                            self.admission_table.column("address", width = 250)
                            self.admission_table.column("pin", width = 100)
                            self.admission_table.column("course_id", width = 100)
                            self.admission_table.column("class", width = 200)
                            self.admission_table.column("mandatory", width = 500)
                            self.admission_table.column("additional", width = 400)
                            self.admission_table.column("chosen", width = 300)

                            self.admission_table.pack(fill = BOTH, expand = 1)
                            self.admission_table.bind("<ButtonRelease>", self.get_cursor)
                            self.fetch_data()

                        # Add
                        def add_data(self):
                            if (self.var_student_name.get() == "" or self.var_father_name.get() == "" or self.var_father_occupation.get() == "" or 
                                    self.var_mother_name.get() == "" or self.var_mother_occupation.get() == "" or self.var_year.get() == "" or
                                            self.var_city.get() == "" or self.var_gender.get() == "" or self.var_dob.get() == "" or 
                                                self.var_email.get() == "" or self.var_address.get() == "" or self.var_phone.get() == "" or 
                                                    self.var_pin.get() == "" or self.var_class_section.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("INSERT INTO ADMISSIONS VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                            self.var_admission_id.get(),
                                                                                                                                            self.var_student_name.get(),
                                                                                                                                            self.var_father_name.get(),
                                                                                                                                            self.var_father_occupation.get(),
                                                                                                                                            self.var_mother_name.get(),
                                                                                                                                            self.var_mother_occupation.get(),
                                                                                                                                            self.var_year.get(),
                                                                                                                                            self.var_city.get(),
                                                                                                                                            self.var_gender.get(),
                                                                                                                                            self.var_dob.get(),
                                                                                                                                            self.var_email.get(),
                                                                                                                                            self.var_phone.get(),
                                                                                                                                            self.var_address.get(),
                                                                                                                                            self.var_pin.get(),
                                                                                                                                            self.var_course_id.get(),
                                                                                                                                            self.var_class_section.get(),
                                                                                                                                            self.var_mandatory_subjects.get(),
                                                                                                                                            self.var_additional_subject.get(),
                                                                                                                                            self.var_choose_subject.get()
                                                                                                                                        ))
                                    conn.commit()
                                    self.fetch_data()
                                    conn.close()
                                    messagebox.showinfo("Success", f"Student Record \nAdmission ID: {self.var_admission_id.get()} Added Succesfully!", parent = self.root_add)
                                    self.reset_data()
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_add)

                        # Fetch Data
                        def fetch_data(self):
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            my_cursor.execute("SELECT * FROM ADMISSIONS")
                            data = my_cursor.fetchall()
                            if len(data) != 0:
                                self.admission_table.delete(*self.admission_table.get_children())
                                for i in data:
                                    self.admission_table.insert("", END, values = i)
                                conn.commit()
                            conn.close()

                        # Get Cursor
                        def get_cursor(self, event = ""):
                            cursor_row = self.admission_table.focus()
                            content = self.admission_table.item(cursor_row)
                            data = content["values"]

                            self.var_admission_id.set(data[0])
                            self.var_student_name.set(data[1])
                            self.var_father_name.set(data[2])
                            self.var_father_occupation.set(data[3])
                            self.var_mother_name.set(data[4])
                            self.var_mother_occupation.set(data[5])
                            self.var_year.set(data[6])
                            self.var_city.set(data[7])
                            self.var_gender.set(data[8])
                            self.var_dob.set(data[9])
                            self.var_email.set(data[10])
                            self.var_phone.set(data[11])
                            self.var_address.set(data[12])
                            self.var_pin.set(data[13])
                            self.var_course_id.set(data[14])
                            self.var_class_section.set(data[15])
                            self.var_mandatory_subjects.set(data[16])
                            self.var_additional_subject.set(data[17])
                            self.var_choose_subject.set(data[18])

                        # Update
                        def update_data(self):
                            if (self.var_student_name.get() == "" or self.var_year.get() == "" or
                                            self.var_city.get() == "" or self.var_gender.get() == "" or self.var_dob.get() == "" or 
                                                self.var_email.get() == "" or self.var_address.get() == "" or self.var_phone.get() == "" or 
                                                    self.var_pin.get() == "" or self.var_class_section.get() == "" or self.var_choose_subject.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_add)
                                    if update>0:
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        my_cursor.execute("UPDATE ADMISSIONS set Student_Name = %s, Father_Name = %s, Father_Occupation = %s, Mother_Name = %s, Mother_Occupation = %s, Academic_Year = %s, City = %s, Gender = %s, Date_of_Birth = %s, Email_ID = %s, Phone_No = %s, Address = %s, PinCode = %s, Course_ID = %s, Class_Section = %s, Mandatory_Subjects = %s, Additional_Subjects = %s, Chosen_Additional_Subjects = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                                                                                                                                        self.var_father_name.get(),
                                                                                                                                                                                                                                                                        self.var_father_occupation.get(),
                                                                                                                                                                                                                                                                        self.var_mother_name.get(),
                                                                                                                                                                                                                                                                        self.var_mother_occupation.get(),
                                                                                                                                                                                                                                                                        self.var_year.get(),
                                                                                                                                                                                                                                                                        self.var_city.get(),
                                                                                                                                                                                                                                                                        self.var_gender.get(),
                                                                                                                                                                                                                                                                        self.var_dob.get(),
                                                                                                                                                                                                                                                                        self.var_email.get(),
                                                                                                                                                                                                                                                                        self.var_phone.get(),
                                                                                                                                                                                                                                                                        self.var_address.get(),
                                                                                                                                                                                                                                                                        self.var_pin.get(),
                                                                                                                                                                                                                                                                        self.var_course_id.get(),
                                                                                                                                                                                                                                                                        self.var_class_section.get(),
                                                                                                                                                                                                                                                                        self.var_mandatory_subjects.get(),
                                                                                                                                                                                                                                                                        self.var_additional_subject.get(),
                                                                                                                                                                                                                                                                        self.var_choose_subject.get(),
                                                                                                                                                                                                                                                                        self.var_admission_id.get()

                                                                                                                                                                                                                                                                            ))
                                    else:
                                        if not update:
                                            return
                                    conn.commit()
                                    self.fetch_data()
                                    conn.close()
                                    messagebox.showinfo("Success", f"Student Record \nAdmission ID: {self.var_admission_id.get()} Update Succesfully!", parent = self.root_add)
                                    self.reset_data()
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_add)

                        # Delete
                        def delete_data(self):
                            if self.var_admission_id.get() == "":
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                                    if delete>0:
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        sql = "DELETE FROM ADMISSIONS WHERE ADMISSION_ID = %s"
                                        value = (self.var_admission_id.get(),)
                                        my_cursor.execute(sql,value)
                                    else:
                                        if not delete:
                                            return
                                    conn.commit()
                                    conn.close()
                                    messagebox.showinfo("Success", f"Student Record \nAdmission ID: {self.var_admission_id.get()} Deleted Successfully!", parent = self.root_add)
                                    self.clear_data()
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_add)

                        # Course Details
                        def course_details(self):
                            if self.var_class_section.get() == "Class XI - Section A":
                                self.var_course_id.set("SCIENCE145")
                                self.var_mandatory_subjects.set("Physics,Chemistry,Maths,English,Computer_Science")
                                self.var_additional_subject.set("Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XI - Section B":
                                self.var_course_id.set("SCIENCE185")
                                self.var_mandatory_subjects.set("Physics/Chemistry/Biology/Maths/English")
                                self.var_additional_subject.set("Computer_Science/Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XI - Section C":
                                self.var_course_id.set("COMMERCE234")
                                self.var_mandatory_subjects.set("Accountance/Business_Studies/Economics/Maths/English")
                                self.var_additional_subject.set("Information_Practices/Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XI - Section D":
                                self.var_course_id.set("COMMERCE257")
                                self.var_mandatory_subjects.set("Accountancy/Business_Studies/Economics/Maths/English")
                                self.var_additional_subject.set("Information_Practices/Physical_Education/Entreprenuershp/NONE")
                            elif self.var_class_section.get() == "Class XII - Section A":
                                self.var_course_id.set("SCIENCE")
                                self.var_mandatory_subjects.set("Physics,Chemistry,Maths,English,Computer_Science")
                                self.var_additional_subject.set("Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XII - Section B":
                                self.var_course_id.set("SCIENCE85")
                                self.var_mandatory_subjects.set("Physics/Chemistry/Biology/Maths/English")
                                self.var_additional_subject.set("Computer_Science/Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XII - Section C":
                                self.var_course_id.set("COMMERCE74")
                                self.var_mandatory_subjects.set("Accountance/Business_Studies/Economics/Maths/English")
                                self.var_additional_subject.set("Information_Practices/Physical_Education/NONE")
                            elif self.var_class_section.get() == "Class XII - Section D":
                                self.var_course_id.set("COMMERCE97")
                                self.var_mandatory_subjects.set("Accountance/Business_Studies/Economics/Maths/English")
                                self.var_additional_subject.set("Information_Practices/Physical_Education/Entreprenuershp/NONE")
                            else:
                                messagebox.showerror("Error", "This option is available only for CLASS - XI and XII.")
                                self.var_course.set("")

                        # Reset
                        def reset_data(self):
                            self.clear_data()
                            self.var_student_name.set("")
                            self.var_father_name.set("")
                            self.var_father_occupation.set("")
                            self.var_mother_name.set("")
                            self.var_mother_occupation.set("")
                            self.var_year.set("Select Year")
                            self.var_city.set("")
                            self.var_gender.set("Select Gender")
                            self.var_email.set("")
                            self.var_phone.set("")
                            self.var_address.set("")
                            self.var_pin.set("")
                            self.var_course.set("")

                        # Clear
                        def clear_data(self):
                            self.__init__(root_add)

                    if __name__ == "__main__":
                        root_add = Toplevel()
                        obj_add = Add_Student(root_add)
                        root_add.mainloop()

                def show_record(self):
                    class SHOW:

                        def __init__(self, root_show):
                            self.root_show = root_show
                            self.root_show.title("ADD STUDENT DETAILS")
                            self.root_show.geometry("1100x380+150+170")
                            self.root_show.config(bg = "Darkgoldenrod")

                            self.root_show.focus_force()
                            self.root_show.grab_set()
                            self.root_show.resizable(FALSE, FALSE)

                            bg_lbl = Label(self.root_show, bd=2, relief=RIDGE)
                            bg_lbl.place(x = 5, y = 5, width = 1090, height = 370)

                            lbl_title = Label(bg_lbl, text = " <---- SHOW STUDENT DETAILS ----> ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                            lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                            self.btn_add = Button(self.root_show, text = "Add Data", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_show.destroy)
                            self.btn_add.place(x = 15, y = 18, height = 40)

                            self.Main_Frame = Frame(self.root_show, bg = "Navy", bd = 10, relief = GROOVE)
                            self.Main_Frame.place(x = 10 , y = 88, width = 1075, height = 280)

                            style = ttk.Style()
                            style.theme_use("alt")
                            style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                            col_show = ("id", "name", "father", "occupation_father", "mother", "occupation_mother", "year", "city", "gender", "dob", "email", "phone", "address", "pin", "course", "course_id", "class", "mandatory", "additional", "chosen")

                            scroll_x_show = Scrollbar(self.Main_Frame, orient = HORIZONTAL)
                            scroll_x_show.pack(side = BOTTOM, fill = X)

                            scroll_y_show = Scrollbar(self.Main_Frame, orient = VERTICAL)
                            scroll_y_show.pack(side = RIGHT, fill = Y)

                            self.treeview_show = ttk.Treeview(self.Main_Frame, height = 200, show = "headings", columns = col_show, xscrollcommand = scroll_x_show.set, yscrollcommand = scroll_y_show.set)

                            scroll_x_show.config(command = self.treeview_show.xview)
                            scroll_y_show.config(command = self.treeview_show.yview)

                            self.treeview_show.heading("id", text = "Admission ID")
                            self.treeview_show.heading("name", text = "Student Name")
                            self.treeview_show.heading("father", text = "Father Name")
                            self.treeview_show.heading("occupation_father", text = "Father Occupation")
                            self.treeview_show.heading("mother", text = "Mother Name")
                            self.treeview_show.heading("occupation_mother", text = "Mother Occupation")
                            self.treeview_show.heading("year", text = "Year")
                            self.treeview_show.heading("city", text = "City")
                            self.treeview_show.heading("gender", text = "Gender")
                            self.treeview_show.heading("dob", text = "DOB")
                            self.treeview_show.heading("email", text = "Email")
                            self.treeview_show.heading("phone", text = "Phone No")
                            self.treeview_show.heading("address", text = "Address")
                            self.treeview_show.heading("pin", text = "Pin Code")
                            self.treeview_show.heading("course", text = "Course")
                            self.treeview_show.heading("course_id", text = "Course ID")
                            self.treeview_show.heading("class", text = "Class-Section")
                            self.treeview_show.heading("mandatory", text = "Mandatory Subjects")
                            self.treeview_show.heading("additional", text = "Additional Subjects")
                            self.treeview_show.heading("chosen", text = "Chosen Additional Subject")

                            self.treeview_show.column("id", width = 100)
                            self.treeview_show.column("name", width = 150)
                            self.treeview_show.column("father", width = 150)
                            self.treeview_show.column("occupation_father", width = 150)
                            self.treeview_show.column("mother", width = 150)
                            self.treeview_show.column("occupation_mother", width = 150)
                            self.treeview_show.column("year", width = 100)
                            self.treeview_show.column("city", width = 100)
                            self.treeview_show.column("gender", width = 100)
                            self.treeview_show.column("dob", width = 100)
                            self.treeview_show.column("email", width = 170)
                            self.treeview_show.column("phone", width = 100)
                            self.treeview_show.column("address", width = 250)
                            self.treeview_show.column("pin", width = 100)
                            self.treeview_show.column("course", width = 100)
                            self.treeview_show.column("course_id", width = 100)
                            self.treeview_show.column("class", width = 200)
                            self.treeview_show.column("mandatory", width = 500)
                            self.treeview_show.column("additional", width = 400)
                            self.treeview_show.column("chosen", width = 300)

                            self.treeview_show.pack(side = LEFT, fill = BOTH, expand = TRUE)
                            self.Fetch_Data()
                            
                        def Fetch_Data(self):
                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            cursor = mydb.cursor()
                            cursor.execute("SELECT * FROM ADMISSIONS")
                            data = cursor.fetchall()
                            if len(data) != 0:
                                self.treeview_show.delete(*self.treeview_show.get_children())
                                for i in data:
                                    self.treeview_show.insert("", END, values = i)
                                mydb.commit()
                            mydb.close()

                    if __name__ == "__main__":
                        root_show = Toplevel()
                        obj_search = SHOW(root_show)
                        root_show.mainloop()

                def search_record(self):
                    class SEARCH:
                
                        def __init__(self,root_search):
                            self.root_search = root_search
                            self.root_search.title("Search Record")
                            self.root_search.geometry("1100x560+150+10")

                            self.root_search.config(bg = "Darkgoldenrod")
                            self.root_search.focus_force()
                            self.root_search.grab_set()

                            bg_lbl = Label(self.root_search, bd=2, relief=RIDGE)
                            bg_lbl.place(x = 5, y = 5, width = 1090, height = 550)

                            lbl_title = Label(bg_lbl, text = " < ----  SEARCH STUDENT DETAILS  ---- > ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                            lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                            # Variables
                            self.var_admission_id = StringVar()
                            self.var_student_name = StringVar()
                            self.var_father_name = StringVar()
                            self.var_father_occupation = StringVar()
                            self.var_mother_name = StringVar()
                            self.var_mother_occupation = StringVar()
                            self.var_year = StringVar()
                            self.var_city = StringVar()
                            self.var_gender = StringVar()
                            self.var_dob = StringVar()
                            self.var_email = StringVar()
                            self.var_phone = StringVar()
                            self.var_address = StringVar()
                            self.var_pin = StringVar()
                            self.var_course = StringVar()
                            self.var_class_section = StringVar()
                            self.var_course_id = StringVar()
                            self.var_mandatory_subjects = StringVar()
                            self.var_additional_subject = StringVar()
                            self.var_choose_subject = StringVar()
                            self.var_search_option = StringVar()
                            self.var_search = StringVar()

                            self.btn_close = Button(self.root_search, text = "Close", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_search.destroy)
                            self.btn_close.place(x = 15, y = 18, height = 40)

                            # Manage Frame
                            Manage_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                            Manage_Frame.place(x = 20, y = 65, width = 1020, height = 460)

                            # Left Frame
                            DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataLeftFrame.place(x = 20, y = 100, width = 600, height = 350)

                            # Right Frame
                            DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Course Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataRightFrame.place(x = 630, y = 100, width = 350, height = 350)

                            # Button Frame
                            DataButtonFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2)
                            DataButtonFrame.place(x = 5, y = 5, width = 1000, height = 80)

                            # Buttons
                            self.btn_search = Button(DataButtonFrame, text = "  Search  ", font = ("Comic Sans MS", 22, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.search)
                            self.btn_search.place(x = 535, y = 8, height = 60)

                            self.btn_reset = Button(DataButtonFrame, text = "  Reset  ", font = ("Comic Sans MS", 22, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset)
                            self.btn_reset.place(x = 750, y = 8, height = 60)

                            ## Search
                            lbl_search = Label(DataButtonFrame, text = "Search :", font = ("Times New Roman", 20, "bold"))
                            lbl_search.place(x = 10, y = 15)

                            com_txt_search = ttk.Combobox(DataButtonFrame, textvariable = self.var_search_option, font = ("Times New Roman", 17, "bold"), width = 29, height = 20, state = "readonly")
                            com_txt_search["value"] = ("Select Option", "Search Through Admission ID", "Search Through Name")
                            com_txt_search.current(0)
                            com_txt_search.place(x = 150, y = 8)

                            txt_search = ttk.Entry(DataButtonFrame, textvariable  = self.var_search, font = ("Times New Roman", 17, "bold"), width = 30)
                            txt_search.place(x = 151, y = 40)

                            # Student Information
                            ## Admission ID
                            lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_id.place(x = 3, y = 3)

                            txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_id.place(x = 120, y = 3)

                            ## Name
                            lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_name.place(x = 280, y = 3)

                            txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_name.place(x = 425, y = 3)

                            ## Father Name
                            lbl_father_name = Label(DataLeftFrame, text = "Father Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_father_name.place(x = 3, y = 50)

                            txt_father_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_father_name, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_father_name.place(x = 120, y = 50)

                            ## Father Occupation
                            lbl_father_occupation = Label(DataLeftFrame, text = "Father Occupation :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_father_occupation.place(x = 280, y = 50)

                            txt_father_occupation = ttk.Entry(DataLeftFrame, textvariable  = self.var_father_occupation, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_father_occupation.place(x = 425, y = 50)

                            ## Mother Name
                            lbl_mother_name = Label(DataLeftFrame, text = "Mother Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_mother_name.place(x = 3, y = 97)

                            txt_mother_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_mother_name, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_mother_name.place(x = 120, y = 97)

                            ## Mother Occupation
                            lbl_mother_occupation = Label(DataLeftFrame, text = "Mother Occupation :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_mother_occupation.place(x = 280, y = 97)

                            txt_mother_occupation = ttk.Entry(DataLeftFrame, textvariable  = self.var_mother_occupation, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_mother_occupation.place(x = 425, y = 97)

                            ## Year
                            current_year = Label(DataLeftFrame, text = "Academic Year :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            current_year.place(x = 3, y = 144)

                            com_txt_current_year = ttk.Entry(DataLeftFrame, textvariable  = self.var_year, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            com_txt_current_year.place(x = 120, y = 144)

                            ## City
                            lbl_city = Label(DataLeftFrame, text = "City :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_city.place(x = 280, y = 144)

                            txt_city = ttk.Entry(DataLeftFrame, textvariable  = self.var_city, font = ("Times New Roman", 12, "bold"), width = 18)
                            txt_city.place(x = 425, y = 144)

                            ## Gender
                            lbl_gender = Label(DataLeftFrame, text = "Gender :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_gender.place(x = 3, y = 191)

                            com_txt_gender = ttk.Entry(DataLeftFrame, textvariable  = self.var_gender, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            com_txt_gender.place(x = 120, y = 191)

                            ## DOB
                            lbl_dob = Label(DataLeftFrame, text = "DOB :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_dob.place(x = 280, y = 191)

                            cal = ttk.Entry(DataLeftFrame, textvariable = self.var_dob, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            cal.place(x = 425, y = 191)

                            ## Email
                            lbl_email = Label(DataLeftFrame, text = "Email :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_email.place(x = 3, y = 238)

                            txt_email = ttk.Entry(DataLeftFrame, textvariable  = self.var_email, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_email.place(x = 120, y = 238)

                            ## Phone
                            lbl_email = Label(DataLeftFrame, text = "Phone :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_email.place(x = 280, y = 238)

                            txt_email = ttk.Entry(DataLeftFrame, textvariable  = self.var_phone, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_email.place(x = 425, y = 238)

                            ## Address
                            lbl_address = Label(DataLeftFrame, text = "Address :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_address.place(x = 3, y = 285)

                            txt_address = ttk.Entry(DataLeftFrame, textvariable  = self.var_address, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_address.place(x = 120, y = 285)

                            ## Pin Code
                            lbl_pin = Label(DataLeftFrame, text = "Pin Code :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_pin.place(x = 280, y = 285)

                            txt_pin = ttk.Entry(DataLeftFrame, textvariable  = self.var_pin, font = ("Times New Roman", 12, "bold"), width = 18, state = "readonly")
                            txt_pin.place(x = 425, y = 285)

                            # Course Information
                            ## Class
                            lbl_class_section = Label(DataRightFrame, text = "Class - Section :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_class_section.place(x = 3, y = 3)
                            com_txt_class_section = ttk.Entry(DataRightFrame, textvariable  = self.var_class_section, font = ("Times New Roman", 12, "bold"), width = 22, state = "readonly")
                            com_txt_class_section.place(x = 120, y = 3)

                            ## Course
                            course_std = Label(DataRightFrame, text = "Course ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            course_std.place(x = 3, y = 50)
                            com_txtcourse_std = ttk.Entry(DataRightFrame, textvariable  = self.var_course_id, font = ("Times New Roman", 12, "bold"), width = 22, state = "readonly")
                            com_txtcourse_std.place(x = 120, y = 50)

                            ## Mandatory Subjects
                            mandatory_subjects_std = Label(DataRightFrame, text = "Mandatory Subjects :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            mandatory_subjects_std.place(x = 3, y = 97)
                            com_txtmandatory_subjects_std = ttk.Entry(DataRightFrame, textvariable  = self.var_mandatory_subjects, font = ("Times New Roman", 12, "bold"), width = 40, state = "readonly")
                            com_txtmandatory_subjects_std.place(x = 10, y = 130)

                            ## Additional Subject
                            additional_subject_std = Label(DataRightFrame, text = "Additional Subject :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            additional_subject_std.place(x = 3, y = 160)
                            com_txtadditional_subject_std = ttk.Entry(DataRightFrame, textvariable  = self.var_additional_subject, font = ("Times New Roman", 12, "bold"), width = 40, state = "readonly")
                            com_txtadditional_subject_std.place(x = 10, y = 200)

                            ## Choose
                            choose_subject_std = Label(DataRightFrame, text = "Choose One Additional Subject :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            choose_subject_std.place(x = 3, y = 240)
                            com_txtchoose_subject_std = ttk.Entry(DataRightFrame, textvariable  = self.var_choose_subject, font = ("Times New Roman", 12, "bold"), width = 40, state = "readonly")
                            com_txtchoose_subject_std.place(x = 10, y = 280)

                        def search(self):
                            if self.var_search_option.get() == "Search Through Admission ID":
                                if self.var_search.get() != "":
                                    self.search_data_admission()
                                else:
                                    messagebox.showerror("Error", "Field are Required!!")
                            elif self.var_search_option.get() == "Search Through Name":
                                if self.var_search.get != "":
                                    self.search_data_name()
                                else:
                                    messagebox.showerror("Error", "Field are Required!!")
                            else:
                                messagebox.showerror("Error", "Please Choose One Option")
                                self.var_search_option.set("Select Option")
                                self.var_search.set("")

                        def search_data_admission(self):
                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            cursor = mydb.cursor()
                            cursor.execute(f"SELECT * FROM ADMISSIONS WHERE Admission_ID = {self.var_search.get()}")
                            data = cursor.fetchall()
                            if len(data) != 0:
                                for i in data:
                                    self.var_admission_id.set(i[0])
                                    self.var_student_name.set(i[1])
                                    self.var_father_name.set(i[2])
                                    self.var_father_occupation.set(i[3])
                                    self.var_mother_name.set(i[4])
                                    self.var_mother_occupation.set(i[5])
                                    self.var_year.set(i[6])
                                    self.var_city.set(i[7])
                                    self.var_gender.set(i[8])
                                    self.var_dob.set(i[9])
                                    self.var_email.set(i[10])
                                    self.var_phone.set(i[11])
                                    self.var_address.set(i[12])
                                    self.var_pin.set(i[13])
                                    self.var_course_id.set(i[14])
                                    self.var_class_section.set(i[15])
                                    self.var_mandatory_subjects.set(i[16])
                                    self.var_additional_subject.set(i[17])
                                    self.var_choose_subject.set(i[18])
                                mydb.commit()
                            else:
                                messagebox.showerror("Error", "Record Not Exist. \nPlease Enter Correct Admission ID!!")
                            mydb.close()

                        def search_data_name(self):
                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            cursor = mydb.cursor()
                            cursor.execute(f"SELECT * FROM ADMISSIONS WHERE Student_Name = '{self.var_search.get()}'")
                            data = cursor.fetchall()
                            if len(data) != 0:
                                for i in data:
                                    self.var_admission_id.set(i[0])
                                    self.var_student_name.set(i[1])
                                    self.var_father_name.set(i[2])
                                    self.var_father_occupation.set(i[3])
                                    self.var_mother_name.set(i[4])
                                    self.var_mother_occupation.set(i[5])
                                    self.var_year.set(i[6])
                                    self.var_city.set(i[7])
                                    self.var_gender.set(i[8])
                                    self.var_dob.set(i[9])
                                    self.var_email.set(i[10])
                                    self.var_phone.set(i[11])
                                    self.var_address.set(i[12])
                                    self.var_pin.set(i[13])
                                    self.var_course_id.set(i[14])
                                    self.var_class_section.set(i[15])
                                    self.var_mandatory_subjects.set(i[16])
                                    self.var_additional_subject.set(i[17])
                                    self.var_choose_subject.set(i[18])
                                mydb.commit()
                            else:
                                messagebox.showerror("Error", "Record Not Exist. \nPlease Enter Correct Student Name!!")
                            mydb.close()

                        def reset(self):
                            self.__init__(root_search)

                    if __name__ == "__main__":
                        root_search = Toplevel()
                        obj_search = SEARCH(root_search)
                        root_search.mainloop()

                def export_txt(self):
                    class EXPORT_TEXT:

                        def __init__(self,root_txt):
                            self.root_txt = root_txt
                            self.root_txt.title("Export CSV")
                            self.root_txt.geometry("500x250+460+220")

                            self.root_txt.focus_force()
                            self.root_txt.grab_set()
                            self.root_txt.resizable(FALSE,FALSE)

                            # Variables
                            self.var_name_file_old = StringVar()
                            self.var_name_file_new = StringVar()

                            label_main_ = Label(root_txt, text = "Export Text", font = ('arial', 20, 'bold'), bg = "black", fg = "white")
                            label_main_.pack(side = TOP, fill = X)
                            label_main_ = Label(root_txt, text = "", font = ('arial', 15, 'bold'), bg = "black", fg = "white")
                            label_main_.pack(side = BOTTOM, fill = X)

                            label_main__1 = Label(root_txt, text = "Old File Name : ", font = ('arial', 20, 'bold'))
                            label_main__1.place(x = 30, y = 60)
                            old_name_entry = ttk.Entry(root_txt, font = ('arial', 20), textvariable  = self.var_name_file_old)
                            old_name_entry.place(x = 250, y = 60, width = 200, height = 30)
                            old_name_entry.focus()

                            label_main__2 = Label(root_txt, text = "New File Name : ", font = ('arial', 20, 'bold'))
                            label_main__2.place(x = 30, y = 100)
                            new_name_entry = ttk.Entry(root_txt, font = ('arial', 20), textvariable = self.var_name_file_new)
                            new_name_entry.place(x = 250, y = 100, width = 200, height = 30)
                            new_name_entry.focus()

                            btn_save = ttk.Button(root_txt, text = 'Save Data', command = self.Export)
                            btn_save.place(x =170, y = 160, width = 125, height = 30)
                            
                        def Export(self):
                            if self.var_name_file_new.get() == "":
                                messagebox.showerror("Error", "Please Fill New File Name.")
                            else:
                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                cursor = mydb.cursor()
                                cursor.execute("SELECT * FROM ADMISSIONS")
                                read = cursor.fetchall()
                                f = "C:/UTSAV/Python-MySQL/School Management System/"+str(self.var_name_file_old.get())+".txt"
                                file = open(f, "a")
                                file.seek(0)
                                file.truncate()
                                file.close()
                                for i in read:
                                    fl = "C:/UTSAV/Python-MySQL/School Management System/"+str(self.var_name_file_new.get())+".txt"
                                    file = open(fl, "a")
                                    file.write(str(i))
                                    file.write('\n\n')
                                messagebox.showinfo('Success', 'Exported Successfully.')
                                self.root_txt.destroy()
                        
                    if __name__ == "__main__":
                        root_txt = Toplevel()
                        obj_root_txt = EXPORT_TEXT(root_txt)
                        root_txt.mainloop()

            if __name__ == "__main__":
                root_admission = Toplevel()
                obj_admission = Admission(root_admission)
                root_admission.mainloop()

        def student(self):
            class Student:
        
                def __init__(self,root):
                    self.root = root
                    self.root.geometry("1350x700+0+0")
                    self.root.title("STUDENT MANAGEMENT SYSTEM")
                    self.root.configure(bg = "Darkred")

                    # Variables
                    self.var_roll = StringVar()
                    self.var_std_name = StringVar()
                    self.var_class_section = StringVar()
                    self.var_course = StringVar()
                    self.var_year = StringVar()
                    self.var_gender = StringVar()
                    self.var_dob = StringVar()
                    self.var_email = StringVar()
                    self.var_phone = StringVar()
                    self.var_address = StringVar()
                    self.var_teacher = StringVar()
                    self.var_search = StringVar()

                    # 1st
                    img_1 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\1st.jpg")
                    img_1 = img_1.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_1 = ImageTk.PhotoImage(img_1)
                    self.btn_1 = Button(self.root, command = self.open_img_1, image = self.photoimg_1, cursor="hand2")
                    self.btn_1.place(x = 0, y = 0, width = 400, height = 235)

                    # 2nd
                    img_2 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\2nd.jpg")
                    img_2 = img_2.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_2 = ImageTk.PhotoImage(img_2)
                    self.btn_2 = Button(self.root, command = self.open_img_2, image = self.photoimg_2, cursor="hand2")
                    self.btn_2.place(x = 0, y = 235, width = 400, height = 234)

                    # 3rd
                    img_3 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\5th.jpg")
                    img_3 = img_3.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_3 = ImageTk.PhotoImage(img_3)
                    self.btn_3 = Button(self.root, command = self.open_img_3, image = self.photoimg_3, cursor="hand2")
                    self.btn_3.place(x = 0, y = 470, width = 400, height = 235)

                    # 4th
                    img_4 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\university.jpg")
                    img_4 = img_4.resize((970,500), Image.ANTIALIAS)
                    self.photoimg_4 = ImageTk.PhotoImage(img_4)
                    bg_lbl = Label(self.root, image = self.photoimg_4, bd=2, relief=RIDGE)
                    bg_lbl.place(x =400, y = 0, width = 970, height = 450)

                    lbl_title = Label(bg_lbl, text = "STUDENT MANAGEMENT SYSTEM", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 970, height = 60)

                    # Top Left Frame
                    Top_Left_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Top_Left_Frame.place(x = 26, y = 65, width = 700, height = 360)

                    # Top Right Frame
                    Top_Right_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Top_Right_Frame.place(x = 750, y = 65, width = 200, height = 360)

                    search_frame = LabelFrame(Top_Right_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Search Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                    search_frame.place(x = 5, y = 225, width = 185, height = 120)

                    # 5th
                    img_5 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\university.jpg")
                    img_5 = img_5.resize((970,255), Image.ANTIALIAS)
                    self.photoimg_5 = ImageTk.PhotoImage(img_5)
                    bg_lbl = Label(self.root, image = self.photoimg_5, bd=2, relief=RIDGE)
                    bg_lbl.place(x =400, y = 450, width = 970, height = 255)

                    # Bottom Frame
                    Bottom_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Bottom_Frame.place(x = 26, y = 26, width = 920, height = 200)

                    # Current course Label Frame Information
                    std_lbl_info_frame = LabelFrame(Top_Left_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                    std_lbl_info_frame.place(x = 10, y = 10, width = 680, height = 340)

                    # 6th
                    img_6 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\student_images\3rd.jpg")
                    img_6 = img_6.resize((340,230), Image.ANTIALIAS)
                    self.photoimg_6 = ImageTk.PhotoImage(img_6)
                    self.btn_6 = Button(std_lbl_info_frame, command = self.open_img_6, image = self.photoimg_6, cursor="hand2")
                    self.btn_6.place(x = 320, y = 0, width = 340, height = 230)

                    # Student Class Label Frame Information
                    ## Roll No
                    lbl_roll = Label(std_lbl_info_frame, text = "Roll No. :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_roll.place(x = 0, y = 0)
                    txt_roll = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_roll, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_roll.place(x = 120, y = 0)

                    ## Name
                    lbl_name = Label(std_lbl_info_frame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_name.place(x = 0, y = 35)
                    txt_name = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_std_name, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_name.place(x = 120, y = 35)

                    ## Class
                    lbl_class_section = Label(std_lbl_info_frame, text = "Class - Section :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_class_section.place(x = 0, y = 70)
                    com_txt_class_section = ttk.Combobox(std_lbl_info_frame, textvariable  = self.var_class_section, font = ("Times New Roman", 12, "bold"), width = 16, state = "readonly")
                    com_txt_class_section["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                    com_txt_class_section.current(0)
                    com_txt_class_section.place(x = 120, y = 70)

                    btn_Enter = Button(std_lbl_info_frame, command = self.course, text = "↩", width = 3, bg = "Silver", fg = "Black")
                    btn_Enter.place(x = 280, y = 70)

                    ## Course
                    course_std = Label(std_lbl_info_frame, text = "Course :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    course_std.place(x = 0, y = 105)
                    com_txtcourse_std = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_course, font = ("Times New Roman", 12, "bold"), width = 22, state = DISABLED)
                    com_txtcourse_std.place(x = 120, y = 105)

                    ## Year
                    current_year = Label(std_lbl_info_frame, text = "Year :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    current_year.place(x = 0, y = 140)
                    com_txt_current_year = ttk.Combobox(std_lbl_info_frame, textvariable  = self.var_year, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    com_txt_current_year["value"] = ("Select Year", "2020-2021", "2021-2022", "2022-2023", "2023-2024", "2024-2025", "2025-2026", "2026-2027", "2027-2028", "2028-2029", "2029-2030", "2030-2031", "2031-2032", "2032-2033", "2033-2034", "2034-2035", "2035-2036", "2036-2037", "2037-2038", "2038-2039", "2039-2040")
                    com_txt_current_year.current(0)
                    com_txt_current_year.place(x = 120, y = 140)

                    ## Gender
                    lbl_gender = Label(std_lbl_info_frame, text = "Gender :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_gender.place(x = 0, y = 175)
                    com_txt_gender = ttk.Combobox(std_lbl_info_frame, textvariable  = self.var_gender, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    com_txt_gender["values"] = ("Select Gender", "Male", "Female", "Other")
                    com_txt_gender.current(0)
                    com_txt_gender.place(x = 120, y = 175)

                    ## DOB
                    lbl_dob = Label(std_lbl_info_frame, text = "DOB :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_dob.place(x = 0, y = 210)
                    cal = DateEntry(std_lbl_info_frame, selectmode = 'day', textvariable = self.var_dob, font = ("Times New Roman", 12, "bold"), width = 20)
                    cal.place(x = 120, y = 210)

                    ## Email
                    lbl_email = Label(std_lbl_info_frame, text = "Email :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_email.place(x = 0, y = 245)
                    txt_email = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_email, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_email.place(x = 120, y = 245)

                    ## Phone
                    lbl_email = Label(std_lbl_info_frame, text = "Phone :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_email.place(x = 0, y = 280)
                    txt_email = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_phone, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_email.place(x = 120, y = 280)

                    ## Address
                    lbl_address = Label(std_lbl_info_frame, text = "Address :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_address.place(x = 320, y = 245)
                    var_address = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_address, font = ("Times New Roman", 12, "bold"), width = 22)
                    var_address.place(x = 450, y = 245)

                    ## Teacher
                    lbl_teacher = Label(std_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_teacher.place(x = 320, y = 280)
                    var_teacher = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_teacher, font = ("Times New Roman", 12, "bold"), width = 22)
                    var_teacher.place(x = 450, y = 280)

                    # Button Frame
                    btn_frame = Frame(Top_Right_Frame, bd=2, relief=RIDGE, bg="Black")
                    btn_frame.place(x = 5, y = 5, width = 185, height = 215)

                    btn_Add = Button(btn_frame, text = "Save",command = self.add_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Add.grid(row = 0, column = 0, padx = 1)

                    btn_Update = Button(btn_frame, text = "Update", command = self.update_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Update.grid(row = 1, column = 0, padx = 1)

                    btn_Delete = Button(btn_frame, text = "Delete", command = self.delete_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Delete.grid(row = 2, column = 0, padx = 1)

                    btn_Reset = Button(btn_frame, text = "Reset", command = self.reset_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Reset.grid(row = 3, column = 0, padx = 1)

                    btn_Search = Button(btn_frame, text = "Search", command = self.search_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "White")
                    btn_Search.grid(row = 4, column = 0, padx = 1)

                    search_by = Label(search_frame, text = "Roll No :", font = ("Times New Roman", 12, "bold"),fg = "Red",bg = "White")
                    search_by.place(x = 0, y = 0)
                    txt_search = ttk.Entry(search_frame, textvariable = self.var_search, font = ("Times New Roman", 12, "bold"), width = 10)
                    txt_search.place(x = 80, y = 0)

                    btn_Search = Button(search_frame, text = "Search", command = self.search_data, font = ("Arial", 11, "bold"), width = 15, bg = "Blue", fg = "White")
                    btn_Search.place(x = 10, y = 30)

                    btn_ShowAll = Button(search_frame, text = "Show All", command = self.fetch_data, font = ("Arial", 11, "bold"), width = 15, bg = "Blue", fg = "White")
                    btn_ShowAll.place(x = 10, y = 60)

                # ====================Student Table and Scroll Bar====================
                    scroll_x = ttk.Scrollbar(Bottom_Frame, orient = HORIZONTAL)
                    scroll_y = ttk.Scrollbar(Bottom_Frame, orient = VERTICAL)
                    self.student_table = ttk.Treeview(Bottom_Frame, column = ("roll","name","class_section", "course", "year", "gender", "dob", "email", "phone", "address", "teacher"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                    scroll_x.pack(side = BOTTOM, fill = X)
                    scroll_y.pack(side = RIGHT, fill = Y)

                    scroll_x.config(command  = self.student_table.xview)
                    scroll_y.config(command  = self.student_table.yview)

                    style = ttk.Style()
                    style.theme_use("vista")
                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                    self.student_table.heading("roll", text = "Roll No.")
                    self.student_table.heading("name", text = "Student Name")
                    self.student_table.heading("class_section", text = "Class-Section")
                    self.student_table.heading("course", text = "Course")
                    self.student_table.heading("year", text = "Year")
                    self.student_table.heading("gender", text = "Gender")
                    self.student_table.heading("dob", text = "DOB")
                    self.student_table.heading("email", text = "Email")
                    self.student_table.heading("phone", text = "Phone No")
                    self.student_table.heading("address", text = "Address")
                    self.student_table.heading("teacher", text = "Teacher")

                    self.student_table["show"]  ="headings"

                    self.student_table.column("roll", width = 100)
                    self.student_table.column("name", width = 150)
                    self.student_table.column("class_section", width = 120)
                    self.student_table.column("course", width = 190)
                    self.student_table.column("year", width = 100)
                    self.student_table.column("gender", width = 100)
                    self.student_table.column("dob", width = 100)
                    self.student_table.column("email", width = 170)
                    self.student_table.column("phone", width = 100)
                    self.student_table.column("address", width = 250)
                    self.student_table.column("teacher", width = 150)

                    self.student_table.pack(fill = BOTH, expand = 1)
                    self.student_table.bind("<ButtonRelease>", self.get_cursor)
                    self.fetch_data()

                # Add
                def add_data(self):
                    if self.var_course.get() == "":
                        if (self.var_roll.get() == "" or self.var_std_name.get() == "" or self.var_class_section.get() == "" or self.var_year.get() == "" or 
                                self.var_gender.get() == "" or self.var_dob.get() == "" or self.var_phone.get() == "" or self.var_address.get() == "" or 
                                    self.var_teacher.get() == ""):
                            messagebox.showerror("Error", "All Fields are Required!!")
                        else:
                            try:                
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                my_cursor.execute("INSERT INTO STUDENTS (Roll_No, Student_Name, Class_Section, Year, Gender, Date_of_Birth, Email_ID, Phone_No, Address, Teacher_Name) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                            self.var_roll.get(),
                                                                                                                                                                                                                            self.var_std_name.get(),
                                                                                                                                                                                                                            self.var_class_section.get(),
                                                                                                                                                                                                                            self.var_year.get(),
                                                                                                                                                                                                                            self.var_gender.get(),
                                                                                                                                                                                                                            self.var_dob.get(),
                                                                                                                                                                                                                            self.var_email.get(),
                                                                                                                                                                                                                            self.var_phone.get(),
                                                                                                                                                                                                                            self.var_address.get(),
                                                                                                                                                                                                                            self.var_teacher.get()
                                                                                                                                                                                                                        ))
                                conn.commit()
                                self.fetch_data()
                                conn.close()
                                messagebox.showinfo("Success", "Student Record Added Succesfully!", parent = self.root)
                            except Exception as es:
                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)
                    elif self.var_course.get() != "":
                        if (self.var_roll.get() == "" or self.var_std_name.get() == "" or self.var_class_section.get() == "" or self.var_year.get() == "" or 
                                self.var_gender.get() == "" or self.var_dob.get() == "" or self.var_phone.get() == "" or self.var_address.get() == "" or 
                                    self.var_teacher.get() == ""):
                            messagebox.showerror("Error", "All Fields are Required!!")
                        else:
                            try:                
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                my_cursor.execute("INSERT INTO STUDENTS (Roll_No, Student_Name, Class_Section, Course, Year, Gender, Date_of_Birth, Email_ID, Phone_No, Address, Teacher_Name) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                            self.var_roll.get(),
                                                                                                                                                                                                                            self.var_std_name.get(),
                                                                                                                                                                                                                            self.var_class_section.get(),
                                                                                                                                                                                                                            self.var_course.get(),
                                                                                                                                                                                                                            self.var_year.get(),
                                                                                                                                                                                                                            self.var_gender.get(),
                                                                                                                                                                                                                            self.var_dob.get(),
                                                                                                                                                                                                                            self.var_email.get(),
                                                                                                                                                                                                                            self.var_phone.get(),
                                                                                                                                                                                                                            self.var_address.get(),
                                                                                                                                                                                                                            self.var_teacher.get()
                                                                                                                                                                                                                        ))
                                conn.commit()
                                self.fetch_data()
                                conn.close()
                                messagebox.showinfo("Success", "Student Record Added Succesfully!", parent = self.root)
                            except Exception as es:
                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)
                    else:
                        pass

                # Fetch Function
                def fetch_data(self):
                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                    my_cursor = conn.cursor()
                    my_cursor.execute("SELECT * FROM STUDENTS")
                    data = my_cursor.fetchall()
                    if len(data) != 0:
                        self.student_table.delete(*self.student_table.get_children())
                        for i in data:
                            self.student_table.insert("", END, values = i)
                        conn.commit()
                        self.reset_data()
                        self.var_search.set("")
                    conn.close()
                
                # Get Cursor
                def get_cursor(self, event = ""):
                    cursor_row = self.student_table.focus()
                    content = self.student_table.item(cursor_row)
                    data = content["values"]

                    self.var_roll.set(data[0])
                    self.var_std_name.set(data[1])
                    self.var_class_section.set(data[2])
                    self.var_course.set(data[3])
                    self.var_year.set(data[4])
                    self.var_gender.set(data[5])
                    self.var_dob.set(data[6])
                    self.var_email.set(data[7])
                    self.var_phone.set(data[8])
                    self.var_address.set(data[9])
                    self.var_teacher.set(data[10])
                
                # Update
                def update_data(self):
                    if (self.var_course.get() == "" or self.var_year.get() == "" or self.var_std_name.get() == "" or 
                            self.var_roll.get() == "" or self.var_gender.get() == "" or self.var_dob.get() == "" or self.var_email.get() == "" or 
                                    self.var_phone.get() == "" or self.var_address.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root)
                            if update>0:
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                my_cursor.execute("UPDATE STUDENTS set Student_Name = %s, Class_Section = %s, Course = %s, Year = %s, Gender = %s, Date_of_Birth = %s, Email_ID = %s, Phone_No = %s, Address = %s where Roll_No = %s", (

                                                                                                                                                                                                                                                        self.var_std_name.get(),
                                                                                                                                                                                                                                                        self.var_class_section.get(),
                                                                                                                                                                                                                                                        self.var_course.get(),
                                                                                                                                                                                                                                                        self.var_year.get(),
                                                                                                                                                                                                                                                        self.var_gender.get(),
                                                                                                                                                                                                                                                        self.var_dob.get(),
                                                                                                                                                                                                                                                        self.var_email.get(),
                                                                                                                                                                                                                                                        self.var_phone.get(),
                                                                                                                                                                                                                                                        self.var_address.get(),
                                                                                                                                                                                                                                                        self.var_roll.get()

                                                                                                                                                                                                                                                            ))
                            else:
                                if not update:
                                    return
                            conn.commit()
                            self.fetch_data()
                            conn.close()

                            messagebox.showinfo("Success", "Student Data Updated Successfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Search
                def search_data(self):
                    if self.var_search.get() == "":
                        messagebox.showerror("Error", "Please Enter Roll No For Searching!!")
                    else:
                        try:
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            sql = "SELECT * FROM STUDENTS WHERE ROLL_NO='%s'"%self.var_search.get()
                            my_cursor.execute(sql)
                            data = my_cursor.fetchone()
                            if len(data) != 0:
                                self.student_table.delete(*self.student_table.get_children())
                                self.student_table.insert("", END, values = data)
                                conn.commit()
                            conn.close()
                            self.reset_data()
                            self.var_roll.set(data[0])
                            self.var_std_name.set(data[1])
                            self.var_class_section.set(data[2])
                            self.var_course.set(data[3])
                            self.var_year.set(data[4])
                            self.var_gender.set(data[5])
                            self.var_dob.set(data[6])
                            self.var_email.set(data[7])
                            self.var_phone.set(data[8])
                            self.var_address.set(data[9])
                            self.var_teacher.set(data[10])
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Delete
                def delete_data(self):
                    if self.var_roll.get() == "":
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                            if delete>0:
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                sql = "DELETE FROM STUDENTS WHERE ROLL_NO= %s"
                                value = (self.var_roll.get(),)
                                my_cursor.execute(sql,value)
                            else:
                                if not delete:
                                    return
                            conn.commit()
                            conn.close()
                            self.clear()
                            messagebox.showinfo("Success", "Student Data Deleted Successfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)
                    
                # Reset
                def reset_data(self):
                    self.var_roll.set("")
                    self.var_std_name.set("")
                    self.var_class_section.set("Select Class-Section")
                    self.var_course.set("")
                    self.var_year.set("Select Year")
                    self.var_gender.set("Select Gender")
                    self.var_dob.set("")
                    self.var_email.set("")
                    self.var_phone.set("")
                    self.var_address.set("")
                    self.var_teacher.set("")

                # Clear
                def clear(self):
                    self.__init__(root)

                # Course
                def course(self):
                    if self.var_class_section.get() == "Class XII - Section A" or self.var_class_section.get() == "Class XI - Section A":
                        self.var_course.set("PCM with CS")
                    elif self.var_class_section.get() == "Class XII - Section B" or self.var_class_section.get() == "Class XI - Section B":
                        self.var_course.set("PCBM with P. Ed.")
                    elif self.var_class_section.get() == "Class XII - Section C" or self.var_class_section.get() == "Class XI - Section C":
                        self.var_course.set("Commerce with CS/P. Ed.")
                    elif self.var_class_section.get() == "Class XII - Section D" or self.var_class_section.get() == "Class XI - Section D":
                        self.var_course.set("Commerce with Entreprenuership")
                    else:
                        messagebox.showerror("Error", "This option is available only for CLASS - XI and XII.")
                        self.var_course.set("")

                # open image 1
                def open_img_1(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_1 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_1 = ImageTk.PhotoImage(img_browse_1)
                    self.btn_1.config(image = self.photoimg_browse_1)
                
                # open image 2
                def open_img_2(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_2 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_2 = ImageTk.PhotoImage(img_browse_2)
                    self.btn_2.config(image = self.photoimg_browse_2)

                # open image 3 
                def open_img_3(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_3 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_3 = ImageTk.PhotoImage(img_browse_3)
                    self.btn_3.config(image = self.photoimg_browse_3)

                # open image 6
                def open_img_6(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_6 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_6 = ImageTk.PhotoImage(img_browse_6)
                    self.btn_5.config(image = self.photoimg_browse_6)

            if __name__ == "__main__":
                root = Toplevel()
                obj = Student(root)
                root.mainloop()

        def teacher(self):
            class Teacher:
        
                def __init__(self,root):
                    self.root = root
                    self.root.geometry("1350x700+0+0")
                    self.root.title("TEACHER MANAGEMENT SYSTEM")

                    self.root.configure(bg = "Darkred")

                    # Variables
                    self.var_tech_id = StringVar()
                    self.var_tech_name = StringVar()
                    self.var_dep = StringVar()
                    self.var_post = StringVar()
                    self.var_gender = StringVar()
                    self.var_dob = StringVar()
                    self.var_email = StringVar()
                    self.var_phone = StringVar()
                    self.var_address = StringVar()
                    self.var_class_tech = StringVar()
                    self.var_subjects = StringVar()
                    self.var_search = StringVar()

                    # 1st
                    img_1 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\1st.jpg")
                    img_1 = img_1.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_1 = ImageTk.PhotoImage(img_1)

                    self.btn_1 = Button(self.root, command = self.open_img_1, image = self.photoimg_1, cursor="hand2")
                    self.btn_1.place(x = 0, y = 0, width = 400, height = 235)

                    # 2nd
                    img_2 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\2nd.jpg")
                    img_2 = img_2.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_2 = ImageTk.PhotoImage(img_2)

                    self.btn_2 = Button(self.root, command = self.open_img_2, image = self.photoimg_2, cursor="hand2")
                    self.btn_2.place(x = 0, y = 235, width = 400, height = 234)

                    # 3rd
                    img_3 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\4th.jpg")
                    img_3 = img_3.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_3 = ImageTk.PhotoImage(img_3)

                    self.btn_3 = Button(self.root, command = self.open_img_3, image = self.photoimg_3, cursor="hand2")
                    self.btn_3.place(x = 0, y = 470, width = 400, height = 235)

                    # 4th
                    img_4 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\university.jpg")
                    img_4 = img_4.resize((970,500), Image.ANTIALIAS)
                    self.photoimg_4 = ImageTk.PhotoImage(img_4)

                    bg_lbl = Label(self.root, image = self.photoimg_4, bd=2, relief=RIDGE)
                    bg_lbl.place(x =400, y = 0, width = 970, height = 450)

                    lbl_title = Label(bg_lbl, text = "TEACHER MANAGEMENT SYSTEM", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 970, height = 60)

                    # Top Left Frame
                    Top_Left_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Top_Left_Frame.place(x = 26, y = 65, width = 700, height = 360)

                    # Top Right Frame
                    Top_Right_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Top_Right_Frame.place(x = 750, y = 65, width = 200, height = 360)

                    search_frame = LabelFrame(Top_Right_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Search Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                    search_frame.place(x = 5, y = 225, width = 185, height = 120)

                    # 5th
                    img_5 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\university.jpg")
                    img_5 = img_5.resize((970,255), Image.ANTIALIAS)
                    self.photoimg_5 = ImageTk.PhotoImage(img_5)

                    bg_lbl = Label(self.root, image = self.photoimg_5, bd=2, relief=RIDGE)
                    bg_lbl.place(x =400, y = 450, width = 970, height = 255)

                    # Bottom Frame
                    Bottom_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                    Bottom_Frame.place(x = 26, y = 26, width = 920, height = 200)

                    # Current course Label Frame Information
                    tech_lbl_info_frame = LabelFrame(Top_Left_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Teacher Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                    tech_lbl_info_frame.place(x = 10, y = 10, width = 680, height = 340)

                    # 6th
                    img_6 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\teacher_images\3rd.jpg")
                    img_6 = img_6.resize((340,230), Image.ANTIALIAS)
                    self.photoimg_6 = ImageTk.PhotoImage(img_6)

                    self.btn_6 = Button(tech_lbl_info_frame, command = self.open_img_6, image = self.photoimg_6, cursor="hand2")
                    self.btn_6.place(x = 320, y = 0, width = 340, height = 230)

                    # Teacher Class Label Frame Information
                    ## Teacher ID
                    lbl_tech_id = Label(tech_lbl_info_frame, text = "Teacher ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_tech_id.place(x = 0, y = 0)
                    txt_tech_id = ttk.Entry(tech_lbl_info_frame, textvariable  = self.var_tech_id, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_tech_id.place(x = 120, y = 0)

                    ## Name
                    lbl_tech_name = Label(tech_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_tech_name.place(x = 0, y = 35)

                    txt_tech_name = ttk.Entry(tech_lbl_info_frame, textvariable  = self.var_tech_name, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_tech_name.place(x = 120, y = 35)

                    ## Department
                    lbl_dep = Label(tech_lbl_info_frame, text = "Department :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_dep.place(x = 0, y = 70)

                    combo_dep = ttk.Combobox(tech_lbl_info_frame, textvariable  = self.var_dep, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    combo_dep["value"] = ("Select Department", "Computer Science", "IT", "History", "Law", "Business", "Philosophy", "Mathematics", "Physics", "Chemistry", "Space Sciences", "Earth Sciences", "Medical", "Management", "Software Engineering", "Architecture", "NONE")
                    combo_dep.current(0)
                    combo_dep.place(x = 120, y = 70)

                    ## Class Teacher
                    lbl_class_tech = Label(tech_lbl_info_frame, text = "Class Teacher :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_class_tech.place(x = 0, y = 105)

                    com_txt_class_tech = ttk.Combobox(tech_lbl_info_frame, textvariable  = self.var_class_tech, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    com_txt_class_tech["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D", "NONE")
                    com_txt_class_tech.current(0)
                    com_txt_class_tech.place(x = 120, y = 105)

                    ## Teaching Post
                    lbl_teaching_post = Label(tech_lbl_info_frame, text = "Teaching Post :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_teaching_post.place(x = 0, y = 140)

                    txt_teaching_post = ttk.Combobox(tech_lbl_info_frame, textvariable  = self.var_post, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    txt_teaching_post["values"] = ("Select Post", "NTT", "PRT", "TGT", "PGT")
                    txt_teaching_post.current(0)
                    txt_teaching_post.place(x = 120, y = 140)

                    ## Gender
                    lbl_gender = Label(tech_lbl_info_frame, text = "Gender :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_gender.place(x = 0, y = 175)

                    com_txt_gender = ttk.Combobox(tech_lbl_info_frame, textvariable  = self.var_gender, font = ("Times New Roman", 12, "bold"), width = 20, state = "readonly")
                    com_txt_gender["values"] = ("Select Gender", "Male", "Female", "Other")
                    com_txt_gender.current(0)
                    com_txt_gender.place(x = 120, y = 175)

                    ## DOB
                    lbl_dob = Label(tech_lbl_info_frame, text = "DOB :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_dob.place(x = 0, y = 210)

                    cal = DateEntry(tech_lbl_info_frame, selectmode = 'day', textvariable = self.var_dob, font = ("Times New Roman", 12, "bold"), width = 20)
                    cal.place(x = 120, y = 210)

                    ## Email
                    lbl_email = Label(tech_lbl_info_frame, text = "Email :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_email.place(x = 0, y = 245)

                    txt_email = ttk.Entry(tech_lbl_info_frame, textvariable  = self.var_email, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_email.place(x = 120, y = 245)

                    ## Phone
                    lbl_phone = Label(tech_lbl_info_frame, text = "Phone :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_phone.place(x = 0, y = 280)

                    txt_phone = ttk.Entry(tech_lbl_info_frame, textvariable  = self.var_phone, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_phone.place(x = 120, y = 280)

                    ## Address
                    lbl_address = Label(tech_lbl_info_frame, text = "Address :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_address.place(x = 320, y = 245)

                    self.txt_address = ttk.Entry(tech_lbl_info_frame,textvariable = self.var_address, font = ("Times New Roman", 12, "bold"), width = 22)
                    self.txt_address.place(x = 450, y = 245)

                    ## Subjects
                    lbl_subjects = Label(tech_lbl_info_frame, text = "Subjects :", font = ("Times New Roman", 12, "bold"), bg = "White")
                    lbl_subjects.place(x = 320, y = 280)

                    txt_subjects = ttk.Entry(tech_lbl_info_frame, textvariable  = self.var_subjects, font = ("Times New Roman", 12, "bold"), width = 22)
                    txt_subjects.place(x = 450, y = 280)

                    # Button Frame
                    btn_frame = Frame(Top_Right_Frame, bd=2, relief=RIDGE, bg="Black")
                    btn_frame.place(x = 5, y = 5, width = 185, height = 215)

                    btn_Add = Button(btn_frame, text = "Save",command = self.add_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Add.grid(row = 0, column = 0, padx = 1)

                    btn_Update = Button(btn_frame, text = "Update", command = self.update_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Update.grid(row = 1, column = 0, padx = 1)

                    btn_Delete = Button(btn_frame, text = "Delete", command = self.delete_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Delete.grid(row = 2, column = 0, padx = 1)

                    btn_Reset = Button(btn_frame, text = "Reset", command = self.reset_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "Grey")
                    btn_Reset.grid(row = 3, column = 0, padx = 1)

                    btn_Search = Button(btn_frame, text = "Search", command = self.search_data, font = ("Arial", 15, "bold"), width = 14, bg = "Orange", fg = "White")
                    btn_Search.grid(row = 4, column = 0, padx = 1)

                    search_by = Label(search_frame, text = "Teacher ID :", font = ("Times New Roman", 12, "bold"),fg = "Red",bg = "White")
                    search_by.place(x = 0, y = 0)
                    txt_search = ttk.Entry(search_frame, textvariable = self.var_search, font = ("Times New Roman", 12, "bold"), width = 9)
                    txt_search.place(x = 90, y = 0)

                    btn_Search = Button(search_frame, text = "Search", command = self.search_data, font = ("Arial", 11, "bold"), width = 15, bg = "Blue", fg = "White")
                    btn_Search.place(x = 10, y = 30)

                    btn_ShowAll = Button(search_frame, text = "Show All", command = self.fetch_data, font = ("Arial", 11, "bold"), width = 15, bg = "Blue", fg = "White")
                    btn_ShowAll.place(x = 10, y = 60)

                    # ====================Teacher Table and Scroll Bar====================
                    scroll_x = ttk.Scrollbar(Bottom_Frame, orient = HORIZONTAL)
                    scroll_y = ttk.Scrollbar(Bottom_Frame, orient = VERTICAL)
                    self.teacher_table = ttk.Treeview(Bottom_Frame, column = ("id","name","dep", "post", "gender", "dob", "email", "phone", "address", "teacher", "subject"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                    scroll_x.pack(side = BOTTOM, fill = X)
                    scroll_y.pack(side = RIGHT, fill = Y)

                    scroll_x.config(command  = self.teacher_table.xview)
                    scroll_y.config(command  = self.teacher_table.yview)

                    style = ttk.Style()
                    style.theme_use("vista")
                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                    self.teacher_table.heading("id", text = "Teacher ID")
                    self.teacher_table.heading("name", text = "Teacher Name")
                    self.teacher_table.heading("dep", text = "Department")
                    self.teacher_table.heading("post", text = "Post")
                    self.teacher_table.heading("gender", text = "Gender")
                    self.teacher_table.heading("dob", text = "DOB")
                    self.teacher_table.heading("email", text = "Email")
                    self.teacher_table.heading("phone", text = "Phone No")
                    self.teacher_table.heading("address", text = "Address")
                    self.teacher_table.heading("teacher", text = "Class Teacher")
                    self.teacher_table.heading("subject", text = "Subjects")

                    self.teacher_table["show"]  ="headings"

                    self.teacher_table.column("id", width = 100)
                    self.teacher_table.column("name", width = 150)
                    self.teacher_table.column("dep", width = 100)
                    self.teacher_table.column("post", width = 100)
                    self.teacher_table.column("gender", width = 100)
                    self.teacher_table.column("dob", width = 100)
                    self.teacher_table.column("email", width = 170)
                    self.teacher_table.column("phone", width = 100)
                    self.teacher_table.column("address", width = 250)
                    self.teacher_table.column("teacher", width = 150)
                    self.teacher_table.column("subject", width = 250)

                    self.teacher_table.pack(fill = BOTH, expand = 1)
                    self.teacher_table.bind("<ButtonRelease>", self.get_cursor)
                    self.fetch_data()

                # Add
                def add_data(self):
                    if (self.var_tech_id.get() == "" or self.var_tech_name.get() == "" or self.var_post.get() == "" or self.var_gender.get() == "" or 
                            self.var_email.get() == "" or self.var_phone.get() == "" or self.var_address.get() == "" or self.var_class_tech.get() == "" or 
                                self.var_subjects.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            my_cursor.execute("INSERT INTO TEACHER VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                            self.var_tech_id.get(),
                                                                                                                            self.var_tech_name.get(),
                                                                                                                            self.var_dep.get(),
                                                                                                                            self.var_post.get(),
                                                                                                                            self.var_gender.get(),
                                                                                                                            self.var_dob.get(),
                                                                                                                            self.var_email.get(),
                                                                                                                            self.var_phone.get(),
                                                                                                                            self.var_address.get(),
                                                                                                                            self.var_class_tech.get(),
                                                                                                                            self.var_subjects.get()
                                                                                                                    ))
                            conn.commit()
                            self.fetch_data()
                            conn.close()
                            messagebox.showinfo("Success", "Teacher Record Added Succesfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Fetch Function
                def fetch_data(self):
                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                    my_cursor = conn.cursor()
                    my_cursor.execute("SELECT * FROM TEACHER")
                    data = my_cursor.fetchall()
                    if len(data) != 0:
                        self.teacher_table.delete(*self.teacher_table.get_children())
                        for i in data:
                            self.teacher_table.insert("", END, values = i)
                        conn.commit()
                        self.reset_data()
                        self.var_search.set("")
                    conn.close()
                
                # Get Cursor
                def get_cursor(self, event = ""):
                    cursor_row = self.teacher_table.focus()
                    content = self.teacher_table.item(cursor_row)
                    data = content["values"]

                    self.var_tech_id.set(data[0])
                    self.var_tech_name.set(data[1])
                    self.var_dep.set(data[2])
                    self.var_post.set(data[3])
                    self.var_gender.set(data[4])
                    self.var_dob.set(data[5])
                    self.var_email.set(data[6])
                    self.var_phone.set(data[7])
                    self.var_address.set(data[8])
                    self.var_class_tech.set(data[9])
                    self.var_subjects.set(data[10])
                
                # Update
                def update_data(self):
                    if (self.var_tech_id.get() == "" or self.var_tech_name.get() == "" or self.var_dep.get() == "" or self.var_post.get() == "" or 
                            self.var_gender.get() == "" or self.var_dob.get() == "" or self.var_email.get() == "" or self.var_phone.get() == "" or 
                                    self.var_address.get() == "" or self.var_class_tech.get() == "" or self.var_subjects.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            update = messagebox.askyesno("Update", "Are You Sure Update This Teacher Data", parent = self.root)
                            if update>0:
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                my_cursor.execute("UPDATE TEACHER set Teacher_Name = %s, Department = %s, Teacher_Post = %s, Gender = %s, Date_of_Birth = %s, Email_ID = %s, Phone_No = %s, Address = %s, Class_Teacher = %s, Subjects = %s where Teacher_ID = %s", (

                                                                                                                                                                                                                                                        self.var_tech_name.get(),
                                                                                                                                                                                                                                                        self.var_dep.get(),
                                                                                                                                                                                                                                                        self.var_post.get(),
                                                                                                                                                                                                                                                        self.var_gender.get(),
                                                                                                                                                                                                                                                        self.var_dob.get(),
                                                                                                                                                                                                                                                        self.var_email.get(),
                                                                                                                                                                                                                                                        self.var_phone.get(),
                                                                                                                                                                                                                                                        self.var_address.get(),
                                                                                                                                                                                                                                                        self.var_class_tech.get(),
                                                                                                                                                                                                                                                        self.var_subjects.get(),
                                                                                                                                                                                                                                                        self.var_tech_id.get()

                                                                                                                                                                                                                                                            ))
                            else:
                                if not update:
                                    return
                            conn.commit()
                            self.fetch_data()
                            conn.close()

                            messagebox.showinfo("Success", "Teacher Data Updated Successfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Search
                def search_data(self):
                    if self.var_search.get() == "":
                        messagebox.showerror("Error", "Please Enter Teacher_ID For Searching!!")
                    else:
                        try:
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            sql = "SELECT * FROM TEACHER WHERE Teacher_ID='%s'"%self.var_search.get()
                            my_cursor.execute(sql)
                            data = my_cursor.fetchone()
                            if len(data) != 0:
                                self.teacher_table.delete(*self.teacher_table.get_children())
                                self.teacher_table.insert("", END, values = data)
                                conn.commit()
                            conn.close()
                            self.reset_data()
                            self.var_tech_id.set(data[0])
                            self.var_tech_name.set(data[1])
                            self.var_dep.set(data[2])
                            self.var_post.set(data[3])
                            self.var_gender.set(data[4])
                            self.var_dob.set(data[5])
                            self.var_email.set(data[6])
                            self.var_phone.set(data[7])
                            self.var_address.set(data[8])
                            self.var_class_tech.set(data[9])
                            self.var_subjects.set(data[10])
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Delete
                def delete_data(self):
                    if self.var_tech_id.get() == "":
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Teacher Data")
                            if delete>0:
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                sql = "DELETE FROM TEACHER WHERE Teacher_ID= %s"
                                value = (self.var_tech_id.get(),)
                                my_cursor.execute(sql,value)
                            else:
                                if not delete:
                                    return
                            conn.commit()
                            conn.close()
                            self.clear()
                            messagebox.showinfo("Success", "Teacher Data Deleted Successfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)
                    
                # Reset
                def reset_data(self):
                    self.var_tech_id.set("")
                    self.var_tech_name.set("")
                    self.var_dep.set("Select Department")
                    self.var_post.set("Select Post")
                    self.var_gender.set("Select Gender")
                    self.var_dob.set("")
                    self.var_email.set("")
                    self.var_phone.set("")
                    self.var_address.set("")
                    self.var_class_tech.set("")
                    self.var_subjects.set("")

                # Clear
                def clear(self):
                    self.__init__(root)

                # open image 1
                def open_img_1(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_1 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_1 = ImageTk.PhotoImage(img_browse_1)
                    self.btn_1.config(image = self.photoimg_browse_1)
                
                # open image 2
                def open_img_2(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_2 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_2 = ImageTk.PhotoImage(img_browse_2)
                    self.btn_2.config(image = self.photoimg_browse_2)

                # open image 3 
                def open_img_3(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_3 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_3 = ImageTk.PhotoImage(img_browse_3)
                    self.btn_3.config(image = self.photoimg_browse_3)

                # open image 6
                def open_img_6(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(),title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse_6 = img.resize((400,232), Image.ANTIALIAS)
                    self.photoimg_browse_6 = ImageTk.PhotoImage(img_browse_6)
                    self.btn_5.config(image = self.photoimg_browse_6)

            if __name__ == "__main__":
                root = Toplevel()
                obj = Teacher(root)
                root.mainloop()

        def exam_management(self):
            class EXAM:
        
                def __init__(self,root_exam):
                    self.root_exam = root_exam
                    self.root_exam.title("Exam Management System")
                    self.root_exam.geometry("1350x700+0+0")

                    self.root_exam.focus_force()
                    self.root_exam.grab_set()
                    self.root_exam.config(bg = "Darkred")

                    bg_lbl = Label(self.root_exam, bd=2, relief = RIDGE, bg = "Darkgoldenrod")
                    bg_lbl.place(x = 5, y = 5, width = 1340, height = 690)

                    lbl_title = Label(bg_lbl, text = " <---- EXAM MANAGEMENT SYSTEM ----> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 1335, height = 70)

                    # bg image
                    img = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\exam_management_images\Quote_2.jpg")
                    img = img.resize((1325,600), Image.ANTIALIAS)
                    self.photoimg = ImageTk.PhotoImage(img)
                    self.btn = Button(self.root_exam, image = self.photoimg, cursor="hand2")
                    self.btn.place(x = 10, y = 85, width = 1325, height = 600)

                    btn_1 = Button(self.root_exam, text = "Add Exam Data", font = ("Handlee", 35, "bold"), bg = "Black", fg = "white", bd = 13, relief = RAISED, cursor = "hand2", command = self.add)
                    btn_1.place(x = 850, y = 130, width = 350)

                    btn_2 = Button(self.root_exam, text = "Search Record", font = ("Handlee", 35, "bold"), bg = "Black", fg = "white", bd = 13, relief = RAISED, cursor = "hand2", command = self.search_record)
                    btn_2.place(x = 850, y = 290, width = 350)

                    btn_4 = Button(self.root_exam, text = "Export Data To Excel", font = ("Handlee", 35, "bold"), bg = "Black", fg = "white", bd = 13, relief = RAISED, cursor = "hand2", command = self.export)
                    btn_4.place(x = 800, y = 450, width = 460)

                def add(self):
                    class ADD:
                
                        def __init__(self,root_add):
                            self.root_add = root_add
                            self.root_add.title("Add Record")
                            self.root_add.geometry("1100x500+150+100")

                            self.root_add.focus_force()
                            self.root_add.grab_set()
                            self.root_add.resizable(FALSE, FALSE)

                            bg_lbl_add = Label(self.root_add, bd=2, relief=RIDGE)
                            bg_lbl_add.place(x = 5, y = 5, width = 1090, height = 490)

                            lbl_title_add = Label(bg_lbl_add, text = " <---- ADD RECORD ----> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                            lbl_title_add.place(x = 0, y = 0, width = 1085, height = 60)

                            self.btn_close = Button(self.root_add, text = "Close", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_add.destroy)
                            self.btn_close.place(x = 15, y = 18, height = 40)

                            # bg image
                            img = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\exam_management_images\Quote_1.jpg")
                            img = img.resize((1090,450), Image.ANTIALIAS)
                            self.photoimg = ImageTk.PhotoImage(img)
                            self.btn = Button(self.root_add, image = self.photoimg, cursor="hand2")
                            self.btn.place(x = 5, y = 68, width = 1090, height = 430)

                            btn_1 = Button(self.root_add, text = "Class\nNursery-UKG", font = ("Handlee", 20, "bold"), bg = "Black", fg = "white", bd = 13, relief = SUNKEN, cursor = "hand2", command = self.class_nur_ukg)
                            btn_1.place(x = 10, y = 68, width = 216, height = 115)

                            btn_2 = Button(self.root_add, text = "Class\n1st to 5th", font = ("Handlee", 20, "bold"), bg = "Black", fg = "white", bd = 13, relief = SUNKEN, cursor = "hand2", command = self.class_1_5)
                            btn_2.place(x = 225, y = 68, width = 216, height = 115)

                            btn_3 = Button(self.root_add, text = "Class\n6th to 8th", font = ("Handlee", 20, "bold"), bg = "Black", fg = "white", bd = 13, relief = SUNKEN, cursor = "hand2", command = self.class_6_8)
                            btn_3.place(x = 441, y = 68, width = 216, height = 115)

                            btn_4 = Button(self.root_add, text = "Class\n9th and 10th", font = ("Handlee", 20, "bold"), bg = "Black", fg = "white", bd = 13, relief = SUNKEN, cursor = "hand2", command = self.class_9_10)
                            btn_4.place(x = 657, y = 68, width = 216, height = 115)

                            btn_5 = Button(self.root_add, text = "Class\n11th and 12th", font = ("Handlee", 20, "bold"), bg = "Black", fg = "white", bd = 13, relief = SUNKEN, cursor = "hand2", command = self.class_11_12)
                            btn_5.place(x = 873, y = 68, width = 216, height = 115)

                            messagebox.showinfo("Class", "Choose Class for Continuing")

                        def class_nur_ukg(self):
                            class Nur_ukg:

                                def __init__(self,root_nur_ukg):
                                    self.root_nur_ukg = root_nur_ukg
                                    self.root_nur_ukg.title("Class Pre-Nursery & UKG")
                                    self.root_nur_ukg.geometry("1100x650+150+20")
                                    self.root_nur_ukg.config(bg = "Saddlebrown")
                                    
                                    self.root_nur_ukg.focus_force()
                                    self.root_nur_ukg.grab_set()
                                    self.root_nur_ukg.resizable(FALSE, FALSE)

                                    bg_lbl_nur_ukg = Label(self.root_nur_ukg, bd=2, relief=RIDGE)
                                    bg_lbl_nur_ukg.place(x = 5, y = 5, width = 1090, height = 640)

                                    lbl_title_nur_ukg = Label(bg_lbl_nur_ukg, text = " <-- Class Pre-Nursery & UKG --> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                    lbl_title_nur_ukg.place(x = 0, y = 0, width = 1085, height = 65)

                                    self.btn_close = Button(self.root_nur_ukg, text = "Close", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_nur_ukg.destroy)
                                    self.btn_close.place(x = 18, y = 18, height = 45)

                                    # Manage Frame
                                    Manage_Frame = Frame(bg_lbl_nur_ukg, bd=2, relief=RIDGE, bg="White")
                                    Manage_Frame.place(x = 5, y = 65, width = 1080, height = 565)

                                    # Left Frame
                                    DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataLeftFrame.place(x = 20, y = 0, width = 750, height = 350)

                                    # Right Frame
                                    DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataRightFrame.place(x = 820, y = 0, width = 200, height = 350)

                                    # Bottom Frame
                                    DataBottomFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                                    DataBottomFrame.place(x = 0, y = 370, width = 1075, height = 175)

                                    # Variables
                                    self.var_admission_id = StringVar()
                                    self.var_student_name = StringVar()
                                    self.var_class = StringVar()
                                    self.var_percentage = StringVar()
                                    self.var_english = StringVar()
                                    self.var_hindi = StringVar()
                                    self.var_maths = StringVar()
                                    self.var_drawing = StringVar()
                                    self.var_general_awareness = StringVar()
                                    self.var_environmental_awareness = StringVar()
                                    self.var_total_marks = StringVar()
                                    self.var_remarks = StringVar()

                                    # Student Information
                                    lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_id.place(x = 3, y = 3)

                                    txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_id.place(x = 120, y = 3, width = 200)

                                    ## Name
                                    lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 3)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 3, width = 200)

                                    ## Class
                                    lbl_class_section = Label(DataLeftFrame, text = "Class:", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_class_section.place(x = 3, y = 50)
                                    com_txt_class_section = ttk.Combobox(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                                    com_txt_class_section["values"] = ("Select Class", "Pre-Nursery", "UKG")
                                    com_txt_class_section.current(0)
                                    com_txt_class_section.place(x = 120, y = 50)

                                    ## Percentage
                                    lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 50)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 50, width = 200)

                                    ## English
                                    lbl_english = Label(DataLeftFrame, text = "English Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_english.place(x = 3, y = 100)

                                    txt_english = ttk.Entry(DataLeftFrame, textvariable  = self.var_english, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_english.place(x = 120, y = 100, width = 200)

                                    ## Hindi
                                    lbl_hindi = Label(DataLeftFrame, text = "Hindi Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_hindi.place(x = 350, y = 100)

                                    txt_hindi = ttk.Entry(DataLeftFrame, textvariable  = self.var_hindi, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_hindi.place(x = 500, y = 100, width = 200)

                                    ## Mathematics
                                    lbl_maths = Label(DataLeftFrame, text = "Mathematics\nMarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_maths.place(x = 3, y = 140)

                                    txt_maths = ttk.Entry(DataLeftFrame, textvariable  = self.var_maths, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_maths.place(x = 120, y = 150, width = 200)

                                    ## Environmental Science
                                    lbl_environmental = Label(DataLeftFrame, text = "Environmental\n Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_environmental.place(x = 345, y = 140)

                                    txt_environmental = ttk.Entry(DataLeftFrame, textvariable  = self.var_environmental_awareness, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_environmental.place(x = 500, y = 150, width = 200)

                                    ## Drawing
                                    lbl_drawing = Label(DataLeftFrame, text = "Drawing Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_drawing.place(x = 3, y = 200)

                                    txt_drawing = ttk.Entry(DataLeftFrame, textvariable  = self.var_drawing, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_drawing.place(x = 124, y = 200, width = 188)

                                    ## General Awareness
                                    lbl_general = Label(DataLeftFrame, text = "General\nAwareness Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_general.place(x = 345, y = 190)

                                    txt_general = ttk.Entry(DataLeftFrame, textvariable  = self.var_general_awareness, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_general.place(x = 500, y = 200, width = 200)

                                    ## Total Marks
                                    lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_marks.place(x = 3, y = 250)

                                    txt_marks = ttk.Entry(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_marks.place(x = 120, y = 250, width = 200)
                                    txt_total_marks = Label(DataLeftFrame, text = "Total Marks: 600", font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                                    txt_total_marks.place(x = 330, y = 250, width = 200)

                                    ## Remarks
                                    lbl_remarks = Label(DataLeftFrame, text = "Remarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_remarks.place(x = 3, y = 290)

                                    txt_remarks = ttk.Entry(DataLeftFrame, textvariable  = self.var_remarks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_remarks.place(x = 120, y = 290, width = 550, height = 25)

                                    # Buttons
                                    self.btn_add = Button(DataRightFrame, text = "Add Record", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.add_data)
                                    self.btn_add.place(x = 0, y = 0, width = 190)

                                    self.btn_update = Button(DataRightFrame, text = "Update\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.update_data)
                                    self.btn_update.place(x = 0, y = 90, width = 190, height = 80)

                                    self.btn_delete = Button(DataRightFrame, text = "Delete\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.delete_data)
                                    self.btn_delete.place(x = 0, y = 170, width = 190, height = 80)

                                    self.btn_reset = Button(DataRightFrame, text = "Reset", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset_data)
                                    self.btn_reset.place(x = 0, y = 250, width = 190, height = 70)

                                    # ====================Student Table and Scroll Bar====================
                                    table_frame = Frame(DataBottomFrame, bd = 4, relief = RIDGE)
                                    table_frame.place(x = 5, y = 5, width = 1065, height = 130)

                                    scroll_x = ttk.Scrollbar(table_frame, orient = HORIZONTAL)
                                    scroll_y = ttk.Scrollbar(table_frame, orient = VERTICAL)
                                    self.exam_table = ttk.Treeview(table_frame, column = ("id", "name", "class", "per", "english", "hindi", "math", "drawing", "general", "science", "marks", "remark"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                                    scroll_x.pack(side = BOTTOM, fill = X)
                                    scroll_y.pack(side = RIGHT, fill = Y)

                                    scroll_x.config(command  = self.exam_table.xview)
                                    scroll_y.config(command  = self.exam_table.yview)

                                    style = ttk.Style()
                                    style.theme_use("vista")
                                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                    self.exam_table.heading("id", text = "Admission ID")
                                    self.exam_table.heading("name", text = "Student Name")
                                    self.exam_table.heading("class", text = "Class")
                                    self.exam_table.heading("per", text = "Percentage")
                                    self.exam_table.heading("english", text = "English Marks")
                                    self.exam_table.heading("hindi", text = "Hindi Marks")
                                    self.exam_table.heading("math", text = "Mathematics Marks")
                                    self.exam_table.heading("drawing", text = "Drawing Marks")
                                    self.exam_table.heading("general", text = "General Awareness Marks")
                                    self.exam_table.heading("science", text = "Environmental Science Marks")
                                    self.exam_table.heading("marks", text = "Total Marks")
                                    self.exam_table.heading("remark", text = "Remarks")

                                    self.exam_table["show"]  ="headings"

                                    self.exam_table.column("id", width = 100)
                                    self.exam_table.column("name", width = 150)
                                    self.exam_table.column("class", width = 100)
                                    self.exam_table.column("per", width = 100)
                                    self.exam_table.column("english", width = 150)
                                    self.exam_table.column("hindi", width = 150)
                                    self.exam_table.column("math", width = 150)
                                    self.exam_table.column("drawing", width = 150)
                                    self.exam_table.column("general", width = 200)
                                    self.exam_table.column("science", width = 220)
                                    self.exam_table.column("marks", width = 100)
                                    self.exam_table.column("remark", width = 400)

                                    self.exam_table.pack(fill = BOTH, expand = 1)
                                    self.exam_table.bind("<ButtonRelease>", self.get_cursor)
                                    self.fetch_data()

                                def add_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_drawing.get() == "" or self.var_general_awareness.get() == "" or self.var_environmental_awareness.get() == "" or 
                                                    self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_NUR_UKG VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                    self.var_admission_id.get(),
                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                    self.var_class.get(),
                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                    self.var_english.get(),
                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                    self.var_drawing.get(),
                                                                                                                                                    self.var_general_awareness.get(),
                                                                                                                                                    self.var_environmental_awareness.get(),
                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                    self.var_remarks.get()
                                                                                                                                                ))
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_nur_ukg)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_nur_ukg)

                                def fetch_data(self):
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG")
                                    data = my_cursor.fetchall()
                                    if len(data) != 0:
                                        self.exam_table.delete(*self.exam_table.get_children())
                                        for i in data:
                                            self.exam_table.insert("", END, values = i)
                                        conn.commit()
                                    conn.close()

                                def get_cursor(self, event = ""):
                                    cursor_row = self.exam_table.focus()
                                    content = self.exam_table.item(cursor_row)
                                    data = content["values"]

                                    self.var_admission_id.set(data[0])
                                    self.var_student_name.set(data[1])
                                    self.var_class.set(data[2])
                                    self.var_percentage.set(data[3])
                                    self.var_english.set(data[4])
                                    self.var_hindi.set(data[5])
                                    self.var_maths.set(data[6])
                                    self.var_drawing.set(data[7])
                                    self.var_general_awareness.set(data[8])
                                    self.var_environmental_awareness.set(data[9])
                                    self.var_total_marks.set(data[10])
                                    self.var_remarks.set(data[11])

                                def update_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_drawing.get() == "" or self.var_general_awareness.get() == "" or self.var_environmental_awareness.get() == "" or 
                                                    self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_nur_ukg)
                                        try:
                                            if update>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_NUR_UKG set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Hindi_Marks = %s, Mathematics_Marks = %s, Drawing_Marks = %s, General_Awareness_Marks = %s, Environmental_Science_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_english.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_drawing.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_general_awareness.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_environmental_awareness.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                        ))
                                            else:
                                                if not update:
                                                    return
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_nur_ukg)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_nur_ukg)

                                def delete_data(self):
                                    if self.var_admission_id.get() == "":
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                                            if delete>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                sql = "DELETE FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE ADMISSION_ID = %s"
                                                value = (self.var_admission_id.get(),)
                                                my_cursor.execute(sql,value)
                                            else:
                                                if not delete:
                                                    return
                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()} Deleted Successfully!", parent = self.root_nur_ukg)
                                            self.clear_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_nur_ukg)

                                def reset_data(self):
                                    self.clear_data()
                                    self.var_admission_id.set("")
                                    self.var_student_name.set("")
                                    self.var_class.set("Select Class")
                                    self.var_percentage.set("")
                                    self.var_english.set("")
                                    self.var_hindi.set("")
                                    self.var_maths.set("")
                                    self.var_drawing.set("")
                                    self.var_general_awareness.set("")
                                    self.var_environmental_awareness.set("")
                                    self.var_total_marks.set("")
                                    self.var_remarks.set("")

                                def clear_data(self):
                                    self.__init__(root_nur_ukg)

                            if __name__ == "__main__":
                                root_nur_ukg = Toplevel()
                                obj_nur_ukg = Nur_ukg(root_nur_ukg)
                                root_nur_ukg.mainloop()

                        def class_1_5(self):
                            class CLASS_1_5:

                                def __init__(self,root_1_5):
                                    self.root_1_5 = root_1_5
                                    self.root_1_5.title("Class 1st To 5th")
                                    self.root_1_5.geometry("1100x650+150+20")
                                    self.root_1_5.config(bg = "Saddlebrown")
                                    
                                    self.root_1_5.focus_force()
                                    self.root_1_5.grab_set()
                                    self.root_1_5.resizable(FALSE, FALSE)

                                    bg_lbl_1_5 = Label(self.root_1_5, bd=2, relief=RIDGE)
                                    bg_lbl_1_5.place(x = 5, y = 5, width = 1090, height = 640)

                                    lbl_title_1_5 = Label(bg_lbl_1_5, text = " <-- Class 1st To 5th --> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                    lbl_title_1_5.place(x = 0, y = 0, width = 1085, height = 65)

                                    self.btn_close = Button(self.root_1_5, text = "Close", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_1_5.destroy)
                                    self.btn_close.place(x = 18, y = 18, height = 45)

                                    # Manage Frame
                                    Manage_Frame = Frame(bg_lbl_1_5, bd=2, relief=RIDGE, bg="White")
                                    Manage_Frame.place(x = 5, y = 65, width = 1080, height = 565)

                                    # Left Frame
                                    DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataLeftFrame.place(x = 20, y = 0, width = 750, height = 350)

                                    # Right Frame
                                    DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataRightFrame.place(x = 820, y = 0, width = 200, height = 350)

                                    # Bottom Frame
                                    DataBottomFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                                    DataBottomFrame.place(x = 0, y = 370, width = 1075, height = 175)

                                    # Variables
                                    self.var_admission_id = StringVar()
                                    self.var_student_name = StringVar()
                                    self.var_class = StringVar()
                                    self.var_percentage = StringVar()
                                    self.var_english = StringVar()
                                    self.var_hindi = StringVar()
                                    self.var_maths = StringVar()
                                    self.var_environmental_science = StringVar()
                                    self.var_general_knowledge = StringVar()
                                    self.var_drawing = StringVar()
                                    self.var_total_marks = StringVar()
                                    self.var_remarks = StringVar()

                                    # Student Information
                                    lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_id.place(x = 3, y = 3)

                                    txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_id.place(x = 120, y = 3, width = 200)

                                    ## Name
                                    lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 3)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 3, width = 200)

                                    ## Class
                                    lbl_class_section = Label(DataLeftFrame, text = "Class:", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_class_section.place(x = 3, y = 50)
                                    com_txt_class_section = ttk.Combobox(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                                    com_txt_class_section["values"] = ("Select Class", "Class - I", "CLass - II", "Class - III", "Class i IV", "Class - V")
                                    com_txt_class_section.current(0)
                                    com_txt_class_section.place(x = 120, y = 50)

                                    ## Percentage
                                    lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 50)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 50, width = 200)

                                    ## English
                                    lbl_english = Label(DataLeftFrame, text = "English Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_english.place(x = 3, y = 100)

                                    txt_english = ttk.Entry(DataLeftFrame, textvariable  = self.var_english, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_english.place(x = 120, y = 100, width = 200)

                                    ## Hindi
                                    lbl_hindi = Label(DataLeftFrame, text = "Hindi Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_hindi.place(x = 350, y = 100)

                                    txt_hindi = ttk.Entry(DataLeftFrame, textvariable  = self.var_hindi, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_hindi.place(x = 500, y = 100, width = 200)

                                    ## Mathematics
                                    lbl_maths = Label(DataLeftFrame, text = "Mathematics\nMarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_maths.place(x = 3, y = 140)

                                    txt_maths = ttk.Entry(DataLeftFrame, textvariable  = self.var_maths, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_maths.place(x = 120, y = 150, width = 200)

                                    ## Environmental Science
                                    lbl_environmental = Label(DataLeftFrame, text = "Environmental\n Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_environmental.place(x = 345, y = 140)

                                    txt_environmental = ttk.Entry(DataLeftFrame, textvariable  = self.var_environmental_science, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_environmental.place(x = 500, y = 150, width = 200)

                                    ## Drawing
                                    lbl_drawing = Label(DataLeftFrame, text = "Drawing Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_drawing.place(x = 3, y = 200)

                                    txt_drawing = ttk.Entry(DataLeftFrame, textvariable  = self.var_drawing, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_drawing.place(x = 124, y = 200, width = 188)

                                    ## General Knowledge
                                    lbl_general = Label(DataLeftFrame, text = "General\nKnowledge Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_general.place(x = 345, y = 190)

                                    txt_general = ttk.Entry(DataLeftFrame, textvariable  = self.var_general_knowledge, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_general.place(x = 500, y = 200, width = 200)

                                    ## Total Marks
                                    lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_marks.place(x = 3, y = 250)

                                    txt_marks = ttk.Entry(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_marks.place(x = 120, y = 250, width = 200)
                                    txt_total_marks = Label(DataLeftFrame, text = "Total Marks: 600", font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                                    txt_total_marks.place(x = 330, y = 250, width = 200)

                                    ## Remarks
                                    lbl_remarks = Label(DataLeftFrame, text = "Remarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_remarks.place(x = 3, y = 290)

                                    txt_remarks = ttk.Entry(DataLeftFrame, textvariable  = self.var_remarks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_remarks.place(x = 120, y = 290, width = 550, height = 25)

                                    # Buttons
                                    self.btn_add = Button(DataRightFrame, text = "Add Record", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.add_data)
                                    self.btn_add.place(x = 0, y = 0, width = 190)

                                    self.btn_update = Button(DataRightFrame, text = "Update\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.update_data)
                                    self.btn_update.place(x = 0, y = 90, width = 190, height = 80)

                                    self.btn_delete = Button(DataRightFrame, text = "Delete\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.delete_data)
                                    self.btn_delete.place(x = 0, y = 170, width = 190, height = 80)

                                    self.btn_reset = Button(DataRightFrame, text = "Reset", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset_data)
                                    self.btn_reset.place(x = 0, y = 250, width = 190, height = 70)

                                    # ====================Student Table and Scroll Bar====================
                                    table_frame = Frame(DataBottomFrame, bd = 4, relief = RIDGE)
                                    table_frame.place(x = 5, y = 5, width = 1065, height = 130)

                                    scroll_x = ttk.Scrollbar(table_frame, orient = HORIZONTAL)
                                    scroll_y = ttk.Scrollbar(table_frame, orient = VERTICAL)
                                    self.exam_table = ttk.Treeview(table_frame, column = ("id", "name", "class", "per", "english", "hindi", "math", "drawing", "general", "science", "marks", "remark"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                                    scroll_x.pack(side = BOTTOM, fill = X)
                                    scroll_y.pack(side = RIGHT, fill = Y)

                                    scroll_x.config(command  = self.exam_table.xview)
                                    scroll_y.config(command  = self.exam_table.yview)

                                    style = ttk.Style()
                                    style.theme_use("vista")
                                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                    self.exam_table.heading("id", text = "Admission ID")
                                    self.exam_table.heading("name", text = "Student Name")
                                    self.exam_table.heading("class", text = "Class")
                                    self.exam_table.heading("per", text = "Percentage")
                                    self.exam_table.heading("english", text = "English Marks")
                                    self.exam_table.heading("hindi", text = "Hindi Marks")
                                    self.exam_table.heading("math", text = "Mathematics Marks")
                                    self.exam_table.heading("drawing", text = "Drawing Marks")
                                    self.exam_table.heading("general", text = "General Awareness Marks")
                                    self.exam_table.heading("science", text = "Environmental Science Marks")
                                    self.exam_table.heading("marks", text = "Total Marks")
                                    self.exam_table.heading("remark", text = "Remarks")

                                    self.exam_table["show"]  ="headings"

                                    self.exam_table.column("id", width = 100)
                                    self.exam_table.column("name", width = 150)
                                    self.exam_table.column("class", width = 100)
                                    self.exam_table.column("per", width = 100)
                                    self.exam_table.column("english", width = 150)
                                    self.exam_table.column("hindi", width = 150)
                                    self.exam_table.column("math", width = 150)
                                    self.exam_table.column("drawing", width = 150)
                                    self.exam_table.column("general", width = 200)
                                    self.exam_table.column("science", width = 220)
                                    self.exam_table.column("marks", width = 100)
                                    self.exam_table.column("remark", width = 400)

                                    self.exam_table.pack(fill = BOTH, expand = 1)
                                    self.exam_table.bind("<ButtonRelease>", self.get_cursor)
                                    self.fetch_data()

                                def add_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_drawing.get() == "" or self.var_general_knowledge.get() == "" or self.var_environmental_science.get() == "" or 
                                                    self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_1_5 VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                    self.var_admission_id.get(),
                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                    self.var_class.get(),
                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                    self.var_english.get(),
                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                    self.var_drawing.get(),
                                                                                                                                                    self.var_general_knowledge.get(),
                                                                                                                                                    self.var_environmental_science.get(),
                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                    self.var_remarks.get()
                                                                                                                                                ))
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_1_5)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_1_5)

                                def fetch_data(self):
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_1_5")
                                    data = my_cursor.fetchall()
                                    if len(data) != 0:
                                        self.exam_table.delete(*self.exam_table.get_children())
                                        for i in data:
                                            self.exam_table.insert("", END, values = i)
                                        conn.commit()
                                    conn.close()

                                def get_cursor(self, event = ""):
                                    cursor_row = self.exam_table.focus()
                                    content = self.exam_table.item(cursor_row)
                                    data = content["values"]

                                    self.var_admission_id.set(data[0])
                                    self.var_student_name.set(data[1])
                                    self.var_class.set(data[2])
                                    self.var_percentage.set(data[3])
                                    self.var_english.set(data[4])
                                    self.var_hindi.set(data[5])
                                    self.var_maths.set(data[6])
                                    self.var_drawing.set(data[7])
                                    self.var_general_knowledge.set(data[8])
                                    self.var_environmental_science.set(data[9])
                                    self.var_total_marks.set(data[10])
                                    self.var_remarks.set(data[11])

                                def update_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_drawing.get() == "" or self.var_general_knowledge.get() == "" or self.var_environmental_science.get() == "" or 
                                                    self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_1_5)
                                        try:
                                            if update>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_1_5 set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Hindi_Marks = %s, Mathematics_Marks = %s, Drawing_Marks = %s, General_Knowledge_Marks = %s, Environmental_Science_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_english.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_drawing.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_general_knowledge.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_environmental_science.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                        ))
                                            else:
                                                if not update:
                                                    return
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_1_5)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_1_5)

                                def delete_data(self):
                                    if self.var_admission_id.get() == "":
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                                            if delete>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                sql = "DELETE FROM EXAM_MANAGEMENT_CLASS_1_5 WHERE ADMISSION_ID = %s"
                                                value = (self.var_admission_id.get(),)
                                                my_cursor.execute(sql,value)
                                            else:
                                                if not delete:
                                                    return
                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()} Deleted Successfully!", parent = self.root_1_5)
                                            self.clear_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_1_5)

                                def reset_data(self):
                                    self.clear_data()
                                    self.var_admission_id.set("")
                                    self.var_student_name.set("")
                                    self.var_class.set("Select Class")
                                    self.var_percentage.set("")
                                    self.var_english.set("")
                                    self.var_hindi.set("")
                                    self.var_maths.set("")
                                    self.var_drawing.set("")
                                    self.var_general_knowledge.set("")
                                    self.var_environmental_science.set("")
                                    self.var_total_marks.set("")
                                    self.var_remarks.set("")

                                def clear_data(self):
                                    self.__init__(root_1_5)

                            if __name__ == "__main__":
                                root_1_5 = Toplevel()
                                obj_1_5 = CLASS_1_5(root_1_5)
                                root_1_5.mainloop()

                        def class_6_8(self):
                            class CLASS_6_8:

                                def __init__(self,root_6_8):
                                    self.root_6_8 = root_6_8
                                    self.root_6_8.title("Class 6th To 8th")
                                    self.root_6_8.geometry("1100x650+150+20")
                                    self.root_6_8.config(bg = "Saddlebrown")
                                    
                                    self.root_6_8.focus_force()
                                    self.root_6_8.grab_set()
                                    self.root_6_8.resizable(FALSE, FALSE)

                                    bg_lbl_6_8 = Label(self.root_6_8, bd=2, relief=RIDGE)
                                    bg_lbl_6_8.place(x = 5, y = 5, width = 1090, height = 640)

                                    lbl_title_6_8 = Label(bg_lbl_6_8, text = " <-- Class 6th To 8th --> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                    lbl_title_6_8.place(x = 0, y = 0, width = 1085, height = 65)

                                    self.btn_close = Button(self.root_6_8, text = "Close", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_6_8.destroy)
                                    self.btn_close.place(x = 18, y = 18, height = 45)

                                    # Manage Frame
                                    Manage_Frame = Frame(bg_lbl_6_8, bd=2, relief=RIDGE, bg="White")
                                    Manage_Frame.place(x = 5, y = 65, width = 1080, height = 565)

                                    # Left Frame
                                    DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataLeftFrame.place(x = 20, y = 0, width = 750, height = 390)

                                    # Right Frame
                                    DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataRightFrame.place(x = 820, y = 0, width = 200, height = 350)

                                    # Bottom Frame
                                    DataBottomFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                                    DataBottomFrame.place(x = 0, y = 400, width = 1075, height = 150)

                                    # Variables
                                    self.var_admission_id = StringVar()
                                    self.var_student_name = StringVar()
                                    self.var_class = StringVar()
                                    self.var_percentage = StringVar()
                                    self.var_english = StringVar()
                                    self.var_hindi = StringVar()
                                    self.var_maths = StringVar()
                                    self.var_sst = StringVar()
                                    self.var_science = StringVar()
                                    self.var_general_knowledge = StringVar()
                                    self.var_computer = StringVar()
                                    self.var_total_marks = StringVar()
                                    self.var_remarks = StringVar()

                                    # Student Information
                                    lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_id.place(x = 3, y = 3)

                                    txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_id.place(x = 120, y = 3, width = 200)

                                    ## Name
                                    lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 3)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 3, width = 200)

                                    ## Class
                                    lbl_class_section = Label(DataLeftFrame, text = "Class:", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_class_section.place(x = 3, y = 50)
                                    com_txt_class_section = ttk.Combobox(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                                    com_txt_class_section["values"] = ("Select Class", "Class - VI", "Class - VII", "Class - VIII")
                                    com_txt_class_section.current(0)
                                    com_txt_class_section.place(x = 120, y = 50)

                                    ## Percentage
                                    lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 50)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 50, width = 200)

                                    ## English
                                    lbl_english = Label(DataLeftFrame, text = "English Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_english.place(x = 3, y = 100)

                                    txt_english = ttk.Entry(DataLeftFrame, textvariable  = self.var_english, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_english.place(x = 120, y = 100, width = 200)

                                    ## Hindi
                                    lbl_hindi = Label(DataLeftFrame, text = "Hindi Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_hindi.place(x = 350, y = 100)

                                    txt_hindi = ttk.Entry(DataLeftFrame, textvariable  = self.var_hindi, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_hindi.place(x = 500, y = 100, width = 200)

                                    ## Mathematics
                                    lbl_maths = Label(DataLeftFrame, text = "Mathematics\nMarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_maths.place(x = 3, y = 140)

                                    txt_maths = ttk.Entry(DataLeftFrame, textvariable  = self.var_maths, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_maths.place(x = 120, y = 150, width = 200)

                                    ## Social Science
                                    lbl_sst = Label(DataLeftFrame, text = "Social\n Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_sst.place(x = 345, y = 140)

                                    txt_sst = ttk.Entry(DataLeftFrame, textvariable  = self.var_sst, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_sst.place(x = 500, y = 150, width = 200)

                                    ## Science
                                    lbl_science = Label(DataLeftFrame, text = "Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_science.place(x = 3, y = 200)

                                    txt_science = ttk.Entry(DataLeftFrame, textvariable  = self.var_science, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_science.place(x = 124, y = 200, width = 188)

                                    ## General Knowledge
                                    lbl_general = Label(DataLeftFrame, text = "General\nKnowledge Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_general.place(x = 345, y = 190)

                                    txt_general = ttk.Entry(DataLeftFrame, textvariable  = self.var_general_knowledge, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_general.place(x = 500, y = 200, width = 200)

                                    ##Computer Science
                                    lbl_computer = Label(DataLeftFrame, text = "Computer Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_computer.place(x = 3, y = 250)

                                    txt_computer = ttk.Entry(DataLeftFrame, textvariable  = self.var_computer, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_computer.place(x = 190, y = 250, width = 200)

                                    ## Total Marks
                                    lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_marks.place(x = 3, y = 300)

                                    txt_marks = ttk.Entry(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_marks.place(x = 120, y = 290, width = 200)
                                    txt_total_marks = Label(DataLeftFrame, text = "Total Marks: 600", font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                                    txt_total_marks.place(x = 330, y = 290, width = 200)

                                    ## Remarks
                                    lbl_remarks = Label(DataLeftFrame, text = "Remarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_remarks.place(x = 3, y = 330)

                                    txt_remarks = ttk.Entry(DataLeftFrame, textvariable  = self.var_remarks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_remarks.place(x = 120, y = 330, width = 550, height = 25)

                                    # Buttons
                                    self.btn_add = Button(DataRightFrame, text = "Add Record", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.add_data)
                                    self.btn_add.place(x = 0, y = 0, width = 190)

                                    self.btn_update = Button(DataRightFrame, text = "Update\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.update_data)
                                    self.btn_update.place(x = 0, y = 90, width = 190, height = 80)

                                    self.btn_delete = Button(DataRightFrame, text = "Delete\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.delete_data)
                                    self.btn_delete.place(x = 0, y = 170, width = 190, height = 80)

                                    self.btn_reset = Button(DataRightFrame, text = "Reset", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset_data)
                                    self.btn_reset.place(x = 0, y = 250, width = 190, height = 70)

                                    # ====================Student Table and Scroll Bar====================
                                    table_frame = Frame(DataBottomFrame, bd = 4, relief = RIDGE)
                                    table_frame.place(x = 3, y = 5, width = 1060, height = 130)

                                    scroll_x = ttk.Scrollbar(table_frame, orient = HORIZONTAL)
                                    scroll_y = ttk.Scrollbar(table_frame, orient = VERTICAL)
                                    self.exam_table = ttk.Treeview(table_frame, column = ("id", "name", "class", "per", "english", "hindi", "math", "sst", "science", "general", "computer", "marks", "remark"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                                    scroll_x.pack(side = BOTTOM, fill = X)
                                    scroll_y.pack(side = RIGHT, fill = Y)

                                    scroll_x.config(command  = self.exam_table.xview)
                                    scroll_y.config(command  = self.exam_table.yview)

                                    style = ttk.Style()
                                    style.theme_use("vista")
                                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                    self.exam_table.heading("id", text = "Admission ID")
                                    self.exam_table.heading("name", text = "Student Name")
                                    self.exam_table.heading("class", text = "Class")
                                    self.exam_table.heading("per", text = "Percentage")
                                    self.exam_table.heading("english", text = "English Marks")
                                    self.exam_table.heading("hindi", text = "Hindi Marks")
                                    self.exam_table.heading("math", text = "Mathematics Marks")
                                    self.exam_table.heading("sst", text = "Social Studies Marks")
                                    self.exam_table.heading("science", text = "Science Marks")
                                    self.exam_table.heading("general", text = "General Awareness Marks")
                                    self.exam_table.heading("computer", text = "Computer Science Marks")
                                    self.exam_table.heading("marks", text = "Total Marks")
                                    self.exam_table.heading("remark", text = "Remarks")

                                    self.exam_table["show"]  ="headings"

                                    self.exam_table.column("id", width = 100)
                                    self.exam_table.column("name", width = 150)
                                    self.exam_table.column("class", width = 100)
                                    self.exam_table.column("per", width = 100)
                                    self.exam_table.column("english", width = 150)
                                    self.exam_table.column("hindi", width = 150)
                                    self.exam_table.column("math", width = 150)
                                    self.exam_table.column("sst", width = 200)
                                    self.exam_table.column("science", width = 150)
                                    self.exam_table.column("general", width = 200)
                                    self.exam_table.column("computer", width = 200)
                                    self.exam_table.column("marks", width = 100)
                                    self.exam_table.column("remark", width = 400)

                                    self.exam_table.pack(fill = BOTH, expand = 1)
                                    self.exam_table.bind("<ButtonRelease>", self.get_cursor)
                                    self.fetch_data()

                                def add_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_sst.get() == "" or self.var_science.get() == "" or self.var_general_knowledge.get() == "" or 
                                                    self.var_computer.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_6_8 VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                    self.var_admission_id.get(),
                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                    self.var_class.get(),
                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                    self.var_english.get(),
                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                    self.var_sst.get(),
                                                                                                                                                    self.var_science.get(),
                                                                                                                                                    self.var_general_knowledge.get(),
                                                                                                                                                    self.var_computer.get(),
                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                    self.var_remarks.get()
                                                                                                                                                ))
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_6_8)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_6_8)

                                def fetch_data(self):
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_6_8")
                                    data = my_cursor.fetchall()
                                    if len(data) != 0:
                                        self.exam_table.delete(*self.exam_table.get_children())
                                        for i in data:
                                            self.exam_table.insert("", END, values = i)
                                        conn.commit()
                                    conn.close()

                                def get_cursor(self, event = ""):
                                    cursor_row = self.exam_table.focus()
                                    content = self.exam_table.item(cursor_row)
                                    data = content["values"]

                                    self.var_admission_id.set(data[0])
                                    self.var_student_name.set(data[1])
                                    self.var_class.set(data[2])
                                    self.var_percentage.set(data[3])
                                    self.var_english.set(data[4])
                                    self.var_hindi.set(data[5])
                                    self.var_maths.set(data[6])
                                    self.var_sst.set(data[7])
                                    self.var_science.set(data[8])
                                    self.var_general_knowledge.set(data[9])
                                    self.var_computer.set(data[10])
                                    self.var_total_marks.set(data[11])
                                    self.var_remarks.set(data[12])

                                def update_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_sst.get() == "" or self.var_science.get() == "" or self.var_general_knowledge.get() == "" or 
                                                    self.var_computer.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_6_8)
                                        try:
                                            if update>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_6_8 set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Hindi_Marks = %s, Mathematics_Marks = %s, Social_Science_Marks = %s, Science_Marks = %s, General_Knowledge_Marks = %s, Computer_Science_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_english.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_sst.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_science.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_general_knowledge.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_computer.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                        ))
                                            else:
                                                if not update:
                                                    return
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_6_8)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_6_8)

                                def delete_data(self):
                                    if self.var_admission_id.get() == "":
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                                            if delete>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                sql = "DELETE FROM EXAM_MANAGEMENT_CLASS_6_8 WHERE ADMISSION_ID = %s"
                                                value = (self.var_admission_id.get(),)
                                                my_cursor.execute(sql,value)
                                            else:
                                                if not delete:
                                                    return
                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()} Deleted Successfully!", parent = self.root_6_8)
                                            self.clear_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_6_8)

                                def reset_data(self):
                                    self.clear_data()
                                    self.var_admission_id.set("")
                                    self.var_student_name.set("")
                                    self.var_class.set("Select Class")
                                    self.var_percentage.set("")
                                    self.var_english.set("")
                                    self.var_hindi.set("")
                                    self.var_maths.set("")
                                    self.var_sst.set("")
                                    self.var_science.set("")
                                    self.var_general_knowledge.set("")
                                    self.var_computer.set("")
                                    self.var_total_marks.set("")
                                    self.var_remarks.set("")

                                def clear_data(self):
                                    self.__init__(root_6_8)

                            if __name__ == "__main__":
                                root_6_8 = Toplevel()
                                obj_6_8 = CLASS_6_8(root_6_8)
                                root_6_8.mainloop()

                        def class_9_10(self):
                            class CLASS_9_10:

                                def __init__(self,root_9_10):
                                    self.root_9_10 = root_9_10
                                    self.root_9_10.title("Class 9th and 10th")
                                    self.root_9_10.geometry("1100x650+150+20")
                                    self.root_9_10.config(bg = "Saddlebrown")
                                    
                                    self.root_9_10.focus_force()
                                    self.root_9_10.grab_set()
                                    self.root_9_10.resizable(FALSE, FALSE)

                                    bg_lbl_9_10 = Label(self.root_9_10, bd=2, relief=RIDGE)
                                    bg_lbl_9_10.place(x = 5, y = 5, width = 1090, height = 640)

                                    lbl_title_9_10 = Label(bg_lbl_9_10, text = " <-- Class 9th And 10th --> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                    lbl_title_9_10.place(x = 0, y = 0, width = 1085, height = 65)

                                    self.btn_close = Button(self.root_9_10, text = "Close", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_9_10.destroy)
                                    self.btn_close.place(x = 18, y = 18, height = 45)

                                    # Manage Frame
                                    Manage_Frame = Frame(bg_lbl_9_10, bd=2, relief=RIDGE, bg="White")
                                    Manage_Frame.place(x = 5, y = 65, width = 1080, height = 565)

                                    # Left Frame
                                    DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataLeftFrame.place(x = 20, y = 0, width = 750, height = 390)

                                    # Right Frame
                                    DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataRightFrame.place(x = 820, y = 0, width = 200, height = 350)

                                    # Bottom Frame
                                    DataBottomFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "White")
                                    DataBottomFrame.place(x = 0, y = 400, width = 1075, height = 150)

                                    # Variables
                                    self.var_admission_id = StringVar()
                                    self.var_student_name = StringVar()
                                    self.var_class = StringVar()
                                    self.var_percentage = StringVar()
                                    self.var_english = StringVar()
                                    self.var_hindi = StringVar()
                                    self.var_maths = StringVar()
                                    self.var_sst = StringVar()
                                    self.var_science = StringVar()
                                    self.var_physical = StringVar()
                                    self.var_computer = StringVar()
                                    self.var_total_marks = StringVar()
                                    self.var_remarks = StringVar()

                                    # Student Information
                                    lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_id.place(x = 3, y = 3)

                                    txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_id.place(x = 120, y = 3, width = 200)

                                    ## Name
                                    lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 3)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 3, width = 200)

                                    ## Class
                                    lbl_class_section = Label(DataLeftFrame, text = "Class:", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_class_section.place(x = 3, y = 50)
                                    com_txt_class_section = ttk.Combobox(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                                    com_txt_class_section["values"] = ("Select Class", "Class-IX", "Class-X")
                                    com_txt_class_section.current(0)
                                    com_txt_class_section.place(x = 120, y = 50)

                                    ## Percentage
                                    lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 50)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 50, width = 200)

                                    ## English
                                    lbl_english = Label(DataLeftFrame, text = "English Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_english.place(x = 3, y = 100)

                                    txt_english = ttk.Entry(DataLeftFrame, textvariable  = self.var_english, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_english.place(x = 120, y = 100, width = 200)

                                    ## Hindi
                                    lbl_hindi = Label(DataLeftFrame, text = "Hindi Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_hindi.place(x = 350, y = 100)

                                    txt_hindi = ttk.Entry(DataLeftFrame, textvariable  = self.var_hindi, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_hindi.place(x = 500, y = 100, width = 200)

                                    ## Mathematics
                                    lbl_maths = Label(DataLeftFrame, text = "Mathematics\nMarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_maths.place(x = 3, y = 140)

                                    txt_maths = ttk.Entry(DataLeftFrame, textvariable  = self.var_maths, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_maths.place(x = 120, y = 150, width = 200)

                                    ## Social Science
                                    lbl_sst = Label(DataLeftFrame, text = "Social\n Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_sst.place(x = 345, y = 140)

                                    txt_sst = ttk.Entry(DataLeftFrame, textvariable  = self.var_sst, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_sst.place(x = 500, y = 150, width = 200)

                                    ## Science
                                    lbl_science = Label(DataLeftFrame, text = "Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_science.place(x = 3, y = 200)

                                    txt_science = ttk.Entry(DataLeftFrame, textvariable  = self.var_science, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_science.place(x = 124, y = 200, width = 188)

                                    ##Physical Education
                                    lbl_physical = Label(DataLeftFrame, text = "Physical\nEducation Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_physical.place(x = 345, y = 190)

                                    txt_physical = ttk.Entry(DataLeftFrame, textvariable  = self.var_physical, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_physical.place(x = 500, y = 200, width = 200)

                                    ##Computer Science
                                    lbl_computer = Label(DataLeftFrame, text = "Computer Science Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_computer.place(x = 3, y = 250)

                                    txt_computer = ttk.Entry(DataLeftFrame, textvariable  = self.var_computer, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_computer.place(x = 190, y = 250, width = 200)

                                    ## Total Marks
                                    lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_marks.place(x = 3, y = 300)

                                    txt_marks = ttk.Entry(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_marks.place(x = 120, y = 290, width = 200)
                                    txt_total_marks = Label(DataLeftFrame, text = "Total Marks: 600", font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                                    txt_total_marks.place(x = 330, y = 290, width = 200)

                                    ## Remarks
                                    lbl_remarks = Label(DataLeftFrame, text = "Remarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_remarks.place(x = 3, y = 330)

                                    txt_remarks = ttk.Entry(DataLeftFrame, textvariable  = self.var_remarks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_remarks.place(x = 120, y = 330, width = 550, height = 25)

                                    # Buttons
                                    self.btn_add = Button(DataRightFrame, text = "Add Record", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.add_data)
                                    self.btn_add.place(x = 0, y = 0, width = 190)

                                    self.btn_update = Button(DataRightFrame, text = "Update\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.update_data)
                                    self.btn_update.place(x = 0, y = 90, width = 190, height = 80)

                                    self.btn_delete = Button(DataRightFrame, text = "Delete\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.delete_data)
                                    self.btn_delete.place(x = 0, y = 170, width = 190, height = 80)

                                    self.btn_reset = Button(DataRightFrame, text = "Reset", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset_data)
                                    self.btn_reset.place(x = 0, y = 250, width = 190, height = 70)

                                    # ====================Student Table and Scroll Bar====================
                                    table_frame = Frame(DataBottomFrame, bd = 4, relief = RIDGE)
                                    table_frame.place(x = 3, y = 5, width = 1060, height = 130)

                                    scroll_x = ttk.Scrollbar(table_frame, orient = HORIZONTAL)
                                    scroll_y = ttk.Scrollbar(table_frame, orient = VERTICAL)
                                    self.exam_table = ttk.Treeview(table_frame, column = ("id", "name", "class", "per", "english", "hindi", "math", "sst", "science", "physical", "computer", "marks", "remark"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                                    scroll_x.pack(side = BOTTOM, fill = X)
                                    scroll_y.pack(side = RIGHT, fill = Y)

                                    scroll_x.config(command  = self.exam_table.xview)
                                    scroll_y.config(command  = self.exam_table.yview)

                                    style = ttk.Style()
                                    style.theme_use("vista")
                                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                    self.exam_table.heading("id", text = "Admission ID")
                                    self.exam_table.heading("name", text = "Student Name")
                                    self.exam_table.heading("class", text = "Class")
                                    self.exam_table.heading("per", text = "Percentage")
                                    self.exam_table.heading("english", text = "English Marks")
                                    self.exam_table.heading("hindi", text = "Hindi Marks")
                                    self.exam_table.heading("math", text = "Mathematics Marks")
                                    self.exam_table.heading("sst", text = "Social Studies Marks")
                                    self.exam_table.heading("science", text = "Science Marks")
                                    self.exam_table.heading("physical", text = "Physical Education Marks")
                                    self.exam_table.heading("computer", text = "Computer Science Marks")
                                    self.exam_table.heading("marks", text = "Total Marks")
                                    self.exam_table.heading("remark", text = "Remarks")

                                    self.exam_table["show"]  ="headings"

                                    self.exam_table.column("id", width = 100)
                                    self.exam_table.column("name", width = 150)
                                    self.exam_table.column("class", width = 100)
                                    self.exam_table.column("per", width = 100)
                                    self.exam_table.column("english", width = 150)
                                    self.exam_table.column("hindi", width = 150)
                                    self.exam_table.column("math", width = 150)
                                    self.exam_table.column("sst", width = 200)
                                    self.exam_table.column("science", width = 150)
                                    self.exam_table.column("physical", width = 200)
                                    self.exam_table.column("computer", width = 200)
                                    self.exam_table.column("marks", width = 100)
                                    self.exam_table.column("remark", width = 400)

                                    self.exam_table.pack(fill = BOTH, expand = 1)
                                    self.exam_table.bind("<ButtonRelease>", self.get_cursor)
                                    self.fetch_data()

                                def add_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_sst.get() == "" or self.var_science.get() == "" or self.var_physical.get() == "" or 
                                                    self.var_computer.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_9_10 VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                    self.var_admission_id.get(),
                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                    self.var_class.get(),
                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                    self.var_english.get(),
                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                    self.var_sst.get(),
                                                                                                                                                    self.var_science.get(),
                                                                                                                                                    self.var_physical.get(),
                                                                                                                                                    self.var_computer.get(),
                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                    self.var_remarks.get()
                                                                                                                                                ))
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_9_10)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_9_10)

                                def fetch_data(self):
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_9_10")
                                    data = my_cursor.fetchall()
                                    if len(data) != 0:
                                        self.exam_table.delete(*self.exam_table.get_children())
                                        for i in data:
                                            self.exam_table.insert("", END, values = i)
                                        conn.commit()
                                    conn.close()

                                def get_cursor(self, event = ""):
                                    cursor_row = self.exam_table.focus()
                                    content = self.exam_table.item(cursor_row)
                                    data = content["values"]

                                    self.var_admission_id.set(data[0])
                                    self.var_student_name.set(data[1])
                                    self.var_class.set(data[2])
                                    self.var_percentage.set(data[3])
                                    self.var_english.set(data[4])
                                    self.var_hindi.set(data[5])
                                    self.var_maths.set(data[6])
                                    self.var_sst.set(data[7])
                                    self.var_science.set(data[8])
                                    self.var_physical.set(data[9])
                                    self.var_computer.set(data[10])
                                    self.var_total_marks.set(data[11])
                                    self.var_remarks.set(data[12])

                                def update_data(self):
                                    if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                            self.var_percentage.get() == "" or self.var_english.get() =="" or self.var_hindi.get() == "" or self.var_maths.get() == "" or
                                                self.var_sst.get() == "" or self.var_science.get() == "" or self.var_physical.get() == "" or 
                                                    self.var_computer.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_9_10)
                                        try:
                                            if update>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_9_10 set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Hindi_Marks = %s, Mathematics_Marks = %s, Social_Science_Marks = %s, Science_Marks = %s, Physical_Education_Marks = %s, Computer_Science_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                    self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_english.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_hindi.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_maths.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_sst.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_science.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_physical.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_computer.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                    self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                        ))
                                            else:
                                                if not update:
                                                    return
                                            conn.commit()
                                            self.fetch_data()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_9_10)
                                            self.reset_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_9_10)

                                def delete_data(self):
                                    if self.var_admission_id.get() == "":
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        try:
                                            delete = messagebox.askyesno("Delete", "Are You Sure To Delete This Student Data")
                                            if delete>0:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                sql = "DELETE FROM EXAM_MANAGEMENT_CLASS_9_10 WHERE ADMISSION_ID = %s"
                                                value = (self.var_admission_id.get(),)
                                                my_cursor.execute(sql,value)
                                            else:
                                                if not delete:
                                                    return
                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()} Deleted Successfully!", parent = self.root_9_10)
                                            self.clear_data()
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_9_10)

                                def reset_data(self):
                                    self.clear_data()
                                    self.var_admission_id.set("")
                                    self.var_student_name.set("")
                                    self.var_class.set("Select Class")
                                    self.var_percentage.set("")
                                    self.var_english.set("")
                                    self.var_hindi.set("")
                                    self.var_maths.set("")
                                    self.var_sst.set("")
                                    self.var_science.set("")
                                    self.var_physical.set("")
                                    self.var_computer.set("")
                                    self.var_total_marks.set("")
                                    self.var_remarks.set("")

                                def clear_data(self):
                                    self.__init__(root_9_10)

                            if __name__ == "__main__":
                                root_9_10 = Toplevel()
                                obj_9_10 = CLASS_9_10(root_9_10)
                                root_9_10.mainloop()

                        def class_11_12(self):
                            class CLASS_11_12:

                                def __init__(self,root_11_12):
                                    self.root_11_12 = root_11_12
                                    self.root_11_12.title("Class 11th and 12th")
                                    self.root_11_12.geometry("1100x480+150+100")
                                    self.root_11_12.config(bg = "Saddlebrown")
                                    
                                    self.root_11_12.focus_force()
                                    self.root_11_12.grab_set()
                                    self.root_11_12.resizable(FALSE, FALSE)

                                    bg_lbl_11_12 = Label(self.root_11_12, bd=2, relief=RIDGE)
                                    bg_lbl_11_12.place(x = 5, y = 5, width = 1090, height = 470)

                                    lbl_title_11_12 = Label(bg_lbl_11_12, text = " <-- Class 11th And 12th --> ", font = ("Handlee", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                    lbl_title_11_12.place(x = 0, y = 0, width = 1085, height = 65)

                                    self.btn_close = Button(self.root_11_12, text = "Close", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_11_12.destroy)
                                    self.btn_close.place(x = 18, y = 18, height = 45)

                                    # Manage Frame
                                    Manage_Frame = Frame(bg_lbl_11_12, bd=2, relief=RIDGE, bg="White")
                                    Manage_Frame.place(x = 5, y = 65, width = 1080, height = 400)

                                    # Left Frame
                                    DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataLeftFrame.place(x = 20, y = 0, width = 750, height = 390)

                                    # Right Frame
                                    DataRightFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                                    DataRightFrame.place(x = 820, y = 40, width = 200, height = 340)

                                    # Variables
                                    self.var_admission_id = StringVar()
                                    self.var_student_name = StringVar()
                                    self.var_class = StringVar()
                                    self.var_percentage = StringVar()
                                    self.var_subject1_name = StringVar()
                                    self.var_subject1 = StringVar()
                                    self.var_subject2_name = StringVar()
                                    self.var_subject2 = StringVar()
                                    self.var_subject3_name = StringVar()
                                    self.var_subject3 = StringVar()
                                    self.var_subject4_name = StringVar()
                                    self.var_subject4 = StringVar()
                                    self.var_subject5_name = StringVar()
                                    self.var_subject5 = StringVar()
                                    self.var_subject6_name = StringVar()
                                    self.var_subject6 = StringVar()        
                                    self.var_total_marks = StringVar()
                                    self.var_remarks = StringVar()

                                    # Student Information
                                    lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_id.place(x = 3, y = 3)

                                    txt_id = ttk.Entry(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_id.place(x = 120, y = 3, width = 200)

                                    ## Name
                                    lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 3)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 3, width = 200)

                                    ## Class
                                    lbl_class_section = Label(DataLeftFrame, text = "Class-Section :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_class_section.place(x = 3, y = 40)
                                    com_txt_class_section = ttk.Combobox(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 15, state = "readonly")
                                    com_txt_class_section["values"] = ("Select Class - Section", "Class-XI--Section-A", "Class-XI--Section-B", "Class-XI--Section-C", "Class-XI--Section-D", "Class-XII--Section-A", "Class-XII--Section-B", "Class-XII--Section-C", "Class-XII--Section-D")
                                    com_txt_class_section.current(0)
                                    com_txt_class_section.place(x = 120, y = 40)
                                    self.btn_enter = Button(DataLeftFrame, text = "↵", font = ("Handlee", 15, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, cursor = "hand2", command = self.subjects)
                                    self.btn_enter.place(x = 300, y = 40, width = 30, height = 30)

                                    ## Percentage
                                    lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_name.place(x = 350, y = 40)

                                    txt_name = ttk.Entry(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_name.place(x = 500, y = 40, width = 200)

                                    ## Heading
                                    lbl_heading = Label(DataLeftFrame, text = "Subject Name    :    Marks    :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading.place(x = 3, y = 80)

                                    ### Subject 1
                                    txt_subject1_name = Label(DataLeftFrame, textvariable  = self.var_subject1_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject1_name.place(x = 320, y = 80, width = 180)
                                    lbl_heading1 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading1.place(x = 500, y = 80)
                                    txt_subject1 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject1, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject1.place(x = 540, y = 80, width = 180)

                                    ### Subject 2
                                    txt_subject2_name = Label(DataLeftFrame, textvariable  = self.var_subject2_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject2_name.place(x = 320, y = 110, width = 180)
                                    lbl_heading2 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading2.place(x = 500, y = 110)
                                    txt_subject2 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject2, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject2.place(x = 540, y = 110, width = 180)

                                    ### Subject 3
                                    txt_subject3_name = Label(DataLeftFrame, textvariable  = self.var_subject3_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject3_name.place(x = 320, y = 140, width = 180)
                                    lbl_heading3 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading3.place(x = 500, y = 140)
                                    txt_subject3 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject3, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject3.place(x = 540, y = 140, width = 180)

                                    ### Subject 4
                                    txt_subject4_name = Label(DataLeftFrame, textvariable  = self.var_subject4_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject4_name.place(x = 320, y = 170, width = 180)
                                    lbl_heading4 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading4.place(x = 500, y = 170)
                                    txt_subject4 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject4, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject4.place(x = 540, y = 170, width = 180)

                                    ### Subject 5
                                    txt_subject5_name = Label(DataLeftFrame, textvariable  = self.var_subject5_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject5_name.place(x = 320, y = 200, width = 180)
                                    lbl_heading5 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading5.place(x = 500, y = 200)
                                    txt_subject5 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject5, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject5.place(x = 540, y = 200, width = 180)

                                    ### Subject 6
                                    txt_subject6_name = Label(DataLeftFrame, textvariable  = self.var_subject6_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                                    txt_subject6_name.place(x = 320, y = 230, width = 180)
                                    lbl_heading6 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                                    lbl_heading6.place(x = 500, y = 230)
                                    txt_subject6 = ttk.Entry(DataLeftFrame, textvariable  = self.var_subject6, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER)
                                    txt_subject6.place(x = 540, y = 230, width = 180)

                                    ## Total Marks
                                    lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_marks.place(x = 3, y = 280)

                                    txt_marks = ttk.Entry(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_marks.place(x = 120, y = 280, width = 200)
                                    txt_total_marks = Label(DataLeftFrame, text = "Total Marks: 600", font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                                    txt_total_marks.place(x = 330, y = 280, width = 200)

                                    ## Remarks
                                    lbl_remarks = Label(DataLeftFrame, text = "Remarks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                                    lbl_remarks.place(x = 3, y = 320)

                                    txt_remarks = ttk.Entry(DataLeftFrame, textvariable  = self.var_remarks, font = ("Times New Roman", 14, "bold"), width = 18)
                                    txt_remarks.place(x = 120, y = 320, width = 550, height = 25)

                                    # Buttons
                                    self.btn_add = Button(DataRightFrame, text = "Add Record", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.add_data)
                                    self.btn_add.place(x = 0, y = 0, width = 190)

                                    self.btn_update = Button(DataRightFrame, text = "Update\nRecord", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.update_data)
                                    self.btn_update.place(x = 0, y = 90, width = 190, height = 80)

                                    self.btn_show = Button(DataRightFrame, text = "Show Record", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.show_record)
                                    self.btn_show.place(x = 0, y = 170, width = 190, height = 70)

                                    self.btn_reset = Button(DataRightFrame, text = "Reset", font = ("Handlee", 25, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset_data)
                                    self.btn_reset.place(x = 0, y = 240, width = 190, height = 70)

                                def subjects(self):
                                    if self.var_class.get() == "Class-XI--Section-A" or self.var_class.get() == "Class-XII--Section-A":
                                        self.var_subject1_name.set("English")
                                        self.var_subject2_name.set("Mathematics")
                                        self.var_subject3_name.set("Physics")
                                        self.var_subject4_name.set("Chemistry")
                                        self.var_subject5_name.set("Computer Science")
                                        self.var_subject6_name.set("Physical Education")
                                        messagebox.showinfo("Requests", "Please Write NONE if You Not Taken 6th Subject.\n OR If You Not Taken That 6th Subject Please Write\n Subject_Name:Marks.")
                                    elif self.var_class.get() == "Class-XI--Section-B" or self.var_class.get() == "Class-XII--Section-B":
                                        self.var_subject1_name.set("English")
                                        self.var_subject2_name.set("Mathematics")
                                        self.var_subject3_name.set("Physics")
                                        self.var_subject4_name.set("Chemistry")
                                        self.var_subject5_name.set("Biology")
                                        self.var_subject6_name.set("Physical Education")
                                        messagebox.showinfo("Requests", "Please Write NONE if You Not Taken 6th Subject.\n OR If You Not Taken That 6th Subject Please Write\n Subject_Name:Marks.")
                                    elif self.var_class.get() == "Class-XI--Section-C" or self.var_class.get() == "Class-XII--Section-C":
                                        self.var_subject1_name.set("English")
                                        self.var_subject2_name.set("Mathematics")
                                        self.var_subject3_name.set("Accountancy")
                                        self.var_subject4_name.set("Economics")
                                        self.var_subject5_name.set("Business Studies")
                                        self.var_subject6_name.set("Physical Education")
                                        messagebox.showinfo("Requests", "Please Write NONE if You Not Taken 6th Subject.\n OR If You Not Taken That 6th Subject Please Write\n Subject_Name:Marks.")
                                    elif self.var_class.get() == "Class-XI--Section-D" or self.var_class.get() == "Class-XII--Section-D":
                                        self.var_subject1_name.set("English")
                                        self.var_subject2_name.set("Mathematics")
                                        self.var_subject3_name.set("Accountancy")
                                        self.var_subject4_name.set("Economics")
                                        self.var_subject5_name.set("Business Studies")
                                        self.var_subject6_name.set("Computer Science")
                                        messagebox.showinfo("Requests", "Please Write NONE if You Not Taken 6th Subject.\n OR If You Not Taken That 6th Subject Please Write\n Subject_Name:Marks.")
                                    else:
                                        messagebox.showerror("Error", "Please Choose One Option....")
                                        self.var_class.set("Select Class - Section")

                                def add_data(self):
                                    if self.var_class.get() == "Class-XI--Section-A" or self.var_class.get() == "Class-XII--Section-A":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or self.var_subject6.get() == "" or 
                                                        self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            try:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_11_12_SECTION_A VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                        self.var_admission_id.get(),
                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                        self.var_class.get(),
                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                        self.var_remarks.get()
                                                                                                                                                    ))
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-B" or self.var_class.get() == "Class-XII--Section-B":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            try:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_11_12_SECTION_B VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                        self.var_admission_id.get(),
                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                        self.var_class.get(),
                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                        self.var_remarks.get()
                                                                                                                                                    ))
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-C" or self.var_class.get() == "Class-XII--Section-C":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            try:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_11_12_SECTION_C VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                        self.var_admission_id.get(),
                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                        self.var_class.get(),
                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                        self.var_remarks.get()
                                                                                                                                                    ))
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-D" or self.var_class.get() == "Class-XII--Section-D":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            try:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO EXAM_MANAGEMENT_CLASS_11_12_SECTION_D VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                        self.var_admission_id.get(),
                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                        self.var_class.get(),
                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                        self.var_remarks.get()
                                                                                                                                                    ))
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nAdded Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    else:
                                        messagebox.showerror("Error",  "All Fields are Required!!!")

                                def update_data(self):
                                    if self.var_class.get() == "Class-XI--Section-A" or self.var_class.get() == "Class-XII--Section-A":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_11_12)
                                            try:
                                                if update>0:
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_11_12_SECTION_A set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Mathematics_Marks = %s, Physics_Marks = %s, Chemistry_Marks = %s, Computer_Science_Marks = %s, Physical_Education_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                            ))
                                                else:
                                                    if not update:
                                                        return
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-B" or self.var_class.get() == "Class-XII--Section-B":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_11_12)
                                            try:
                                                if update>0:
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_11_12_SECTION_B set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Mathematics_Marks = %s, Physics_Marks = %s, Chemistry_Marks = %s, Biology_Marks = %s, Physical_Education_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                            ))
                                                else:
                                                    if not update:
                                                        return
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-C" or self.var_class.get() == "Class-XII--Section-C":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_11_12)
                                            try:
                                                if update>0:
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_11_12_SECTION_C set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Mathematics_Marks = %s, Accountancy_Marks = %s, Economics_Marks = %s, Business_Studies_Marks = %s, Physical_Education_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                            ))
                                                else:
                                                    if not update:
                                                        return
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)
                                    elif self.var_class.get() == "Class-XI--Section-D" or self.var_class.get() == "Class-XII--Section-D":
                                        if (self.var_admission_id.get() == "" or self.var_student_name.get() == "" or self.var_class.get() == "Select Class" or 
                                                self.var_percentage.get() == "" or self.var_subject1.get() =="" or self.var_subject2.get() == "" or self.var_subject3.get() == "" or
                                                    self.var_subject4.get() == "" or self.var_subject5.get() == "" or 
                                                        self.var_subject6.get() == "" or self.var_total_marks.get() == "" or self.var_remarks.get() == ""):
                                            messagebox.showerror("Error", "All Fields are Required!!")
                                        else:
                                            update = messagebox.askyesno("Update", "Are You Sure Update This Student Data", parent = self.root_11_12)
                                            try:
                                                if update>0:
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("UPDATE EXAM_MANAGEMENT_CLASS_11_12_SECTION_D set Student_Name = %s, Class = %s, Percentage = %s, English_Marks = %s, Mathematics_Marks = %s, Accountancy_Marks = %s, Economics_Marks = %s, Business_Studies_Marks = %s, Computer_Science_Marks = %s, Total_Marks = %s, Remarks = %s where Admission_ID = %s", (

                                                                                                                                                                                                                                                                                                                                                                        self.var_student_name.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_class.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_percentage.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_total_marks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_remarks.get(),
                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get()

                                                                                                                                                                                                                                                                                                                                                                            ))
                                                else:
                                                    if not update:
                                                        return
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Exam Record \nAdmission ID: {self.var_admission_id.get()}\nStudent Name: {self.var_student_name.get()}\nClass: {self.var_class.get()}\nUpdated Succesfully!", parent = self.root_11_12)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_11_12)

                                def show_record(self):
                                    class SHOW_RECORD:

                                        def __init__(self,root_record):
                                            self.root_record = root_record
                                            self.root_record.title("Choose")
                                            self.root_record.geometry("300x150+500+200")

                                            label = Label(self.root_record, text = "Choose", font = ("arial", 25, "bold"), bg = "Black", fg = "white")
                                            label.pack(side = TOP, fill = X)
                                            label = Label(self.root_record, text = "", font = ("arial", 17, "bold"), bg = "Black", fg = "white")
                                            label.pack(side = BOTTOM, fill = X)

                                            self.btn_11 = Button(self.root_record, text = "Class XI", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.class_11)
                                            self.btn_11.place(x = 0, y = 43, width = 150)

                                            self.btn_12 = Button(self.root_record, text = "Class XII", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.class_12)
                                            self.btn_12.place(x = 150, y = 43, width = 150)

                                        def class_11(self):
                                            class SHOW_11:

                                                def __init__(self, root_show_11):
                                                    self.root_show_11 = root_show_11
                                                    self.root_show_11.title("SHOW CLass-11 Exam Details")
                                                    self.root_show_11.geometry("1100x680+150+5")
                                                    self.root_show_11.config(bg = "Darkgoldenrod")

                                                    self.root_show_11.focus_force()
                                                    self.root_show_11.grab_set()
                                                    self.root_show_11.resizable(FALSE, FALSE)

                                                    bg_lbl = Label(self.root_show_11, bd=2, relief=RIDGE)
                                                    bg_lbl.place(x = 5, y = 5, width = 1090, height = 670)

                                                    lbl_title = Label(bg_lbl, text = " <---- CLASS 11 ----> ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                                    lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                                                    self.btn_add = Button(self.root_show_11, text = "Close", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_show_11.destroy)
                                                    self.btn_add.place(x = 15, y = 18, height = 40)

                                                    self.Main_Frame_1 = Frame(self.root_show_11, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_1.place(x = 11, y = 70, width = 1075, height = 140)

                                                    self.Main_Frame_2 = Frame(self.root_show_11, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_2.place(x = 11, y = 220, width = 1075, height = 140)

                                                    self.Main_Frame_3 = Frame(self.root_show_11, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_3.place(x = 11, y = 370, width = 1075, height = 140)

                                                    self.Main_Frame_4 = Frame(self.root_show_11, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_4.place(x = 11, y = 520, width = 1075, height = 140)

                                                    style_1 = ttk.Style()
                                                    style_1.theme_use("alt")
                                                    style_1.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_11_1 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_11_1 = Scrollbar(self.Main_Frame_1, orient = HORIZONTAL)
                                                    scroll_x_show_11_1.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_11_1 = Scrollbar(self.Main_Frame_1, orient = VERTICAL)
                                                    scroll_y_show_11_1.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_11_1 = ttk.Treeview(self.Main_Frame_1, height = 200, show = "headings", columns = col_show_11_1, xscrollcommand = scroll_x_show_11_1.set, yscrollcommand = scroll_y_show_11_1.set)

                                                    scroll_x_show_11_1.config(command = self.treeview_show_11_1.xview)
                                                    scroll_y_show_11_1.config(command = self.treeview_show_11_1.yview)

                                                    self.treeview_show_11_1.heading("id", text = "Admission ID")
                                                    self.treeview_show_11_1.heading("name", text = "Student Name")
                                                    self.treeview_show_11_1.heading("class", text = "Class")
                                                    self.treeview_show_11_1.heading("per", text = "Percentage")
                                                    self.treeview_show_11_1.heading("subject1", text = "English Marks")
                                                    self.treeview_show_11_1.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_11_1.heading("subject3", text = "Physics Marks")
                                                    self.treeview_show_11_1.heading("subject4", text = "Chemistry Marks")
                                                    self.treeview_show_11_1.heading("subject5", text = "Computer Science Marks")
                                                    self.treeview_show_11_1.heading("subject6", text = "Physical Education Marks")
                                                    self.treeview_show_11_1.heading("marks", text = "Total Marks")
                                                    self.treeview_show_11_1.heading("remark", text = "Remarks")

                                                    self.treeview_show_11_1.column("id", width = 100)
                                                    self.treeview_show_11_1.column("name", width = 150)
                                                    self.treeview_show_11_1.column("class", width = 150)
                                                    self.treeview_show_11_1.column("per", width = 100)
                                                    self.treeview_show_11_1.column("subject1", width = 200)
                                                    self.treeview_show_11_1.column("subject2", width = 200)
                                                    self.treeview_show_11_1.column("subject3", width = 200)
                                                    self.treeview_show_11_1.column("subject4", width = 200)
                                                    self.treeview_show_11_1.column("subject5", width = 200)
                                                    self.treeview_show_11_1.column("subject6", width = 200)
                                                    self.treeview_show_11_1.column("marks", width = 100)
                                                    self.treeview_show_11_1.column("remark", width = 500)

                                                    self.treeview_show_11_1.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_1()

                                                    style_2 = ttk.Style()
                                                    style_2.theme_use("alt")
                                                    style_2.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_11_2 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_11_2 = Scrollbar(self.Main_Frame_2, orient = HORIZONTAL)
                                                    scroll_x_show_11_2.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_11_2 = Scrollbar(self.Main_Frame_2, orient = VERTICAL)
                                                    scroll_y_show_11_2.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_11_2 = ttk.Treeview(self.Main_Frame_2, height = 200, show = "headings", columns = col_show_11_2, xscrollcommand = scroll_x_show_11_2.set, yscrollcommand = scroll_y_show_11_2.set)

                                                    scroll_x_show_11_2.config(command = self.treeview_show_11_2.xview)
                                                    scroll_y_show_11_2.config(command = self.treeview_show_11_2.yview)

                                                    self.treeview_show_11_2.heading("id", text = "Admission ID")
                                                    self.treeview_show_11_2.heading("name", text = "Student Name")
                                                    self.treeview_show_11_2.heading("class", text = "Class")
                                                    self.treeview_show_11_2.heading("per", text = "Percentage")
                                                    self.treeview_show_11_2.heading("subject1", text = "English Marks")
                                                    self.treeview_show_11_2.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_11_2.heading("subject3", text = "Physics Marks")
                                                    self.treeview_show_11_2.heading("subject4", text = "Chemistry Marks")
                                                    self.treeview_show_11_2.heading("subject5", text = "Biology Marks")
                                                    self.treeview_show_11_2.heading("subject6", text = "Computer Science Marks")
                                                    self.treeview_show_11_2.heading("marks", text = "Total Marks")
                                                    self.treeview_show_11_2.heading("remark", text = "Remarks")

                                                    self.treeview_show_11_2.column("id", width = 100)
                                                    self.treeview_show_11_2.column("name", width = 150)
                                                    self.treeview_show_11_2.column("class", width = 150)
                                                    self.treeview_show_11_2.column("per", width = 100)
                                                    self.treeview_show_11_2.column("subject1", width = 200)
                                                    self.treeview_show_11_2.column("subject2", width = 200)
                                                    self.treeview_show_11_2.column("subject3", width = 200)
                                                    self.treeview_show_11_2.column("subject4", width = 200)
                                                    self.treeview_show_11_2.column("subject5", width = 200)
                                                    self.treeview_show_11_2.column("subject6", width = 200)
                                                    self.treeview_show_11_2.column("marks", width = 100)
                                                    self.treeview_show_11_2.column("remark", width = 500)

                                                    self.treeview_show_11_2.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_2()

                                                    style_3 = ttk.Style()
                                                    style_3.theme_use("alt")
                                                    style_3.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_11_3 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_11_3 = Scrollbar(self.Main_Frame_3, orient = HORIZONTAL)
                                                    scroll_x_show_11_3.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_11_3 = Scrollbar(self.Main_Frame_3, orient = VERTICAL)
                                                    scroll_y_show_11_3.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_11_3 = ttk.Treeview(self.Main_Frame_3, height = 200, show = "headings", columns = col_show_11_3, xscrollcommand = scroll_x_show_11_3.set, yscrollcommand = scroll_y_show_11_3.set)

                                                    scroll_x_show_11_3.config(command = self.treeview_show_11_1.xview)
                                                    scroll_y_show_11_3.config(command = self.treeview_show_11_1.yview)

                                                    self.treeview_show_11_3.heading("id", text = "Admission ID")
                                                    self.treeview_show_11_3.heading("name", text = "Student Name")
                                                    self.treeview_show_11_3.heading("class", text = "Class")
                                                    self.treeview_show_11_3.heading("per", text = "Percentage")
                                                    self.treeview_show_11_3.heading("subject1", text = "English Marks")
                                                    self.treeview_show_11_3.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_11_3.heading("subject3", text = "Accountancy Marks")
                                                    self.treeview_show_11_3.heading("subject4", text = "Economics Marks")
                                                    self.treeview_show_11_3.heading("subject5", text = "Business Studies Marks")
                                                    self.treeview_show_11_3.heading("subject6", text = "Physical Education Marks")
                                                    self.treeview_show_11_3.heading("marks", text = "Total Marks")
                                                    self.treeview_show_11_3.heading("remark", text = "Remarks")

                                                    self.treeview_show_11_3.column("id", width = 100)
                                                    self.treeview_show_11_3.column("name", width = 150)
                                                    self.treeview_show_11_3.column("class", width = 150)
                                                    self.treeview_show_11_3.column("per", width = 100)
                                                    self.treeview_show_11_3.column("subject1", width = 200)
                                                    self.treeview_show_11_3.column("subject2", width = 200)
                                                    self.treeview_show_11_3.column("subject3", width = 200)
                                                    self.treeview_show_11_3.column("subject4", width = 200)
                                                    self.treeview_show_11_3.column("subject5", width = 200)
                                                    self.treeview_show_11_3.column("subject6", width = 200)
                                                    self.treeview_show_11_3.column("marks", width = 100)
                                                    self.treeview_show_11_3.column("remark", width = 500)

                                                    self.treeview_show_11_3.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_3()

                                                    style_4 = ttk.Style()
                                                    style_4.theme_use("alt")
                                                    style_4.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_11_4 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_11_4 = Scrollbar(self.Main_Frame_4, orient = HORIZONTAL)
                                                    scroll_x_show_11_4.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_11_4 = Scrollbar(self.Main_Frame_4, orient = VERTICAL)
                                                    scroll_y_show_11_4.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_11_4 = ttk.Treeview(self.Main_Frame_4, height = 200, show = "headings", columns = col_show_11_4, xscrollcommand = scroll_x_show_11_4.set, yscrollcommand = scroll_y_show_11_4.set)

                                                    scroll_x_show_11_4.config(command = self.treeview_show_11_4.xview)
                                                    scroll_y_show_11_4.config(command = self.treeview_show_11_4.yview)

                                                    self.treeview_show_11_4.heading("id", text = "Admission ID")
                                                    self.treeview_show_11_4.heading("name", text = "Student Name")
                                                    self.treeview_show_11_4.heading("class", text = "Class")
                                                    self.treeview_show_11_4.heading("per", text = "Percentage")
                                                    self.treeview_show_11_4.heading("subject1", text = "English Marks")
                                                    self.treeview_show_11_4.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_11_4.heading("subject3", text = "Accountancy Marks")
                                                    self.treeview_show_11_4.heading("subject4", text = "Economics Marks")
                                                    self.treeview_show_11_4.heading("subject5", text = "Business Studies Marks")
                                                    self.treeview_show_11_4.heading("subject6", text = "Computer Science Marks")
                                                    self.treeview_show_11_4.heading("marks", text = "Total Marks")
                                                    self.treeview_show_11_4.heading("remark", text = "Remarks")

                                                    self.treeview_show_11_4.column("id", width = 100)
                                                    self.treeview_show_11_4.column("name", width = 150)
                                                    self.treeview_show_11_4.column("class", width = 150)
                                                    self.treeview_show_11_4.column("per", width = 100)
                                                    self.treeview_show_11_4.column("subject1", width = 200)
                                                    self.treeview_show_11_4.column("subject2", width = 200)
                                                    self.treeview_show_11_4.column("subject3", width = 200)
                                                    self.treeview_show_11_4.column("subject4", width = 200)
                                                    self.treeview_show_11_4.column("subject5", width = 200)
                                                    self.treeview_show_11_4.column("subject6", width = 200)
                                                    self.treeview_show_11_4.column("marks", width = 100)
                                                    self.treeview_show_11_4.column("remark", width = 500)

                                                    self.treeview_show_11_4.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_4()

                                                def Fetch_Data_1(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_A WHERE CLASS = 'Class-XI--Section-A'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_11_1.delete(*self.treeview_show_11_1.get_children())
                                                        for i in data:
                                                            self.treeview_show_11_1.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()
                                                    
                                                def Fetch_Data_2(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_B WHERE CLASS = 'Class-XI--Section-B'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_11_2.delete(*self.treeview_show_11_2.get_children())
                                                        for i in data:
                                                            self.treeview_show_11_2.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                                def Fetch_Data_3(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_C WHERE CLASS = 'Class-XI--Section-C'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_11_3.delete(*self.treeview_show_11_3.get_children())
                                                        for i in data:
                                                            self.treeview_show_11_3.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                                def Fetch_Data_4(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_D WHERE CLASS = 'Class-XI--Section-D'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_11_4.delete(*self.treeview_show_11_4.get_children())
                                                        for i in data:
                                                            self.treeview_show_11_4.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                            if __name__ == "__main__":
                                                root_show_11 = Toplevel()
                                                obj_show_11 = SHOW_11(root_show_11)
                                                root_show_11.mainloop()

                                        def class_12(self):
                                            class SHOW_12:

                                                def __init__(self, root_show_12):
                                                    self.root_show_12 = root_show_12
                                                    self.root_show_12.title("SHOW CLass-12 Exam Details")
                                                    self.root_show_12.geometry("1100x680+150+5")
                                                    self.root_show_12.config(bg = "Darkgoldenrod")

                                                    self.root_show_12.focus_force()
                                                    self.root_show_12.grab_set()
                                                    self.root_show_12.resizable(FALSE, FALSE)

                                                    bg_lbl = Label(self.root_show_12, bd=2, relief=RIDGE)
                                                    bg_lbl.place(x = 5, y = 5, width = 1090, height = 670)

                                                    lbl_title = Label(bg_lbl, text = " <---- CLASS 12 ----> ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                                                    lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                                                    self.btn_add = Button(self.root_show_12, text = "Close", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_show_12.destroy)
                                                    self.btn_add.place(x = 15, y = 18, height = 40)

                                                    self.Main_Frame_1 = Frame(self.root_show_12, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_1.place(x = 12, y = 70, width = 1075, height = 140)

                                                    self.Main_Frame_2 = Frame(self.root_show_12, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_2.place(x = 12, y = 220, width = 1075, height = 140)

                                                    self.Main_Frame_3 = Frame(self.root_show_12, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_3.place(x = 12, y = 370, width = 1075, height = 140)

                                                    self.Main_Frame_4 = Frame(self.root_show_12, bg = "Navy", bd = 10, relief = GROOVE)
                                                    self.Main_Frame_4.place(x = 12, y = 520, width = 1075, height = 140)

                                                    style_1 = ttk.Style()
                                                    style_1.theme_use("alt")
                                                    style_1.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_12_1 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_12_1 = Scrollbar(self.Main_Frame_1, orient = HORIZONTAL)
                                                    scroll_x_show_12_1.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_12_1 = Scrollbar(self.Main_Frame_1, orient = VERTICAL)
                                                    scroll_y_show_12_1.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_12_1 = ttk.Treeview(self.Main_Frame_1, height = 200, show = "headings", columns = col_show_12_1, xscrollcommand = scroll_x_show_12_1.set, yscrollcommand = scroll_y_show_12_1.set)

                                                    scroll_x_show_12_1.config(command = self.treeview_show_12_1.xview)
                                                    scroll_y_show_12_1.config(command = self.treeview_show_12_1.yview)

                                                    self.treeview_show_12_1.heading("id", text = "Admission ID")
                                                    self.treeview_show_12_1.heading("name", text = "Student Name")
                                                    self.treeview_show_12_1.heading("class", text = "Class")
                                                    self.treeview_show_12_1.heading("per", text = "Percentage")
                                                    self.treeview_show_12_1.heading("subject1", text = "English Marks")
                                                    self.treeview_show_12_1.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_12_1.heading("subject3", text = "Physics Marks")
                                                    self.treeview_show_12_1.heading("subject4", text = "Chemistry Marks")
                                                    self.treeview_show_12_1.heading("subject5", text = "Computer Science Marks")
                                                    self.treeview_show_12_1.heading("subject6", text = "Physical Education Marks")
                                                    self.treeview_show_12_1.heading("marks", text = "Total Marks")
                                                    self.treeview_show_12_1.heading("remark", text = "Remarks")

                                                    self.treeview_show_12_1.column("id", width = 100)
                                                    self.treeview_show_12_1.column("name", width = 150)
                                                    self.treeview_show_12_1.column("class", width = 150)
                                                    self.treeview_show_12_1.column("per", width = 100)
                                                    self.treeview_show_12_1.column("subject1", width = 200)
                                                    self.treeview_show_12_1.column("subject2", width = 200)
                                                    self.treeview_show_12_1.column("subject3", width = 200)
                                                    self.treeview_show_12_1.column("subject4", width = 200)
                                                    self.treeview_show_12_1.column("subject5", width = 200)
                                                    self.treeview_show_12_1.column("subject6", width = 200)
                                                    self.treeview_show_12_1.column("marks", width = 100)
                                                    self.treeview_show_12_1.column("remark", width = 500)

                                                    self.treeview_show_12_1.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_1()

                                                    style_2 = ttk.Style()
                                                    style_2.theme_use("alt")
                                                    style_2.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_12_2 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_12_2 = Scrollbar(self.Main_Frame_2, orient = HORIZONTAL)
                                                    scroll_x_show_12_2.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_12_2 = Scrollbar(self.Main_Frame_2, orient = VERTICAL)
                                                    scroll_y_show_12_2.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_12_2 = ttk.Treeview(self.Main_Frame_2, height = 200, show = "headings", columns = col_show_12_2, xscrollcommand = scroll_x_show_12_2.set, yscrollcommand = scroll_y_show_12_2.set)

                                                    scroll_x_show_12_2.config(command = self.treeview_show_12_2.xview)
                                                    scroll_y_show_12_2.config(command = self.treeview_show_12_2.yview)

                                                    self.treeview_show_12_2.heading("id", text = "Admission ID")
                                                    self.treeview_show_12_2.heading("name", text = "Student Name")
                                                    self.treeview_show_12_2.heading("class", text = "Class")
                                                    self.treeview_show_12_2.heading("per", text = "Percentage")
                                                    self.treeview_show_12_2.heading("subject1", text = "English Marks")
                                                    self.treeview_show_12_2.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_12_2.heading("subject3", text = "Physics Marks")
                                                    self.treeview_show_12_2.heading("subject4", text = "Chemistry Marks")
                                                    self.treeview_show_12_2.heading("subject5", text = "Biology Marks")
                                                    self.treeview_show_12_2.heading("subject6", text = "Computer Science Marks")
                                                    self.treeview_show_12_2.heading("marks", text = "Total Marks")
                                                    self.treeview_show_12_2.heading("remark", text = "Remarks")

                                                    self.treeview_show_12_2.column("id", width = 100)
                                                    self.treeview_show_12_2.column("name", width = 150)
                                                    self.treeview_show_12_2.column("class", width = 150)
                                                    self.treeview_show_12_2.column("per", width = 100)
                                                    self.treeview_show_12_2.column("subject1", width = 200)
                                                    self.treeview_show_12_2.column("subject2", width = 200)
                                                    self.treeview_show_12_2.column("subject3", width = 200)
                                                    self.treeview_show_12_2.column("subject4", width = 200)
                                                    self.treeview_show_12_2.column("subject5", width = 200)
                                                    self.treeview_show_12_2.column("subject6", width = 200)
                                                    self.treeview_show_12_2.column("marks", width = 100)
                                                    self.treeview_show_12_2.column("remark", width = 500)

                                                    self.treeview_show_12_2.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_2()

                                                    style_3 = ttk.Style()
                                                    style_3.theme_use("alt")
                                                    style_3.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_12_3 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_12_3 = Scrollbar(self.Main_Frame_3, orient = HORIZONTAL)
                                                    scroll_x_show_12_3.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_12_3 = Scrollbar(self.Main_Frame_3, orient = VERTICAL)
                                                    scroll_y_show_12_3.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_12_3 = ttk.Treeview(self.Main_Frame_3, height = 200, show = "headings", columns = col_show_12_3, xscrollcommand = scroll_x_show_12_3.set, yscrollcommand = scroll_y_show_12_3.set)

                                                    scroll_x_show_12_3.config(command = self.treeview_show_12_1.xview)
                                                    scroll_y_show_12_3.config(command = self.treeview_show_12_1.yview)

                                                    self.treeview_show_12_3.heading("id", text = "Admission ID")
                                                    self.treeview_show_12_3.heading("name", text = "Student Name")
                                                    self.treeview_show_12_3.heading("class", text = "Class")
                                                    self.treeview_show_12_3.heading("per", text = "Percentage")
                                                    self.treeview_show_12_3.heading("subject1", text = "English Marks")
                                                    self.treeview_show_12_3.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_12_3.heading("subject3", text = "Accountancy Marks")
                                                    self.treeview_show_12_3.heading("subject4", text = "Economics Marks")
                                                    self.treeview_show_12_3.heading("subject5", text = "Business Studies Marks")
                                                    self.treeview_show_12_3.heading("subject6", text = "Physical Education Marks")
                                                    self.treeview_show_12_3.heading("marks", text = "Total Marks")
                                                    self.treeview_show_12_3.heading("remark", text = "Remarks")

                                                    self.treeview_show_12_3.column("id", width = 100)
                                                    self.treeview_show_12_3.column("name", width = 150)
                                                    self.treeview_show_12_3.column("class", width = 150)
                                                    self.treeview_show_12_3.column("per", width = 100)
                                                    self.treeview_show_12_3.column("subject1", width = 200)
                                                    self.treeview_show_12_3.column("subject2", width = 200)
                                                    self.treeview_show_12_3.column("subject3", width = 200)
                                                    self.treeview_show_12_3.column("subject4", width = 200)
                                                    self.treeview_show_12_3.column("subject5", width = 200)
                                                    self.treeview_show_12_3.column("subject6", width = 200)
                                                    self.treeview_show_12_3.column("marks", width = 100)
                                                    self.treeview_show_12_3.column("remark", width = 500)

                                                    self.treeview_show_12_3.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_3()

                                                    style_4 = ttk.Style()
                                                    style_4.theme_use("alt")
                                                    style_4.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                                                    col_show_12_4 = ("id", "name", "class", "per", "subject1", "subject2", "subject3", "subject4", "subject5", "subject6", "marks", "remark")

                                                    scroll_x_show_12_4 = Scrollbar(self.Main_Frame_4, orient = HORIZONTAL)
                                                    scroll_x_show_12_4.pack(side = BOTTOM, fill = X)

                                                    scroll_y_show_12_4 = Scrollbar(self.Main_Frame_4, orient = VERTICAL)
                                                    scroll_y_show_12_4.pack(side = RIGHT, fill = Y)

                                                    self.treeview_show_12_4 = ttk.Treeview(self.Main_Frame_4, height = 200, show = "headings", columns = col_show_12_4, xscrollcommand = scroll_x_show_12_4.set, yscrollcommand = scroll_y_show_12_4.set)

                                                    scroll_x_show_12_4.config(command = self.treeview_show_12_4.xview)
                                                    scroll_y_show_12_4.config(command = self.treeview_show_12_4.yview)

                                                    self.treeview_show_12_4.heading("id", text = "Admission ID")
                                                    self.treeview_show_12_4.heading("name", text = "Student Name")
                                                    self.treeview_show_12_4.heading("class", text = "Class")
                                                    self.treeview_show_12_4.heading("per", text = "Percentage")
                                                    self.treeview_show_12_4.heading("subject1", text = "English Marks")
                                                    self.treeview_show_12_4.heading("subject2", text = "Mathematics Marks")
                                                    self.treeview_show_12_4.heading("subject3", text = "Accountancy Marks")
                                                    self.treeview_show_12_4.heading("subject4", text = "Economics Marks")
                                                    self.treeview_show_12_4.heading("subject5", text = "Business Studies Marks")
                                                    self.treeview_show_12_4.heading("subject6", text = "Computer Science Marks")
                                                    self.treeview_show_12_4.heading("marks", text = "Total Marks")
                                                    self.treeview_show_12_4.heading("remark", text = "Remarks")

                                                    self.treeview_show_12_4.column("id", width = 100)
                                                    self.treeview_show_12_4.column("name", width = 150)
                                                    self.treeview_show_12_4.column("class", width = 150)
                                                    self.treeview_show_12_4.column("per", width = 100)
                                                    self.treeview_show_12_4.column("subject1", width = 200)
                                                    self.treeview_show_12_4.column("subject2", width = 200)
                                                    self.treeview_show_12_4.column("subject3", width = 200)
                                                    self.treeview_show_12_4.column("subject4", width = 200)
                                                    self.treeview_show_12_4.column("subject5", width = 200)
                                                    self.treeview_show_12_4.column("subject6", width = 200)
                                                    self.treeview_show_12_4.column("marks", width = 100)
                                                    self.treeview_show_12_4.column("remark", width = 500)

                                                    self.treeview_show_12_4.pack(side = LEFT, fill = BOTH, expand = TRUE)
                                                    self.Fetch_Data_4()

                                                def Fetch_Data_1(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_A WHERE CLASS = 'Class-XII--Section-A'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_12_1.delete(*self.treeview_show_12_1.get_children())
                                                        for i in data:
                                                            self.treeview_show_12_1.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()
                                                    
                                                def Fetch_Data_2(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_B WHERE CLASS = 'Class-XII--Section-B'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_12_2.delete(*self.treeview_show_12_2.get_children())
                                                        for i in data:
                                                            self.treeview_show_12_2.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                                def Fetch_Data_3(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_C WHERE CLASS = 'Class-XII--Section-C'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_12_3.delete(*self.treeview_show_12_3.get_children())
                                                        for i in data:
                                                            self.treeview_show_12_3.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                                def Fetch_Data_4(self):
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute("SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_D WHERE CLASS = 'Class-XII--Section-D'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        self.treeview_show_12_4.delete(*self.treeview_show_12_4.get_children())
                                                        for i in data:
                                                            self.treeview_show_12_4.insert("", END, values = i)
                                                        mydb.commit()
                                                    mydb.close()

                                            if __name__ == "__main__":
                                                root_show_12 = Toplevel()
                                                obj_show_12 = SHOW_12(root_show_12)
                                                root_show_12.mainloop()

                                    if __name__ == "__main__":
                                        root_record = Toplevel()
                                        obj_record = SHOW_RECORD(root_record)
                                        root_record.mainloop()

                                def reset_data(self):
                                    self.clear_data()
                                    self.var_admission_id.set("")
                                    self.var_student_name.set("")
                                    self.var_class.set("Select Class - Section")
                                    self.var_percentage.set("")

                                def clear_data(self):
                                    self.__init__(root_11_12)

                            if __name__ == "__main__":
                                root_11_12 = Toplevel()
                                obj_11_12 = CLASS_11_12(root_11_12)
                                root_11_12.mainloop()

                    if __name__ == "__main__":
                        root_add = Toplevel()
                        obj_exam = ADD(root_add)
                        root_add.mainloop()

                def search_record(self):
                    class EXAM_SEARCH:
                
                        def __init__(self,root_search):
                            self.root_search = root_search
                            self.root_search.title("Search Record")
                            self.root_search.geometry("1100x480+150+120")

                            self.root_search.config(bg = "Darkgoldenrod")
                            self.root_search.focus_force()
                            self.root_search.grab_set()

                            bg_lbl = Label(self.root_search, bd=2, relief=RIDGE)
                            bg_lbl.place(x = 5, y = 5, width = 1090, height = 470)

                            lbl_title = Label(bg_lbl, text = " < ----  SEARCH STUDENT DETAILS  ---- > ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                            lbl_title.place(x = 0, y = 0, width = 1085, height = 60)

                            # Variables
                            self.var_admission_id = StringVar()
                            self.var_student_name = StringVar()
                            self.var_class = StringVar()
                            self.var_percentage = StringVar()
                            self.var_subject1_name = StringVar()
                            self.var_subject1 = StringVar()
                            self.var_subject2_name = StringVar()
                            self.var_subject2 = StringVar()
                            self.var_subject3_name = StringVar()
                            self.var_subject3 = StringVar()
                            self.var_subject4_name = StringVar()
                            self.var_subject4 = StringVar()
                            self.var_subject5_name = StringVar()
                            self.var_subject5 = StringVar()
                            self.var_subject6_name = StringVar()
                            self.var_subject6 = StringVar()
                            self.var_subject7_name = StringVar()
                            self.var_subject7 = StringVar() 
                            self.var_total_marks = StringVar()
                            self.var_search_option = StringVar()
                            self.var_search = StringVar()

                            self.btn_close = Button(self.root_search, text = "Close", font = ("Handlee", 20, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.root_search.destroy)
                            self.btn_close.place(x = 15, y = 18, height = 40)

                            # Manage Frame
                            Manage_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="White")
                            Manage_Frame.place(x = 20, y = 65, width = 1020, height = 380)

                            # Left Frame
                            DataLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Student Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataLeftFrame.place(x = 20, y = 20, width = 735, height = 350)

                            # Button Frame
                            DataButtonFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, text = "Button Frame", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            DataButtonFrame.place(x = 760, y = 40, width = 250, height = 250)

                            # Buttons
                            self.btn_search = Button(DataButtonFrame, text = "  Search  ", font = ("Comic Sans MS", 22, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.search)
                            self.btn_search.place(x = 25, y = 120, height = 50)

                            self.btn_reset = Button(DataButtonFrame, text = "  Reset  ", font = ("Comic Sans MS", 22, "bold"), fg = "Lightskyblue", bg = "Midnightblue", bd = 8, relief = SUNKEN, cursor = "hand2", command = self.reset)
                            self.btn_reset.place(x = 35, y = 170, height = 50)

                            ## Search
                            lbl_search = Label(DataButtonFrame, text = "Search :", font = ("Times New Roman", 20, "bold"))
                            lbl_search.place(x = 25, y = 10)

                            com_txt_search = ttk.Combobox(DataButtonFrame, textvariable = self.var_search_option, font = ("Times New Roman", 15, "bold"), width = 15, height = 20, state = "readonly")
                            com_txt_search["value"] = ("Select Option", "Search Through Admission ID", "Search Through Name")
                            com_txt_search.current(0)
                            com_txt_search.place(x = 25, y = 45)

                            txt_search = ttk.Entry(DataButtonFrame, textvariable  = self.var_search, font = ("Times New Roman", 15, "bold"), width = 17)
                            txt_search.place(x = 25, y = 80)

                            # Student Information
                            lbl_id = Label(DataLeftFrame, text = "Admission ID :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_id.place(x = 3, y = 3)

                            txt_id = Label(DataLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                            txt_id.place(x = 120, y = 3, width = 200)

                            ## Name
                            lbl_name = Label(DataLeftFrame, text = "Student Name :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_name.place(x = 350, y = 3)

                            txt_name = Label(DataLeftFrame, textvariable  = self.var_student_name, font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                            txt_name.place(x = 500, y = 3, width = 200)

                            ## Class
                            lbl_class_section = Label(DataLeftFrame, text = "Class-Section :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_class_section.place(x = 3, y = 40)

                            txt_name_section = Label(DataLeftFrame, textvariable  = self.var_class, font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                            txt_name_section.place(x = 120, y = 40)

                            ## Percentage
                            lbl_name = Label(DataLeftFrame, text = "Percentage :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_name.place(x = 350, y = 40)

                            txt_name = Label(DataLeftFrame, textvariable  = self.var_percentage, font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                            txt_name.place(x = 500, y = 40, width = 200)

                            ## Heading
                            lbl_heading = Label(DataLeftFrame, text = "Subject Name    :    Marks    :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading.place(x = 3, y = 80)

                            ### Subject 1
                            txt_subject1_name = Label(DataLeftFrame, textvariable  = self.var_subject1_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject1_name.place(x = 320, y = 80, width = 180)
                            lbl_heading1 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading1.place(x = 500, y = 80)
                            txt_subject1 = Label(DataLeftFrame, textvariable  = self.var_subject1, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject1.place(x = 540, y = 80, width = 180)

                            ### Subject 2
                            txt_subject2_name = Label(DataLeftFrame, textvariable  = self.var_subject2_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject2_name.place(x = 320, y = 110, width = 180)
                            lbl_heading2 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading2.place(x = 500, y = 110)
                            txt_subject2 = Label(DataLeftFrame, textvariable  = self.var_subject2, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject2.place(x = 540, y = 110, width = 180)

                            ### Subject 3
                            txt_subject3_name = Label(DataLeftFrame, textvariable  = self.var_subject3_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject3_name.place(x = 320, y = 140, width = 180)
                            lbl_heading3 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading3.place(x = 500, y = 140)
                            txt_subject3 = Label(DataLeftFrame, textvariable  = self.var_subject3, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject3.place(x = 540, y = 140, width = 180)

                            ### Subject 4
                            txt_subject4_name = Label(DataLeftFrame, textvariable  = self.var_subject4_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject4_name.place(x = 320, y = 170, width = 180)
                            lbl_heading4 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading4.place(x = 500, y = 170)
                            txt_subject4 = Label(DataLeftFrame, textvariable  = self.var_subject4, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject4.place(x = 540, y = 170, width = 180)

                            ### Subject 5
                            txt_subject5_name = Label(DataLeftFrame, textvariable  = self.var_subject5_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject5_name.place(x = 320, y = 200, width = 180)
                            lbl_heading5 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading5.place(x = 500, y = 200)
                            txt_subject5 = Label(DataLeftFrame, textvariable  = self.var_subject5, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject5.place(x = 540, y = 200, width = 180)

                            ### Subject 6
                            txt_subject6_name = Label(DataLeftFrame, textvariable  = self.var_subject6_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject6_name.place(x = 320, y = 230, width = 180)
                            lbl_heading6 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading6.place(x = 500, y = 230)
                            txt_subject6 = Label(DataLeftFrame, textvariable  = self.var_subject6, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject6.place(x = 540, y = 230, width = 180)

                            ### Subject 7
                            txt_subject7_name = Label(DataLeftFrame, textvariable  = self.var_subject7_name, font = ("Times New Roman", 14, "bold"), width = 18, state = DISABLED, relief = SUNKEN)
                            txt_subject7_name.place(x = 320, y = 265, width = 180)
                            lbl_heading7 = Label(DataLeftFrame, text = "  :: ", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_heading7.place(x = 500, y = 265)
                            txt_subject7 = Label(DataLeftFrame, textvariable  = self.var_subject7, font = ("Times New Roman", 14, "bold"), width = 18, justify = CENTER, relief = SUNKEN)
                            txt_subject7.place(x = 540, y = 265, width = 180)

                            # Total Marks
                            lbl_marks = Label(DataLeftFrame, text = "Total Marks :", font = ("Times New Roman", 12, "bold"), bg = "White")
                            lbl_marks.place(x = 3, y = 280)

                            txt_marks = Label(DataLeftFrame, textvariable  = self.var_total_marks, font = ("Times New Roman", 14, "bold"), width = 18, relief = SUNKEN)
                            txt_marks.place(x = 120, y = 280, width = 180)

                        def search(self):
                            if self.var_search_option.get() == "Search Through Admission ID":
                                if self.var_search.get() != "":
                                    self.search_data_admission()
                                else:
                                    messagebox.showerror("Error", "Field are Required!!")
                            elif self.var_search_option.get() == "Search Through Name":
                                if self.var_search.get != "":
                                    self.search_data_name()
                                else:
                                    messagebox.showerror("Error", "Field are Required!!")
                            else:
                                messagebox.showerror("Error", "Please Choose One Option")
                                self.var_search_option.set("Select Option")
                                self.var_search.set("")

                        def search_data_admission(self):
                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            cursor = mydb.cursor()
                            cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE Admission_ID = {self.var_search.get()}")
                            data = cursor.fetchall()
                            if len(data) != 0:
                                for i in data:
                                    self.var_admission_id.set(i[0])
                                    self.var_student_name.set(i[1])
                                    self.var_class.set(i[2])
                                    self.var_percentage.set(i[3])
                                    self.var_subject1_name.set("English")
                                    self.var_subject1.set(i[5])
                                    self.var_subject2_name.set("Hindi")
                                    self.var_subject2.set(i[6])
                                    self.var_subject3_name.set("Mathematics")
                                    self.var_subject3.set(i[7])
                                    self.var_subject4_name.set("Drawing")
                                    self.var_subject4.set(i[8])
                                    self.var_subject5_name.set("General Awareness")
                                    self.var_subject5.set(i[9])
                                    self.var_subject6_name.set("Environmental Science")
                                    self.var_subject6.set(i[10])        
                                    self.var_total_marks.set(i[11])
                                mydb.commit()
                            else:
                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                cursor = mydb.cursor()
                                cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_1_5 WHERE Admission_ID = {self.var_search.get()}")
                                data = cursor.fetchall()
                                if len(data) != 0:
                                    for i in data:
                                        self.var_admission_id.set(i[0])
                                        self.var_student_name.set(i[1])
                                        self.var_class.set(i[2])
                                        self.var_percentage.set(i[3])
                                        self.var_subject1_name.set("English")
                                        self.var_subject1.set(i[5])
                                        self.var_subject2_name.set("Hindi")
                                        self.var_subject2.set(i[6])
                                        self.var_subject3_name.set("Mathematics")
                                        self.var_subject3.set(i[7])
                                        self.var_subject4_name.set("Drawing")
                                        self.var_subject4.set(i[8])
                                        self.var_subject5_name.set("General Knowledge")
                                        self.var_subject5.set(i[9])
                                        self.var_subject6_name.set("Environmental Science")
                                        self.var_subject6.set(i[10])        
                                        self.var_total_marks.set(i[11])
                                    mydb.commit()
                                else:
                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    cursor = mydb.cursor()
                                    cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_6_8 WHERE Admission_ID = {self.var_search.get()}")
                                    data = cursor.fetchall()
                                    if len(data) != 0:
                                        for i in data:
                                            self.var_admission_id.set(i[0])
                                            self.var_student_name.set(i[1])
                                            self.var_class.set(i[2])
                                            self.var_percentage.set(i[3])
                                            self.var_subject1_name.set("English")
                                            self.var_subject1.set(i[5])
                                            self.var_subject2_name.set("Hindi")
                                            self.var_subject2.set(i[6])
                                            self.var_subject3_name.set("Mathematics")
                                            self.var_subject3.set(i[7])
                                            self.var_subject4_name.set("Social Science")
                                            self.var_subject4.set(i[8])
                                            self.var_subject5_name.set("Science")
                                            self.var_subject5.set(i[9])
                                            self.var_subject6_name.set("General Knowledge")
                                            self.var_subject6.set(i[10])
                                            self.var_subject7_name.set("Computer Science")
                                            self.var_subject7.set(i[12])       
                                            self.var_total_marks.set(i[12])
                                    else:
                                        mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        cursor = mydb.cursor()
                                        cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_9_10 WHERE Admission_ID = {self.var_search.get()}")
                                        data = cursor.fetchall()
                                        if len(data) != 0:
                                            for i in data:
                                                self.var_admission_id.set(i[0])
                                                self.var_student_name.set(i[1])
                                                self.var_class.set(i[2])
                                                self.var_percentage.set(i[3])
                                                self.var_subject1_name.set("English")
                                                self.var_subject1.set(i[5])
                                                self.var_subject2_name.set("Hindi")
                                                self.var_subject2.set(i[6])
                                                self.var_subject3_name.set("Mathematics")
                                                self.var_subject3.set(i[7])
                                                self.var_subject4_name.set("Social Science")
                                                self.var_subject4.set(i[8])
                                                self.var_subject5_name.set("Science")
                                                self.var_subject5.set(i[9])
                                                self.var_subject6_name.set("Physical Education")
                                                self.var_subject6.set(i[10])
                                                self.var_subject7_name.set("Computer Science")
                                                self.var_subject7.set(i[12])       
                                                self.var_total_marks.set(i[12])
                                        else:
                                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            cursor = mydb.cursor()
                                            cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_A WHERE Admission_ID = {self.var_search.get()}")
                                            data = cursor.fetchall()
                                            if len(data) != 0:
                                                for i in data:
                                                    self.var_admission_id.set(i[0])
                                                    self.var_student_name.set(i[1])
                                                    self.var_class.set(i[2])
                                                    self.var_percentage.set(i[3])
                                                    self.var_subject1_name.set("English")
                                                    self.var_subject1.set(i[5])
                                                    self.var_subject2_name.set("Mathematics")
                                                    self.var_subject2.set(i[6])
                                                    self.var_subject3_name.set("Physics")
                                                    self.var_subject3.set(i[7])
                                                    self.var_subject4_name.set("Chemistry")
                                                    self.var_subject4.set(i[8])
                                                    self.var_subject5_name.set("Computer Science")
                                                    self.var_subject5.set(i[9])
                                                    self.var_subject6_name.set("Physical Education")
                                                    self.var_subject6.set(i[10])       
                                                    self.var_total_marks.set(i[11])
                                            else:
                                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                cursor = mydb.cursor()
                                                cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_B WHERE Admission_ID = {self.var_search.get()}")
                                                data = cursor.fetchall()
                                                if len(data) != 0:
                                                    for i in data:
                                                        self.var_admission_id.set(i[0])
                                                        self.var_student_name.set(i[1])
                                                        self.var_class.set(i[2])
                                                        self.var_percentage.set(i[3])
                                                        self.var_subject1_name.set("English")
                                                        self.var_subject1.set(i[5])
                                                        self.var_subject2_name.set("Mathematics")
                                                        self.var_subject2.set(i[6])
                                                        self.var_subject3_name.set("Physics")
                                                        self.var_subject3.set(i[7])
                                                        self.var_subject4_name.set("Chemistry")
                                                        self.var_subject4.set(i[8])
                                                        self.var_subject5_name.set("Biology")
                                                        self.var_subject5.set(i[9])
                                                        self.var_subject6_name.set("Physical Education")
                                                        self.var_subject6.set(i[10])       
                                                        self.var_total_marks.set(i[11])
                                                else:
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_C WHERE Admission_ID = {self.var_search.get()}")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        for i in data:
                                                            self.var_admission_id.set(i[0])
                                                            self.var_student_name.set(i[1])
                                                            self.var_class.set(i[2])
                                                            self.var_percentage.set(i[3])
                                                            self.var_subject1_name.set("English")
                                                            self.var_subject1.set(i[5])
                                                            self.var_subject2_name.set("Mathematics")
                                                            self.var_subject2.set(i[6])
                                                            self.var_subject3_name.set("Accountancy")
                                                            self.var_subject3.set(i[7])
                                                            self.var_subject4_name.set("Economics")
                                                            self.var_subject4.set(i[8])
                                                            self.var_subject5_name.set("Business Studies")
                                                            self.var_subject5.set(i[9])
                                                            self.var_subject6_name.set("Physical Education")
                                                            self.var_subject6.set(i[10])       
                                                            self.var_total_marks.set(i[11])
                                                    else:
                                                        mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                        cursor = mydb.cursor()
                                                        cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_D WHERE Admission_ID = {self.var_search.get()}")
                                                        data = cursor.fetchall()
                                                        if len(data) != 0:
                                                            for i in data:
                                                                self.var_admission_id.set(i[0])
                                                                self.var_student_name.set(i[1])
                                                                self.var_class.set(i[2])
                                                                self.var_percentage.set(i[3])
                                                                self.var_subject1_name.set("English")
                                                                self.var_subject1.set(i[5])
                                                                self.var_subject2_name.set("Mathematics")
                                                                self.var_subject2.set(i[6])
                                                                self.var_subject3_name.set("Accountancy")
                                                                self.var_subject3.set(i[7])
                                                                self.var_subject4_name.set("Economics")
                                                                self.var_subject4.set(i[8])
                                                                self.var_subject5_name.set("Business Studies")
                                                                self.var_subject5.set(i[9])
                                                                self.var_subject6_name.set("Computer Science")
                                                                self.var_subject6.set(i[10])       
                                                                self.var_total_marks.set(i[11])
                                                        else:
                                                            messagebox.showerror("Error", f"Exam Record of \nAdmission ID : {self.var_search.get()} \n Not Exist!!")
                                                            self.reset()
                                mydb.commit()
                            mydb.close()

                        def search_data_name(self):
                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            cursor = mydb.cursor()
                            cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE Student_Name = '{self.var_search.get()}'")
                            data = cursor.fetchall()
                            if len(data) != 0:
                                for i in data:
                                    self.var_admission_id.set(i[0])
                                    self.var_student_name.set(i[1])
                                    self.var_class.set(i[2])
                                    self.var_percentage.set(i[3])
                                    self.var_subject1_name.set("English")
                                    self.var_subject1.set(i[5])
                                    self.var_subject2_name.set("Hindi")
                                    self.var_subject2.set(i[6])
                                    self.var_subject3_name.set("Mathematics")
                                    self.var_subject3.set(i[7])
                                    self.var_subject4_name.set("Drawing")
                                    self.var_subject4.set(i[8])
                                    self.var_subject5_name.set("General Awareness")
                                    self.var_subject5.set(i[9])
                                    self.var_subject6_name.set("Environmental Science")
                                    self.var_subject6.set(i[10])        
                                    self.var_total_marks.set(i[11])
                                mydb.commit()
                            else:
                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                cursor = mydb.cursor()
                                cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_1_5 WHERE Student_Name = '{self.var_search.get()}'")
                                data = cursor.fetchall()
                                if len(data) != 0:
                                    for i in data:
                                        self.var_admission_id.set(i[0])
                                        self.var_student_name.set(i[1])
                                        self.var_class.set(i[2])
                                        self.var_percentage.set(i[3])
                                        self.var_subject1_name.set("English")
                                        self.var_subject1.set(i[5])
                                        self.var_subject2_name.set("Hindi")
                                        self.var_subject2.set(i[6])
                                        self.var_subject3_name.set("Mathematics")
                                        self.var_subject3.set(i[7])
                                        self.var_subject4_name.set("Drawing")
                                        self.var_subject4.set(i[8])
                                        self.var_subject5_name.set("General Knowledge")
                                        self.var_subject5.set(i[9])
                                        self.var_subject6_name.set("Environmental Science")
                                        self.var_subject6.set(i[10])        
                                        self.var_total_marks.set(i[11])
                                    mydb.commit()
                                else:
                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    cursor = mydb.cursor()
                                    cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_6_8 WHERE Student_Name = '{self.var_search.get()}'")
                                    data = cursor.fetchall()
                                    if len(data) != 0:
                                        for i in data:
                                            self.var_admission_id.set(i[0])
                                            self.var_student_name.set(i[1])
                                            self.var_class.set(i[2])
                                            self.var_percentage.set(i[3])
                                            self.var_subject1_name.set("English")
                                            self.var_subject1.set(i[5])
                                            self.var_subject2_name.set("Hindi")
                                            self.var_subject2.set(i[6])
                                            self.var_subject3_name.set("Mathematics")
                                            self.var_subject3.set(i[7])
                                            self.var_subject4_name.set("Social Science")
                                            self.var_subject4.set(i[8])
                                            self.var_subject5_name.set("Science")
                                            self.var_subject5.set(i[9])
                                            self.var_subject6_name.set("General Knowledge")
                                            self.var_subject6.set(i[10])
                                            self.var_subject7_name.set("Computer Science")
                                            self.var_subject7.set(i[12])       
                                            self.var_total_marks.set(i[12])
                                    else:
                                        mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        cursor = mydb.cursor()
                                        cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_9_10 WHERE Student_Name = '{self.var_search.get()}'")
                                        data = cursor.fetchall()
                                        if len(data) != 0:
                                            for i in data:
                                                self.var_admission_id.set(i[0])
                                                self.var_student_name.set(i[1])
                                                self.var_class.set(i[2])
                                                self.var_percentage.set(i[3])
                                                self.var_subject1_name.set("English")
                                                self.var_subject1.set(i[5])
                                                self.var_subject2_name.set("Hindi")
                                                self.var_subject2.set(i[6])
                                                self.var_subject3_name.set("Mathematics")
                                                self.var_subject3.set(i[7])
                                                self.var_subject4_name.set("Social Science")
                                                self.var_subject4.set(i[8])
                                                self.var_subject5_name.set("Science")
                                                self.var_subject5.set(i[9])
                                                self.var_subject6_name.set("Physical Education")
                                                self.var_subject6.set(i[10])
                                                self.var_subject7_name.set("Computer Science")
                                                self.var_subject7.set(i[12])       
                                                self.var_total_marks.set(i[12])
                                        else:
                                            mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            cursor = mydb.cursor()
                                            cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_A WHERE Student_Name = '{self.var_search.get()}'")
                                            data = cursor.fetchall()
                                            if len(data) != 0:
                                                for i in data:
                                                    self.var_admission_id.set(i[0])
                                                    self.var_student_name.set(i[1])
                                                    self.var_class.set(i[2])
                                                    self.var_percentage.set(i[3])
                                                    self.var_subject1_name.set("English")
                                                    self.var_subject1.set(i[5])
                                                    self.var_subject2_name.set("Mathematics")
                                                    self.var_subject2.set(i[6])
                                                    self.var_subject3_name.set("Physics")
                                                    self.var_subject3.set(i[7])
                                                    self.var_subject4_name.set("Chemistry")
                                                    self.var_subject4.set(i[8])
                                                    self.var_subject5_name.set("Computer Science")
                                                    self.var_subject5.set(i[9])
                                                    self.var_subject6_name.set("Physical Education")
                                                    self.var_subject6.set(i[10])       
                                                    self.var_total_marks.set(i[11])
                                            else:
                                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                cursor = mydb.cursor()
                                                cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_B WHERE Student_Name = '{self.var_search.get()}'")
                                                data = cursor.fetchall()
                                                if len(data) != 0:
                                                    for i in data:
                                                        self.var_admission_id.set(i[0])
                                                        self.var_student_name.set(i[1])
                                                        self.var_class.set(i[2])
                                                        self.var_percentage.set(i[3])
                                                        self.var_subject1_name.set("English")
                                                        self.var_subject1.set(i[5])
                                                        self.var_subject2_name.set("Mathematics")
                                                        self.var_subject2.set(i[6])
                                                        self.var_subject3_name.set("Physics")
                                                        self.var_subject3.set(i[7])
                                                        self.var_subject4_name.set("Chemistry")
                                                        self.var_subject4.set(i[8])
                                                        self.var_subject5_name.set("Biology")
                                                        self.var_subject5.set(i[9])
                                                        self.var_subject6_name.set("Physical Education")
                                                        self.var_subject6.set(i[10])       
                                                        self.var_total_marks.set(i[11])
                                                else:
                                                    mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    cursor = mydb.cursor()
                                                    cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_C WHERE Student_Name = '{self.var_search.get()}'")
                                                    data = cursor.fetchall()
                                                    if len(data) != 0:
                                                        for i in data:
                                                            self.var_admission_id.set(i[0])
                                                            self.var_student_name.set(i[1])
                                                            self.var_class.set(i[2])
                                                            self.var_percentage.set(i[3])
                                                            self.var_subject1_name.set("English")
                                                            self.var_subject1.set(i[5])
                                                            self.var_subject2_name.set("Mathematics")
                                                            self.var_subject2.set(i[6])
                                                            self.var_subject3_name.set("Accountancy")
                                                            self.var_subject3.set(i[7])
                                                            self.var_subject4_name.set("Economics")
                                                            self.var_subject4.set(i[8])
                                                            self.var_subject5_name.set("Business Studies")
                                                            self.var_subject5.set(i[9])
                                                            self.var_subject6_name.set("Physical Education")
                                                            self.var_subject6.set(i[10])       
                                                            self.var_total_marks.set(i[11])
                                                    else:
                                                        mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                        cursor = mydb.cursor()
                                                        cursor.execute(f"SELECT * FROM EXAM_MANAGEMENT_CLASS_11_12_SECTION_D WHERE Student_Name = '{self.var_search.get()}'")
                                                        data = cursor.fetchall()
                                                        if len(data) != 0:
                                                            for i in data:
                                                                self.var_admission_id.set(i[0])
                                                                self.var_student_name.set(i[1])
                                                                self.var_class.set(i[2])
                                                                self.var_percentage.set(i[3])
                                                                self.var_subject1_name.set("English")
                                                                self.var_subject1.set(i[5])
                                                                self.var_subject2_name.set("Mathematics")
                                                                self.var_subject2.set(i[6])
                                                                self.var_subject3_name.set("Accountancy")
                                                                self.var_subject3.set(i[7])
                                                                self.var_subject4_name.set("Economics")
                                                                self.var_subject4.set(i[8])
                                                                self.var_subject5_name.set("Business Studies")
                                                                self.var_subject5.set(i[9])
                                                                self.var_subject6_name.set("Computer Science")
                                                                self.var_subject6.set(i[10])       
                                                                self.var_total_marks.set(i[11])
                                                        else:
                                                            messagebox.showerror("Error", f"Exam Record of \nStudent Name : '{self.var_search.get()}' \n Not Exist!!")
                                                            self.reset()
                                mydb.commit()
                            mydb.close()

                        def reset(self):
                            self.__init__(self.root_search)

                    if __name__ == "__main__":
                        root_search = Toplevel()
                        obj_search = EXAM_SEARCH(root_search)
                        root_search.mainloop()

                def export(self):
                    class EXPORT:

                        def __init__(self,root_export):
                            self.root_export = root_export
                            self.root_export.title("Login Form")
                            self.root_export.geometry("400x300+450+200")

                            self.root_export.focus_force()
                            self.root_export.grab_set()

                            self.var_name = StringVar()
                            self.var_password = StringVar()
                            
                            label_main = Label(self.root_export, text = "Login", font = ("arial", 25, "bold"), bg = "Black", fg = "white")
                            label_main.pack(side = TOP, fill = X)
                            label_main = Label(self.root_export, text = "", font = ("arial", 18, "bold"), bg = "Black", fg = "white")
                            label_main.pack(side = BOTTOM, fill = X)

                            label_main_1 = Label(self.root_export, text = "Name : ", font = ('arial', 18, 'bold'), fg = 'black')
                            label_main_1.place(x = 10, y = 50)
                            label_main_1_entry = ttk.Entry(self.root_export, textvariable = self.var_name, font = ('arial', 18, 'bold'))
                            label_main_1_entry.place(x = 150, y = 50, width = 200)

                            label_main_2 = Label(self.root_export, text = "Password : ", font = ('arial', 18, 'bold'), fg = 'black')
                            label_main_2.place(x = 10, y = 100)
                            label_main_2_entry = ttk.Entry(self.root_export, textvariable = self.var_password, font = ('arial', 18, 'bold'), show = "*")
                            label_main_2_entry.place(x = 150, y = 100, width = 200)

                            btn_main_1 = Button(self.root_export, text = "Login", font = ('arial', 20, 'bold'), relief = RAISED, command = self.login)
                            btn_main_1.place(x = 105, y = 170)
                            btn_main_2 = Button(self.root_export, text = "Close", font = ('arial', 20, 'bold'), relief = RAISED, command = self.root_export.destroy)
                            btn_main_2.place(x = 205, y = 170)

                            self.root_export.destroy

                        def login(self):
                            if self.var_name.get() != "" and self.var_password.get() != "":
                                mydb = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                cursor = mydb.cursor()
                                cursor.execute(f"SELECT * FROM EXPORT_LOGIN WHERE Name = '{self.var_name.get()}' AND Password = '{self.var_password.get()}'")
                                data = cursor.fetchall()
                                if len(data) != 0:
                                    messagebox.showinfo("Success", "Successfully Login")
                                    self.export()
                                    mydb.commit()
                                else:
                                    messagebox.showerror("Error", "Invalid Name and Password!!!!!")
                                mydb.close()
                            else:
                                messagebox.showerror("Error", "All Fields are Required!!")

                        def export(self):
                            class EXCEL:

                                def __init__(self,root_excel):
                                    self.root_excel = root_excel
                                    self.root_excel.title("Login Form")
                                    self.root_excel.geometry("400x300+450+200")

                                    self.root_excel.focus_force()
                                    self.root_excel.grab_set()

                                    self.var_file_name = StringVar()
                                    self.var_class = StringVar()

                                    label = Label(self.root_excel, text = "Login", font = ("arial", 25, "bold"), bg = "Black", fg = "white")
                                    label.pack(side = TOP, fill = X)
                                    label = Label(self.root_excel, text = "", font = ("arial", 18, "bold"), bg = "Black", fg = "white")
                                    label.pack(side = BOTTOM, fill = X)

                                    label_1 = Label(self.root_excel, text = "File Name : ", font = ('arial', 18, 'bold'), fg = 'black')
                                    label_1.place(x = 10, y = 50)
                                    label_1_entry = ttk.Entry(self.root_excel, textvariable = self.var_file_name, font = ('arial', 18, 'bold'))
                                    label_1_entry.place(x = 200, y = 50, width = 150)

                                    label_2 = Label(self.root_excel, text = "Class : ", font = ('arial', 18, 'bold'), fg = 'black')
                                    label_2.place(x = 10, y = 100)
                                    com_txt_label_2 = ttk.Combobox(self.root_excel, textvariable = self.var_class, font = ("Times New Roman", 18, "bold"), width = 12, state = "readonly")
                                    com_txt_label_2["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class - I", "Class - II", "Class - III", "Class - IV", "Class - V", "Class - VI", "Class - VII", "Class - VIII", "Class - IX", "Class - X", "Class - XI -- Section - A", "Class - XI -- Section - B", "Class - XI -- Section - C", "Class - XI -- Section - D", "Class - IX", "Class - X", "Class - XI -- Section - A", "Class - XI -- Section - B", "Class - XI -- Section - C", "Class - XI -- Section - D", "Class - IX", "Class - X", "Class - XI -- Section - A", "Class - XI -- Section - B", "Class - XI -- Section - C", "Class - XI -- Section - D", "Class - XII -- Section - A", "Class - XII -- Section - B", "Class - XII -- Section - C", "Class - XII -- Section - D")
                                    com_txt_label_2.current(0)
                                    com_txt_label_2.place(x = 200, y = 100)

                                    btn_1 = Button(self.root_excel, text = "Save Data", font = ('arial', 20, 'bold'), relief = RAISED, command = self.excel)
                                    btn_1.place(x = 50, y = 170)
                                    btn_2 = Button(self.root_excel, text = "Close", font = ('arial', 20, 'bold'), relief = RAISED, command = self.root_excel.destroy)
                                    btn_2.place(x = 200, y = 170)

                                def excel(self):
                                    if self.var_file_name.get() == "":
                                        messagebox.showerror("Error", "All Fields are Required!!")
                                    else:
                                        if self.var_class.get() == "Pre-Nursery":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Pre - Nursery'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "UKG":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'UKG'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - I":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - I'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - II":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - II'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - III":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - III'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - IV":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - IV'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - V":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - V'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - VI":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - VI'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - VII":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - VII'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - VIII":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - VIII'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XI":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XI'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - X":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - X'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XI -- Section - A":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XI -- Section - A'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XI -- Section - B":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XI -- Section - B'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XI -- Section - C":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XI -- Section - C'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XI -- Section - D":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XI -- Section - D'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XII -- Section - A":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XII -- Section - A'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XII -- Section - B":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XII -- Section - B'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XII -- Section - C":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XII -- Section - C'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        elif self.var_class.get() == "Class - XII -- Section - D":
                                            db = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            sql = f"SELECT * FROM EXAM_MANAGEMENT_CLASS_NUR_UKG WHERE CLASS = 'Class - XII -- Section - D'"
                                            result_dataFrame = pandas.read_sql(sql, db)
                                            result_dataFrame.head()
                                            da = f'C:/UTSAV/Python-MySQL/School Management System/Exam_Management_Record/'+str(self.var_file_name.get())+'.xlsx'
                                            result_dataFrame.to_excel(da)
                                            messagebox.showinfo("Success", f"All Data Save To File: \n{self.var_file_name.get()}")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")
                                        else:
                                            messagebox.showerror("Error", "Please Choose Class")
                                            self.var_file_name.set("")
                                            self.var_class.set("Select Class")

                            if __name__ == "__main__":
                                root_excel = Toplevel()
                                obj_excel = EXCEL(root_excel)
                                root_excel.mainloop()

                    if __name__ == "__main__":
                        root_export = Toplevel()
                        obj_export = EXPORT(root_export)
                        root_export.mainloop()

            if __name__ == "__main__":
                root_exam = Toplevel()
                obj_EXAM = EXAM(root_exam)
                root_exam.mainloop()

        def report_card(self):
            class Report_Management:

                def __init__(self, root):
                    self.root = root
                    self.root.geometry("1350x700+0+0")
                    self.root.title("REPORT MANAGEMENT SYSTEM")

                    # img
                    img = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\report_card_images\scenery_4.jpg")
                    img = img.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg = ImageTk.PhotoImage(img)
                    self.btn = Button(self.root, command = self.open_img, image = self.photoimg, cursor="hand2")
                    self.btn.place(x = 0, y = 0, width = 1380, height = 710)

                    # Variables
                    self.var_admission = StringVar()
                    self.var_name = StringVar()
                    self.var_class_section = StringVar()
                    self.var_mother_name = StringVar()
                    self.var_father_name = StringVar()
                    self.var_percentage = StringVar()
                    self.var_dob = StringVar()
                    self.var_roll_no = StringVar()

                    bg_lbl = Label(self.root, bd=2, relief=RIDGE)
                    bg_lbl.place(x = 10, y = 10, width = 1115, height = 295)

                    lbl_title = Label(bg_lbl, text = "REPORT CARD MANAGEMENT  SYSTEM", font = ("Berlin Sans FB", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 1110, height = 60)

                    # Top Right Frame
                    Top_Right_Frame = Frame(self.root, bd=2, relief=RIDGE, bg="White")
                    Top_Right_Frame.place(x = 1140, y = 10, width = 200, height =295)

                    # Middle Left Frame
                    Middle_Left_Frame = Frame(self.root, bd=2, relief=RIDGE, bg="White")
                    Middle_Left_Frame.place(x = 10, y = 320, width = 1115, height = 250)

                    # 1st
                    img_1 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\report_card_images\scenery_3.jpg")
                    img_1 = img_1.resize((200, 250), Image.ANTIALIAS)
                    self.photoimg_1 = ImageTk.PhotoImage(img_1)
                    self.btn_1 = Button(self.root, image = self.photoimg_1, cursor="hand2")
                    self.btn_1.place(x = 1140, y = 320, width = 200, height = 250)

                    # 2nd
                    img_2 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\report_card_images\scenery_5.jpg")
                    img_2 = img_2.resize((1330, 100), Image.ANTIALIAS)
                    self.photoimg_2 = ImageTk.PhotoImage(img_2)
                    self.btn_2 = Button(self.root, image = self.photoimg_2, cursor="hand2")
                    self.btn_2.place(x = 10, y = 590, width = 1330, height = 100)

                    # Current Report Label Frame Information
                    report_lbl_info_frame = LabelFrame(bg_lbl, bd = 4, relief = RIDGE, padx = 2, text = "Report Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                    report_lbl_info_frame.place(x = 10, y = 60, width = 1090, height = 220)

                    # Report Card Label Frame Information
                    ## Admission No.
                    lbl_admission = Label(report_lbl_info_frame, text = "Admission No. :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_admission.place(x = 0, y = 0)
                    txt_admission = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_admission, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_admission.place(x = 150, y = 0)

                    ## Student Name
                    lbl_name = Label(report_lbl_info_frame, text = "Student Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_name.place(x = 0, y = 50)
                    txt_name = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_name, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_name.place(x = 150, y = 50)

                    ## Mother's Name
                    lbl_mother_name = Label(report_lbl_info_frame, text = "Mother's Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_mother_name.place(x = 0, y = 100)
                    txt_mother_name = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_mother_name, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_mother_name.place(x = 150, y = 100)

                    ## Father's Name
                    lbl_father_name = Label(report_lbl_info_frame, text = "Father's Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_father_name.place(x = 0, y = 150)
                    txt_father_name = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_father_name, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_father_name.place(x = 150, y = 150)

                    ## Class
                    lbl_class = Label(report_lbl_info_frame, text = "Class :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_class.place(x = 420, y = 00)

                    com_class = ttk.Combobox(report_lbl_info_frame, textvariable  = self.var_class_section, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                    com_class["values"] = ("Select Class-Section", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D", "NONE")
                    com_class.current(0)
                    com_class.place(x = 600, y = 0)

                    ## Percentage
                    lbl_percentage = Label(report_lbl_info_frame, text = "Percentage :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_percentage.place(x = 420, y = 50)
                    txt_percentage = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_percentage, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_percentage.place(x = 600, y = 50)

                    ## Date Of Birth
                    lbl_dob = Label(report_lbl_info_frame, text = "Date Of Birth :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_dob.place(x = 420, y = 100)
                    txt_dob = DateEntry(report_lbl_info_frame, selectmode = 'day', textvariable = self.var_dob, font = ("Times New Roman", 15, "bold"), width = 20)
                    txt_dob.place(x = 600, y = 100)

                    ## Roll No.
                    lbl_roll_no = Label(report_lbl_info_frame, text = "Roll No. :", font = ("Times New Roman", 15, "bold"), bg = "White")
                    lbl_roll_no.place(x = 420, y = 150)
                    txt_roll_no = ttk.Entry(report_lbl_info_frame, textvariable  = self.var_roll_no, font = ("Times New Roman", 15, "bold"), width = 22)
                    txt_roll_no.place(x = 600, y = 150)

                    # Button Frame
                    btn_frame = Frame(Top_Right_Frame, bd=2, relief=RIDGE, bg="Black")
                    btn_frame.place(x = 5, y = 5, width = 185, height = 280)

                    btn_Add = Button(btn_frame, text = "Add Data", command = self.add_data, font = ("Arial", 15, "bold"), width = 14, bg = "Green", fg = "White")
                    btn_Add.grid(row = 0, column = 0, padx = 1)

                    btn_Save = Button(btn_frame, text = "Save\nData", command = self.save_data, font = ("Arial", 15, "bold"), width = 14, bg = "Green", fg = "White")
                    btn_Save.grid(row = 1, column = 0, padx = 1)

                    btn_Update = Button(btn_frame, text = "Update\nData", command = self.update_data, font = ("Arial", 15, "bold"), width = 14, bg = "Green", fg = "White")
                    btn_Update.grid(row = 2, column = 0, padx = 1)

                    btn_Reset = Button(btn_frame, text = "Reset\nData", command = self.reset_data, font = ("Arial", 15, "bold"), width = 14, bg = "Green", fg = "White")
                    btn_Reset.grid(row = 3, column = 0, padx = 1)

                    btn_Close = Button(btn_frame, text = "Close", command = self.root.destroy, font = ("Arial", 15, "bold"), width = 14, bg = "Green", fg = "White")
                    btn_Close.grid(row = 4, column = 0, padx = 1)

                    # ====================Report Table and Scroll Bar====================
                    scroll_x = ttk.Scrollbar(Middle_Left_Frame, orient = HORIZONTAL)
                    scroll_y = ttk.Scrollbar(Middle_Left_Frame, orient = VERTICAL)
                    self.report_table = ttk.Treeview(Middle_Left_Frame, column = ("admno","name","mother", "father", "section", "percentage", "dob", "roll"), xscrollcommand = scroll_x.set, yscrollcommand = scroll_y.set)

                    scroll_x.pack(side = BOTTOM, fill = X)
                    scroll_y.pack(side = RIGHT, fill = Y)

                    scroll_x.config(command  = self.report_table.xview)
                    scroll_y.config(command  = self.report_table.yview)

                    style = ttk.Style()
                    style.theme_use("vista")
                    style.configure("Treeview.Heading", font = ("Vijaya", 15, "bold"))

                    self.report_table.heading("admno", text = "Admission No.")
                    self.report_table.heading("name", text = "Student Name")
                    self.report_table.heading("mother", text = "Mother Name")
                    self.report_table.heading("father", text = "Father Name")
                    self.report_table.heading("section", text = "Class-Section")
                    self.report_table.heading("percentage", text = "Percentage")
                    self.report_table.heading("dob", text = "Date of Birth")
                    self.report_table.heading("roll", text = "Roll No.")

                    self.report_table["show"]  ="headings"

                    self.report_table.column("admno", width = 100)
                    self.report_table.column("name", width = 150)
                    self.report_table.column("mother", width = 150)
                    self.report_table.column("father", width = 150)
                    self.report_table.column("section", width = 150)
                    self.report_table.column("percentage", width = 100)
                    self.report_table.column("dob", width = 100)
                    self.report_table.column("roll", width = 100)

                    self.report_table.pack(fill = BOTH, expand = 1)
                    self.report_table.bind("<ButtonRelease>", self.get_cursor)
                    self.fetch_data()

                # Add
                def add_data(self):
                    if (self.var_admission.get() == "" or self.var_name.get() == "" or self.var_mother_name.get() == "" or 
                            self.var_father_name.get() == "" or self.var_class_section.get() == "" or self.var_percentage.get() == "" or 
                                self.var_dob.get() == "" or self.var_roll_no.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            my_cursor.execute("INSERT INTO REPORT_CARD VALUES(%s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                self.var_admission.get(),
                                                                                                                self.var_name.get(),
                                                                                                                self.var_mother_name.get(),
                                                                                                                self.var_father_name.get(),
                                                                                                                self.var_class_section.get(),
                                                                                                                self.var_percentage.get(),
                                                                                                                self.var_dob.get(),
                                                                                                                self.var_roll_no.get()
                                                                                                                ))
                            conn.commit()
                            self.reset_data()
                            self.fetch_data()
                            conn.close()
                            messagebox.showinfo("Success", "Report Card Record Added Succesfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Fetch
                def fetch_data(self):
                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                    my_cursor = conn.cursor()
                    my_cursor.execute("SELECT * FROM REPORT_CARD")
                    data = my_cursor.fetchall()
                    if len(data) != 0:
                        self.report_table.delete(*self.report_table.get_children())
                        for i in data:
                            self.report_table.insert("", END, values = i)
                        conn.commit()
                        self.reset_data()
                    conn.close()

                # Get Cursor
                def get_cursor(self, event = ""):
                    cursor_row = self.report_table.focus()
                    content = self.report_table.item(cursor_row)
                    data = content["values"]

                    self.var_admission.set(data[0])
                    self.var_name.set(data[1])
                    self.var_mother_name.set(data[2])
                    self.var_father_name.set(data[3])
                    self.var_class_section.set(data[4])
                    self.var_percentage.set(data[5])
                    self.var_dob.set(data[6])
                    self.var_roll_no.set(data[7])

                # Update
                def update_data(self):
                    if (self.var_admission.get() == "" or self.var_name.get() == "" or self.var_mother_name.get() == "" or 
                            self.var_father_name.get() == "" or self.var_class_section.get() == "" or self.var_percentage.get() == "" or 
                                self.var_dob.get() == "" or self.var_roll_no.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:
                            update = messagebox.askyesno("Update", "Are You Sure Update This Report Card Data", parent = self.root)
                            if update>0:
                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                my_cursor = conn.cursor()
                                my_cursor.execute("UPDATE REPORT_CARD set Student_Name = %s, Mother_Name = %s, Father_Name = %s, Class_Section = %s, Percentage = %s, Date_of_Birth = %s, Roll_No = %s where Admission_No = %s", (

                                                                                                                                                                                                                                self.var_admission.get(),
                                                                                                                                                                                                                                self.var_name.get(),
                                                                                                                                                                                                                                self.var_mother_name.get(),
                                                                                                                                                                                                                                self.var_father_name.get(),
                                                                                                                                                                                                                                self.var_class_section.get(),
                                                                                                                                                                                                                                self.var_percentage.get(),
                                                                                                                                                                                                                                self.var_dob.get(),
                                                                                                                                                                                                                                self.var_roll_no.get()

                                                                                                                                                                                                                            ))
                            else:
                                if not update:
                                    return
                            conn.commit()
                            self.fetch_data()
                            conn.close()

                            messagebox.showinfo("Success", "Report Card Data Updated Successfully!", parent = self.root)
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root)

                # Save
                def save_data(self):
                    op = messagebox.askyesno("Save Data", "Do You Want to Save the Data?")
                    if op>0:
                        file = open("C:/UTSAV/Python-MySQL/School Management System/report_card_record/"+str(self.var_admission.get())+".txt","w")
                        file.write("\t -----------------------------------------------------------------------\n")
                        file.write("\t\t\t       JASPAL KAUR PUBLIC SCHOOL\n")
                        file.write("\t\t\tB'Pashimi, Shalimar Bagh, Delhi - 110088\n")
                        file.write("\t\t\t     Ph. No: 011-27470022/27470055\n")
                        file.write("\t\t  Email: principal@jkps.org \t Website: www.jkps.org\n")
                        file.write("\t\t  CBSE Affiliation No: 2730152 \t CBSE Code: 85146\n")
                        file.write("\t -----------------------------------------------------------------------\n")
                        file.write("\t  Admission No    : {} \t\t Class-Section   : {}\n".format(self.var_admission.get(), self.var_class_section.get()))
                        file.write("\t  Student's Name  : {} \t Percentage      : {}\n".format(self.var_name.get(), self.var_percentage.get()))
                        file.write("\t  Mother's Name   : {} \t Date of Birth   : {}\n".format(self.var_mother_name.get(), self.var_dob.get()))
                        file.write("\t  Father's Name   : {} \t Roll No         : {}\n".format(self.var_father_name.get(), self.var_roll_no.get()))
                        file.write("\t -----------------------------------------------------------------------")
                        file.write("\n\n\t\t\t\tGRADING KEY (Scholastic Area)\n")
                        table_1 = [['Marks Range', '91-100', '81-90.9', '71-80.9', '61-70.9', '51-60.9', '41-50.9', '33-40.9', '32.9 and Below'], ['Grade', 'A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'D', 'E']]
                        data_1 = tabulate(table_1, headers='firstrow', tablefmt='grid')
                        file.write(data_1)
                        file.write('\n\n')
                        file.write("\t\t\t\tGRADING KEY (Grade Subjects)\n")
                        table_2 = [['Marks Range', 'Exemplary', 'Proficient', 'Developing', 'Emerging', 'Beginner'], ['Grade', 'A', 'B', 'C', 'D', 'E']]
                        data_2 = tabulate(table_2, headers='firstrow', tablefmt='grid')
                        file.write(data_2)
                        file.close()
                        messagebox.showinfo("Saved", f"Report Card Record\nAdmission No.: {self.var_admission.get()} Saved Successfully.")
                        self.reset_data()
                    else:
                        return

                # Reset
                def reset_data(self):
                    self.var_admission.set("")
                    self.var_name.set("")
                    self.var_mother_name.set("")
                    self.var_father_name.set("")
                    self.var_class_section.set("Select Class-Section")
                    self.var_percentage.set("")
                    self.var_dob.set("")
                    self.var_roll_no.set("")

                # Clear
                def clear_data(self):
                    self.__init__(root)

                # open image 
                def open_img(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse = img.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse = ImageTk.PhotoImage(img_browse)
                    self.btn.config(image = self.photoimg_browse)


            if __name__ == "__main__":
                root = Toplevel()
                obj = Report_Management(root)
                root.mainloop()

        def progress_report(self):
            class PROGRESS:

                def __init__(self,root_progress):
                    self.root_progress = root_progress
                    self.root_progress.title("Progress Report")
                    self.root_progress.geometry("1350x700+0+0")
                    self.root_progress.config(bg = "Darkgoldenrod")

                    self.root_progress.focus_force()
                    self.root_progress.grab_set()

                    #Variables
                    self.var_admission_id = StringVar()
                    self.var_name = StringVar()
                    self.var_class_section = StringVar()

                        ## Term 1
                    self.var_term1_subject1_name = StringVar()
                    self.var_term1_subject1 = StringVar()
                    self.var_term1_subject2_name = StringVar()
                    self.var_term1_subject2 = StringVar()
                    self.var_term1_subject3_name = StringVar()
                    self.var_term1_subject3 = StringVar()
                    self.var_term1_subject4_name = StringVar()
                    self.var_term1_subject4 = StringVar()
                    self.var_term1_subject5_name = StringVar()
                    self.var_term1_subject5 = StringVar()
                    self.var_term1_subject6_name = StringVar()
                    self.var_term1_subject6 = StringVar()
                    self.var_term1_subject7_name = StringVar()
                    self.var_term1_subject7 = StringVar()

                        ## Term 2
                    self.var_term2_subject1_name = StringVar()
                    self.var_term2_subject1 = StringVar()
                    self.var_term2_subject2_name = StringVar()
                    self.var_term2_subject2 = StringVar()
                    self.var_term2_subject3_name = StringVar()
                    self.var_term2_subject3 = StringVar()
                    self.var_term2_subject4_name = StringVar()
                    self.var_term2_subject4 = StringVar()
                    self.var_term2_subject5_name = StringVar()
                    self.var_term2_subject5 = StringVar()
                    self.var_term2_subject6_name = StringVar()
                    self.var_term2_subject6 = StringVar()
                    self.var_term2_subject7_name = StringVar()
                    self.var_term2_subject7 = StringVar()

                        ## Term 3
                    self.var_term3_subject1_name = StringVar()
                    self.var_term3_subject1 = StringVar()
                    self.var_term3_subject2_name = StringVar()
                    self.var_term3_subject2 = StringVar()
                    self.var_term3_subject3_name = StringVar()
                    self.var_term3_subject3 = StringVar()
                    self.var_term3_subject4_name = StringVar()
                    self.var_term3_subject4 = StringVar()
                    self.var_term3_subject5_name = StringVar()
                    self.var_term3_subject5 = StringVar()
                    self.var_term3_subject6_name = StringVar()
                    self.var_term3_subject6 = StringVar()
                    self.var_term3_subject7_name = StringVar()
                    self.var_term3_subject7 = StringVar()

                    bg_lbl = Label(self.root_progress, bd=2, relief = RIDGE, bg = "Darkred")
                    bg_lbl.place(x = 10, y = 10, width = 1340, height = 680)

                    lbl_title = Label(bg_lbl, text = " < ----  PROGRESS REPORT  ---- > ", font = ("Colonna MT", 35, "bold"), fg = "White", bg = "Darkmagenta", relief = SUNKEN, bd = 10)
                    lbl_title.place(x = 0, y = 0, width = 1335, height = 60)

                    # Manage Frame
                    Manage_Frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="#ba9363")
                    Manage_Frame.place(x = 15, y = 75, width = 1300, height = 575)

                    # Top Left Frame
                    DataTopLeftFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "#b5ab9f")
                    DataTopLeftFrame.place(x = 100, y = 40, width = 780, height = 460)

                    # Button Frame
                    DataButtonFrame = LabelFrame(Manage_Frame, bd = 4, relief = RIDGE, padx = 2, bg = "#b5ab9f")
                    DataButtonFrame.place(x = 950, y = 60, width = 200, height = 400)

                    btn_Add = Button(DataButtonFrame, text = "Add\nRecord",command = self.add_data, font = ("Arial", 25, "bold"), bg = "Blue", fg = "White", bd = 8, relief = SUNKEN)
                    btn_Add.place(x = 4, y = 4, width = 180)

                    btn_see = Button(DataButtonFrame, text = "See\nGraph", command = self.see_graph, font = ("Arial", 25, "bold"), bg = "Blue", fg = "White", bd = 8, relief = SUNKEN)
                    btn_see.place(x = 4, y = 122, width = 180)

                    btn_Reset = Button(DataButtonFrame, text = "Reset", command = self.reset_data, font = ("Arial", 25, "bold"), bg = "Blue", fg = "White", bd = 8, relief = SUNKEN)
                    btn_Reset.place(x = 4, y = 240, width  = 180)

                    btn_Plot = Button(DataButtonFrame, text = "Close", command = self.root_progress.destroy, font = ("Arial", 25, "bold"),  bg = "Blue", fg = "White", bd = 8, relief = SUNKEN)
                    btn_Plot.place(x = 4, y = 315, width  = 180)

                    # Student Information
                    lbl_id = Label(DataTopLeftFrame, text = "Admission ID :", font = ("Times New Roman", 14, "bold"), bg = "#b5ab9f")
                    lbl_id.place(x = 3, y = 3)

                    txt_id = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_admission_id, font = ("Times New Roman", 14, "bold"), width = 18)
                    txt_id.place(x = 150, y = 3, width = 200)

                    ## Name
                    lbl_name = Label(DataTopLeftFrame, text = "Student Name :", font = ("Times New Roman", 14, "bold"), bg = "#b5ab9f")
                    lbl_name.place(x = 400, y = 3)

                    txt_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_name, font = ("Times New Roman", 14, "bold"), width = 18)
                    txt_name.place(x = 550, y = 3, width = 200)

                    ## Class
                    lbl_class_section = Label(DataTopLeftFrame, text = "Class-Section :", font = ("Times New Roman", 14, "bold"), bg = "#b5ab9f")
                    lbl_class_section.place(x = 3, y = 40)
                    com_txt_class_section = ttk.Combobox(DataTopLeftFrame, textvariable  = self.var_class_section, font = ("Times New Roman", 14, "bold"), width = 30, state = "readonly")
                    com_txt_class_section["values"] = ("Select Class - Section", "Pre - Nursery", "UKG", "Class - I", "Class - II", "Class - III" , "Class - IV", "Class - V", "Class - VI", "Class - VII", "Class - VIII", "Class - IX", "Class - X", "Class - XI -- Section - A", "Class - XI -- Section - B", "Class - XI -- Section - C", "Class - XI -- Section - D", "Class - XII -- Section - A", "Class - XII -- Section - B", "Class - XII -- Section - C", "Class - XII -- Section - D")
                    com_txt_class_section.current(0)
                    com_txt_class_section.place(x = 150, y = 40)
                    lbl_enter = Button(DataTopLeftFrame, text = "↵", font = ("Comic Sans MS", 10, "bold"), fg = "white", bg = "Darkblue", bd = 5, command = self.click)
                    lbl_enter.place(x = 500, y = 40, width = 30, height = 30)

                    ## Headings
                    lbl_heading = Label(DataTopLeftFrame, text = "Subject Name    :    Marks    :: ", font = ("Times New Roman", 15, "bold"), bg = "#b5ab9f")
                    lbl_heading.place(x = 3, y = 80)

                    lbl_heading_1 = Label(DataTopLeftFrame, text = "\tTerm I  ", font = ("Times New Roman", 15, "bold"), bg = "#b5ab9f")
                    lbl_heading_1.place(x = 20, y = 120)

                    lbl_heading_2 = Label(DataTopLeftFrame, text = "\t              Term II", font = ("Times New Roman", 15, "bold"), bg = "#b5ab9f")
                    lbl_heading_2.place(x = 180, y = 120)

                    lbl_heading_3 = Label(DataTopLeftFrame, text = "\t\t    Term III  ", font = ("Times New Roman", 15, "bold"), bg = "#b5ab9f")
                    lbl_heading_3.place(x = 400, y = 120)

                    ###lineframe on heading
                    Frame(DataTopLeftFrame, width = 180, height = 2, bg = '#141414').place(x = 50, y = 150)
                    Frame(DataTopLeftFrame, width = 180, height = 2, bg = '#141414').place(x = 290, y = 150)
                    Frame(DataTopLeftFrame, width = 180, height = 2, bg = '#141414').place(x = 530, y = 150)

                    ###lineframe on Term
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 242, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 243, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 244, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 245, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 490, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 491, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 492, y = 162)
                    Frame(DataTopLeftFrame, width = 2, height = 265, bg = '#141414').place(x = 493, y = 162)

                    # Term 1
                        ## Subject 1
                    txt_term1_subject1_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject1_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject1_name.place(x = 8, y = 160, width = 150)
                    lbl_term1_subject1 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject1.place(x = 155, y = 155)
                    txt_term1_subject1 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject1, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject1.place(x = 185, y = 160, width = 50)
                    
                        ## Subject 2
                    txt_term1_subject2_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject2_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject2_name.place(x = 8, y = 200, width = 150)
                    lbl_term1_subject2 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject2.place(x = 155, y = 195)
                    txt_term1_subject2 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject2, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject2.place(x = 185, y = 200, width = 50)

                        ## Subject 3
                    txt_term1_subject3_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject3_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject3_name.place(x = 8, y = 240, width = 150)
                    lbl_term1_subject3 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject3.place(x = 155, y = 235)
                    txt_term1_subject3 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject3, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject3.place(x = 185, y = 240, width = 50)
                    
                        ## Subject 4
                    txt_term1_subject4_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject4_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject4_name.place(x = 8, y = 280, width = 150)
                    lbl_term1_subject4 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject4.place(x = 155, y = 275)
                    txt_term1_subject4 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject4, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject4.place(x = 185, y = 280, width = 50)
                    
                        ## Subject 5
                    txt_term1_subject5_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject5_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject5_name.place(x = 8, y = 320, width = 150)
                    lbl_term1_subject5 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject5.place(x = 155, y = 315)
                    txt_term1_subject5 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject5, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject5.place(x = 185, y = 320, width = 50)

                        ## Subject 6
                    txt_term1_subject6_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject6_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject6_name.place(x = 8, y = 360, width = 150)
                    lbl_term1_subject6 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject6.place(x = 155, y = 355)
                    txt_term1_subject6 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject6, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject6.place(x = 185, y = 360, width = 50)

                        ## Subject 7
                    txt_term1_subject7_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject7_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term1_subject7_name.place(x = 8, y = 400, width = 150)
                    lbl_term1_subject7 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term1_subject7.place(x = 155, y = 395)
                    txt_term1_subject7 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term1_subject7, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term1_subject7.place(x = 185, y = 400, width = 50)


                    # Term 2
                        ## Subject 1
                    txt_term2_subject1_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject1_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject1_name.place(x = 255, y = 160, width = 150)
                    lbl_term2_subject1 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject1.place(x = 402, y = 155)
                    txt_term2_subject1 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject1, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject1.place(x = 432, y = 160, width = 50)
                    
                        ## Subject 2
                    txt_term2_subject2_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject2_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject2_name.place(x = 255, y = 200, width = 150)
                    lbl_term2_subject2 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject2.place(x = 402, y = 195)
                    txt_term2_subject2 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject2, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject2.place(x = 432, y = 200, width = 50)

                        ## Subject 3
                    txt_term2_subject3_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject3_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject3_name.place(x = 255, y = 240, width = 150)
                    lbl_term2_subject3 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject3.place(x = 402, y = 235)
                    txt_term2_subject3 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject3, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject3.place(x = 432, y = 240, width = 50)
                    
                        ## Subject 4
                    txt_term2_subject4_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject4_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject4_name.place(x = 255, y = 280, width = 150)
                    lbl_term2_subject4 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject4.place(x = 402, y = 275)
                    txt_term2_subject4 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject4, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject4.place(x = 432, y = 280, width = 50)
                    
                        ## Subject 5
                    txt_term2_subject5_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject5_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject5_name.place(x = 255, y = 320, width = 150)
                    lbl_term2_subject5 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject5.place(x = 402, y = 315)
                    txt_term2_subject5 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject5, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject5.place(x = 432, y = 320, width = 50)

                        ## Subject 6
                    txt_term2_subject6_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject6_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject6_name.place(x = 255, y = 360, width = 150)
                    lbl_term2_subject6 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject6.place(x = 402, y = 355)
                    txt_term2_subject6 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject6, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject6.place(x = 432, y = 360, width = 50)

                        ## Subject 7
                    txt_term2_subject7_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject7_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term2_subject7_name.place(x = 255, y = 400, width = 150)
                    lbl_term2_subject7 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term2_subject7.place(x = 402, y = 395)
                    txt_term2_subject7 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term2_subject7, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term2_subject7.place(x = 432, y = 400, width = 50)


                    # Term 3
                        ## Subject 1
                    txt_term3_subject1_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject1_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject1_name.place(x = 502, y = 160, width = 150)
                    lbl_term3_subject1 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject1.place(x = 654, y = 155)
                    txt_term3_subject1 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject1, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject1.place(x = 680, y = 160, width = 50)
                    
                        ## Subject 2
                    txt_term3_subject2_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject2_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject2_name.place(x = 502, y = 200, width = 150)
                    lbl_term3_subject2 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject2.place(x = 654, y = 195)
                    txt_term3_subject2 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject2, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject2.place(x = 680, y = 200, width = 50)

                        ## Subject 3
                    txt_term3_subject3_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject3_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject3_name.place(x = 502, y = 240, width = 150)
                    lbl_term3_subject3 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject3.place(x = 654, y = 235)
                    txt_term3_subject3 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject3, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject3.place(x = 680, y = 240, width = 50)
                    
                        ## Subject 4
                    txt_term3_subject4_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject4_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject4_name.place(x = 502, y = 280, width = 150)
                    lbl_term3_subject4 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject4.place(x = 654, y = 275)
                    txt_term3_subject4 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject4, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject4.place(x = 680, y = 280, width = 50)
                    
                        ## Subject 5
                    txt_term3_subject5_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject5_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject5_name.place(x = 502, y = 320, width = 150)
                    lbl_term3_subject5 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject5.place(x = 654, y = 315)
                    txt_term3_subject5 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject5, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject5.place(x = 680, y = 320, width = 50)

                        ## Subject 6
                    txt_term3_subject6_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject6_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject6_name.place(x = 502, y = 360, width = 150)
                    lbl_term3_subject6 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject6.place(x = 654, y = 355)
                    txt_term3_subject6 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject6, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject6.place(x = 680, y = 360, width = 50)

                        ## Subject 7
                    txt_term3_subject7_name = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject7_name, font = ("Times New Roman", 14, "bold"), width = 18, state = "readonly")
                    txt_term3_subject7_name.place(x = 502, y = 400, width = 150)
                    lbl_term3_subject7 = Label(DataTopLeftFrame, text = " : ", font = ("Times New Roman", 20, "bold"), bg = "#b5ab9f")
                    lbl_term3_subject7.place(x = 654, y = 395)
                    txt_term3_subject7 = ttk.Entry(DataTopLeftFrame, textvariable  = self.var_term3_subject7, font = ("Times New Roman", 14, "bold"), width = 10)
                    txt_term3_subject7.place(x = 680, y = 400, width = 50)

                def click(self):
                    if self.var_class_section.get() == "Select Class - Section":
                        messagebox.showerror("Error", "Please Choose Class")
                    else:
                        if self.var_class_section.get() == "Pre - Nursery":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Awareness")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Awareness")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "UKG":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Awareness")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Awareness")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - I":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Knowledge")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Knowledge")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - II":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Knowledge")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Knowledge")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - III":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Knowledge")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Knowledge")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - IV":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Knowledge")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Knowledge")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - V":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Drawing")
                            self.var_term1_subject5_name.set("General Knowledge")
                            self.var_term1_subject6_name.set("Environmental Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Drawing")
                            self.var_term2_subject5_name.set("General Knowledge")
                            self.var_term2_subject6_name.set("Environmental Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - VI":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Social Science")
                            self.var_term1_subject5_name.set("Science")
                            self.var_term1_subject6_name.set("General Knowledge")
                            self.var_term1_subject7_name.set("Computer Science")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Social Science")
                            self.var_term2_subject5_name.set("Science")
                            self.var_term2_subject6_name.set("General Knowledge")
                            self.var_term2_subject7_name.set("Computer Science")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - VII":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Social Science")
                            self.var_term1_subject5_name.set("Science")
                            self.var_term1_subject6_name.set("General Knowledge")
                            self.var_term1_subject7_name.set("Computer Science")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Social Science")
                            self.var_term2_subject5_name.set("Science")
                            self.var_term2_subject6_name.set("General Knowledge")
                            self.var_term2_subject7_name.set("Computer Science")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - VIII":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Social Science")
                            self.var_term1_subject5_name.set("Science")
                            self.var_term1_subject6_name.set("General Knowledge")
                            self.var_term1_subject7_name.set("Computer Science")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Social Science")
                            self.var_term2_subject5_name.set("Science")
                            self.var_term2_subject6_name.set("General Knowledge")
                            self.var_term2_subject7_name.set("Computer Science")
                            self.var_term3_subject1_name.set("")
                            self.var_term3_subject2_name.set("")
                            self.var_term3_subject3_name.set("")
                            self.var_term3_subject4_name.set("")
                            self.var_term3_subject5_name.set("")
                            self.var_term3_subject6_name.set("")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2")
                        elif self.var_class_section.get() == "Class - IX":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Social Science")
                            self.var_term1_subject5_name.set("Science")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("Computer Science")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Social Science")
                            self.var_term2_subject5_name.set("Science")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("Computer Science")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Hindi")
                            self.var_term3_subject3_name.set("Mathematics")
                            self.var_term3_subject4_name.set("Social Science")
                            self.var_term3_subject5_name.set("Science")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("Computer Science")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - X":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Hindi")
                            self.var_term1_subject3_name.set("Mathematics")
                            self.var_term1_subject4_name.set("Social Science")
                            self.var_term1_subject5_name.set("Science")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("Computer Science")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Hindi")
                            self.var_term2_subject3_name.set("Mathematics")
                            self.var_term2_subject4_name.set("Social Science")
                            self.var_term2_subject5_name.set("Science")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("Computer Science")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Hindi")
                            self.var_term3_subject3_name.set("Mathematics")
                            self.var_term3_subject4_name.set("Social Science")
                            self.var_term3_subject5_name.set("Science")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("Computer Science")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XI -- Section - A":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Physics")
                            self.var_term1_subject4_name.set("Chemistry")
                            self.var_term1_subject5_name.set("Computer Science")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Physics")
                            self.var_term2_subject4_name.set("Chemistry")
                            self.var_term2_subject5_name.set("Computer Science")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Physics")
                            self.var_term3_subject4_name.set("Chemistry")
                            self.var_term3_subject5_name.set("Computer Science")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XI -- Section - B":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Physics")
                            self.var_term1_subject4_name.set("Chemistry")
                            self.var_term1_subject5_name.set("Biology")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Physics")
                            self.var_term2_subject4_name.set("Chemistry")
                            self.var_term2_subject5_name.set("Biology")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Physics")
                            self.var_term3_subject4_name.set("Chemistry")
                            self.var_term3_subject5_name.set("Biology")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XI -- Section - C":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Accountancy")
                            self.var_term1_subject4_name.set("Economics")
                            self.var_term1_subject5_name.set("Business Studies")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Accountancy")
                            self.var_term2_subject4_name.set("Economics")
                            self.var_term2_subject5_name.set("Business Studies")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Accountancy")
                            self.var_term3_subject4_name.set("Economics")
                            self.var_term3_subject5_name.set("Business Studies")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XI -- Section - D":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Accountancy")
                            self.var_term1_subject4_name.set("Economics")
                            self.var_term1_subject5_name.set("Business Studies")
                            self.var_term1_subject6_name.set("Computer Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Accountancy")
                            self.var_term2_subject4_name.set("Economics")
                            self.var_term2_subject5_name.set("Business Studies")
                            self.var_term2_subject6_name.set("Computer Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Accountancy")
                            self.var_term3_subject4_name.set("Economics")
                            self.var_term3_subject5_name.set("Business Studies")
                            self.var_term3_subject6_name.set("Computer Science")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XII -- Section - A":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Physics")
                            self.var_term1_subject4_name.set("Chemistry")
                            self.var_term1_subject5_name.set("Computer Science")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Physics")
                            self.var_term2_subject4_name.set("Chemistry")
                            self.var_term2_subject5_name.set("Computer Science")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Physics")
                            self.var_term3_subject4_name.set("Chemistry")
                            self.var_term3_subject5_name.set("Computer Science")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XII -- Section - B":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Physics")
                            self.var_term1_subject4_name.set("Chemistry")
                            self.var_term1_subject5_name.set("Biology")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Physics")
                            self.var_term2_subject4_name.set("Chemistry")
                            self.var_term2_subject5_name.set("Biology")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Physics")
                            self.var_term3_subject4_name.set("Chemistry")
                            self.var_term3_subject5_name.set("Biology")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XII -- Section - C":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Accountancy")
                            self.var_term1_subject4_name.set("Economics")
                            self.var_term1_subject5_name.set("Business Studies")
                            self.var_term1_subject6_name.set("Physical Education")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Accountancy")
                            self.var_term2_subject4_name.set("Economics")
                            self.var_term2_subject5_name.set("Business Studies")
                            self.var_term2_subject6_name.set("Physical Education")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Accountancy")
                            self.var_term3_subject4_name.set("Economics")
                            self.var_term3_subject5_name.set("Business Studies")
                            self.var_term3_subject6_name.set("Physical Education")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")
                        elif self.var_class_section.get() == "Class - XII -- Section - D":
                            self.var_term1_subject1_name.set("English")
                            self.var_term1_subject2_name.set("Mathematics")
                            self.var_term1_subject3_name.set("Accountancy")
                            self.var_term1_subject4_name.set("Economics")
                            self.var_term1_subject5_name.set("Business Studies")
                            self.var_term1_subject6_name.set("Computer Science")
                            self.var_term1_subject7_name.set("")
                            self.var_term2_subject1_name.set("English")
                            self.var_term2_subject2_name.set("Mathematics")
                            self.var_term2_subject3_name.set("Accountancy")
                            self.var_term2_subject4_name.set("Economics")
                            self.var_term2_subject5_name.set("Business Studies")
                            self.var_term2_subject6_name.set("Computer Science")
                            self.var_term2_subject7_name.set("")
                            self.var_term3_subject1_name.set("English")
                            self.var_term3_subject2_name.set("Mathematics")
                            self.var_term3_subject3_name.set("Accountancy")
                            self.var_term3_subject4_name.set("Economics")
                            self.var_term3_subject5_name.set("Business Studies")
                            self.var_term3_subject6_name.set("Computer Science")
                            self.var_term3_subject7_name.set("")
                            self.subject
                            messagebox.showinfo("Info", "Please Write Marks Of Student in Term - 1 and Term - 2 and Term - 3")

                def subject(self):
                    self.var_term1_subject1.set("")
                    self.var_term1_subject2.set("")
                    self.var_term1_subject3.set("")
                    self.var_term1_subject4.set("")
                    self.var_term1_subject5.set("")
                    self.var_term1_subject6.set("")
                    self.var_term1_subject7.set("")
                    self.var_term2_subject1.set("")
                    self.var_term2_subject2.set("")
                    self.var_term2_subject3.set("")
                    self.var_term2_subject4.set("")
                    self.var_term2_subject5.set("")
                    self.var_term2_subject6.set("")
                    self.var_term2_subject7.set("")
                    self.var_term3_subject1.set("")
                    self.var_term3_subject2.set("")
                    self.var_term3_subject3.set("")
                    self.var_term3_subject4.set("")
                    self.var_term3_subject5.set("")
                    self.var_term3_subject6.set("")
                    self.var_term3_subject7.set("")

                def add_data(self):
                    if self.var_admission_id.get() == "" or self.var_name.get() == "" or self.var_class_section.get() == "Select Class - Section":
                        messagebox.showerror("Error", "Please Write Details Of Student!!!!!")
                        self.reset_data
                    else:
                        if self.var_class_section.get() == "Pre - Nursery" or self.var_class_section.get() == "UKG" or self.var_class_section.get() == "Class - I" or self.var_class_section.get() == "Class - II" or self.var_class_section.get() == "Class - III" or self.var_class_section.get() == "Class - IV" or self.var_class_section.get() == "Class - V":
                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                messagebox.showerror("Error", f"Please Write Term - 1 and Term - 2 Marks Of {self.var_name.get()} \nOtherwise write 0 if Student Does Not Give Any Exam......")
                            else:
                                try:
                                    if self.var_class_section.get() == "Pre - Nursery":
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_NURSERY (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Awareness_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Awareness_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ))
                                        conn.commit()
                                        conn.close()
                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                        self.reset_data
                                    else:
                                        if self.var_class_section.get() == "UKG":
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_UKG (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Awareness_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Awareness_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject5.get(),
self.var_term2_subject6.get()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ))
                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                            self.reset_data
                                        else:
                                            if self.var_class_section.get() == "Class - I":
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_1 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Knowledge_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Knowledge_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ))
                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                self.reset_data
                                            else:
                                                if self.var_class_section.get() == "Class - II":
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_2 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Knowledge_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Knowledge_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()

                                                    conn.commit()
                                                    conn.close()
                                                    messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                    self.reset_data
                                                else:
                                                    if self.var_class_section.get() == "Class - III":
                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                        my_cursor = conn.cursor()
                                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_3 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Knowledge_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Knowledge_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()

                                                        conn.commit()
                                                        conn.close()
                                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                        self.reset_data
                                                    else:
                                                        if self.var_class_section.get() == "Class - IV":
                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                            my_cursor = conn.cursor()
                                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_4 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Knowledge_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Knowledge_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()

                                                            conn.commit()
                                                            conn.close()
                                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                            self.reset_data
                                                        else:
                                                            if self.var_class_section.get() == "Class - V":
                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                my_cursor = conn.cursor()
                                                                my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_5 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Drawing_Marks, Term1_General_Knowledge_Marks, Term1_Environmental_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Drawing_Marks, Term2_General_Knowledge_Marks, Term2_Environmental_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get()

                                                                conn.commit()
                                                                conn.close()
                                                                messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                                self.reset_data
                                                            else:
                                                                messagebox.showerror("Error", "Error")
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                        
                        elif self.var_class_section.get() == "Class - VI" or self.var_class_section.get() == "Class - VII" or self.var_class_section.get() == "Class - VIII":
                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term1_subject7.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "" or self.var_term2_subject7.get() == "":
                                messagebox.showerror("Error", f"Please Write Term - 1 and Term - 2 Marks Of {self.var_name.get()} \nOtherwise write 0 if Student Does Not Give Any Exam......")
                            else:
                                try:
                                    if self.var_class_section.get() == "Class - VI":
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_6 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Social_Science_Marks, Term1_Science_Marks, Term1_General_Knowledge_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Social_Science_Marks, Term2_Science_Marks, Term2_General_Knowledge_Marks, Term2_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term1_subject7.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term2_subject6.get(),
self.var_term1_subject7.get()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ))
                                        conn.commit()
                                        conn.close()
                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                        self.reset_data
                                    else:
                                        if self.var_class_section.get() == "Class - VII":
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_7 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Social_Science_Marks, Term1_Science_Marks, Term1_General_Knowledge_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Social_Science_Marks, Term2_Science_Marks, Term2_General_Knowledge_Marks, Term2_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term1_subject7.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term2_subject7.get()

                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                            self.reset_data
                                        else:
                                            if self.var_class_section.get() == "Class - VIII":
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_8 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Social_Science_Marks, Term1_Science_Marks, Term1_General_Knowledge_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Social_Science_Marks, Term2_Science_Marks, Term2_General_Knowledge_Marks, Term2_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term1_subject7.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term2_subject7.get()

                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                self.reset_data
                                            else:
                                                messagebox.showerror("Error", "Error")
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                        
                        elif self.var_class_section.get() == "Class - IX" or self.var_class_section.get() == "Class - X":
                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term1_subject7.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "" or self.var_term2_subject7.get() == "" or self.var_term3_subject1.get() == "" or self.var_term3_subject2.get() == "" or self.var_term3_subject3.get() == "" or self.var_term3_subject4.get() == "" or self.var_term3_subject5.get() == "" or self.var_term3_subject6.get() == "" or self.var_term3_subject7.get() == "":
                                messagebox.showerror("Error", f"Please Write Term - 1, Term - 2 and Term - 3 Marks Of {self.var_name.get()} \nOtherwise write 0 if Student Does Not Give Any Exam......")
                            else:
                                try:
                                    if self.var_class_section.get() == "Class - IX":
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_9 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Social_Science_Marks, Term1_Science_Marks, Term1_Physical_Education_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Social_Science_Marks, Term2_Science_Marks, Term2_Physical_Education_Marks, Term2_Computer_Science_Marks, Term3_English_Marks, Term3_Hindi_Marks, Term3_Mathematics_Marks, Term3_Social_Science_Marks, Term3_Science_Marks, Term3_Physical_Education_Marks, Term3_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term1_subject7.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term2_subject7.get(),
self.var_term3_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get(),
self.var_term3_subject7.get()

                                        conn.commit()
                                        conn.close()
                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                        self.reset_data
                                    else:
                                        if self.var_class_section.get() == "Class - X":
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_10 (Admission_ID, Student_Name, Term1_English_Marks, Term1_Hindi_Marks, Term1_Mathematics_Marks, Term1_Social_Science_Marks, Term1_Science_Marks, Term1_Physical_Education_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Hindi_Marks, Term2_Mathematics_Marks, Term2_Social_Science_Marks, Term2_Science_Marks, Term2_Physical_Education_Marks, Term2_Computer_Science_Marks, Term3_English_Marks, Term3_Hindi_Marks, Term3_Mathematics_Marks, Term3_Social_Science_Marks, Term3_Science_Marks, Term3_Physical_Education_Marks, Term3_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term1_subject7.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term2_subject7.get(),
self.var_term3_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get(),
self.var_term3_subject7.get()

                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                            self.reset_data
                                        else:
                                            messagebox.showerror("Error", "Error")
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                        
                        elif self.var_class_section.get() == "Class - XI -- Section - A" or self.var_class_section.get() == "Class - XI -- Section - B" or self.var_class_section.get() == "Class - XI -- Section - C" or self.var_class_section.get() == "Class - XI -- Section - D" or self.var_class_section.get() == "Class - XII -- Section - A" or self.var_class_section.get() == "Class - XII -- Section - B" or self.var_class_section.get() == "Class - XII -- Section - C" or self.var_class_section.get() == "Class - XII -- Section - D":
                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "" or self.var_term3_subject1.get() == "" or self.var_term3_subject2.get() == "" or self.var_term3_subject3.get() == "" or self.var_term3_subject4.get() == "" or self.var_term3_subject5.get() == "" or self.var_term3_subject6.get() == "":
                                messagebox.showerror("Error", f"Please Write Term - 1, Term - 2 and Term - 3 Marks Of {self.var_name.get()} \nOtherwise write 0 if Student Does Not Give Any Exam......")
                            else:
                                try:
                                    if self.var_class_section.get() == "Class - XI -- Section - A":
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_11_A (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Physics_Marks, Term1_Chemistry_Marks, Term1_Computer_Science_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Physics_Marks, Term2_Chemistry_Marks, Term2_Computer_Science_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Physics_Marks, Term3_Chemistry_Marks, Term3_Computer_Science_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                        conn.commit()
                                        conn.close()
                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                        self.reset_data
                                    else:
                                        if self.var_class_section.get() == "Class - XI -- Section - B":
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_11_B (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Physics_Marks, Term1_Chemistry_Marks, Term1_Biology_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Physics_Marks, Term2_Chemistry_Marks, Term2_Biology_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Physics_Marks, Term3_Chemistry_Marks, Term3_Biology_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                            conn.commit()
                                            conn.close()
                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                            self.reset_data
                                        else:
                                            if self.var_class_section.get() == "Class - XI -- Section - C":
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_11_C (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Accountancy_Marks, Term1_Economics_Marks, Term1_Business_Studies_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Accountancy_Marks, Term2_Economics_Marks, Term2_Business_Studies_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Accountancy_Marks, Term3_Economics_Marks, Term3_Business_Studies_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                conn.commit()
                                                conn.close()
                                                messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                self.reset_data
                                            else:
                                                if self.var_class_section.get() == "Class - XI -- Section - D":
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_11_D (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Accountancy_Marks, Term1_Economics_Marks, Term1_Business_Studies_Marks, Term1_Computer_Science_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Accountancy_Marks, Term2_Economics_Marks, Term2_Business_Studies_Marks, Term2_Computer_Science_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Accountancy_Marks, Term3_Economics_Marks, Term3_Business_Studies_Marks, Term3_Computer_Science_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                    conn.commit()
                                                    conn.close()
                                                    messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                    self.reset_data
                                                else:
                                                    if self.var_class_section.get() == "Class - XII -- Section - A":
                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                        my_cursor = conn.cursor()
                                                        my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_12_A (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Physics_Marks, Term1_Chemistry_Marks, Term1_Computer_Science_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Physics_Marks, Term2_Chemistry_Marks, Term2_Computer_Science_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Physics_Marks, Term3_Chemistry_Marks, Term3_Computer_Science_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                        conn.commit()
                                                        conn.close()
                                                        messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                        self.reset_data
                                                    else:
                                                        if self.var_class_section.get() == "Class - XII -- Section - B":
                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                            my_cursor = conn.cursor()
                                                            my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_12_C (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Accountancy_Marks, Term1_Economics_Marks, Term1_Business_Studies_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Accountancy_Marks, Term2_Economics_Marks, Term2_Business_Studies_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Accountancy_Marks, Term3_Economics_Marks, Term3_Business_Studies_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                self.var_term1_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                            conn.commit()
                                                            conn.close()
                                                            messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                            self.reset_data
                                                        else:
                                                            if self.var_class_section.get() == "Class - XII -- Section - C":
                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                my_cursor = conn.cursor()
                                                                my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_12_C (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Accountancy_Marks, Term1_Economics_Marks, Term1_Business_Studies_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Accountancy_Marks, Term2_Economics_Marks, Term2_Business_Studies_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Accountancy_Marks, Term3_Economics_Marks, Term3_Business_Studies_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
self.var_term2_subject1.get(),
self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.var_term3_subject4.get(),
self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                                conn.commit()
                                                                conn.close()
                                                                messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                                self.reset_data
                                                            else:
                                                                if self.var_class_section.get() == "Class - XII -- Section - D":
                                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                    my_cursor = conn.cursor()
                                                                    my_cursor.execute("INSERT INTO PROGRESS_REPORT_CLASS_12_D (Admission_ID, Student_Name, Term1_English_Marks, Term1_Mathematics_Marks, Term1_Accountancy_Marks, Term1_Economics_Marks, Term1_Business_Studies_Marks, Term1_Physical_Education_Marks, Term2_English_Marks, Term2_Mathematics_Marks, Term2_Accountancy_Marks, Term2_Economics_Marks, Term2_Business_Studies_Marks, Term2_Physical_Education_Marks, Term3_English_Marks, Term3_Mathematics_Marks, Term3_Accountancy_Marks, Term3_Economics_Marks, Term3_Business_Studies_Marks, Term3_Physical_Education_Marks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (
self.var_admission_id.get(),
self.var_name.get(),
self.var_term1_subject1.get(),
self.var_term1_subject2.get(),
self.var_term1_subject3.get(),
self.var_term1_subject4.get(),
self.var_term1_subject5.get(),
self.var_term1_subject6.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject1.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term2_subject2.get(),
self.var_term2_subject3.get(),
self.var_term2_subject4.get(),
self.var_term2_subject5.get(),
self.var_term2_subject6.get(),
self.var_term3_subject1.get(),
self.var_term3_subject2.get(),
self.var_term3_subject3.get(),
self.var_term3_subject4.get(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        self.var_term3_subject5.get(),
self.var_term3_subject6.get()

                                                                    conn.commit()
                                                                    conn.close()
                                                                    messagebox.showinfo("Success", f"Progress Report of Student - {self.var_name.get()}\nAdded Successfully.....")
                                                                    self.reset_data
                                                                else:
                                                                    messagebox.showerror("Error", "Error")
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                        
                        else:
                            messagebox.showerror("Error", "Error")

                def see_graph(self):
                    if self.var_admission_id.get() == "" or self.var_name.get() == "" or self.var_class_section.get() == "Select Class - Section":
                        messagebox.showerror("Error", "Please Write Student Information")
                    else:
                        if self.var_class_section.get() == "Pre - Nursery":
                            try:
                                if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                    messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                else:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    sql = "SELECT * FROM PROGRESS_REPORT_CLASS_NURSERY WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                    my_cursor.execute(sql)
                                    data = my_cursor.fetchone()
                                    if len(data) == 0:
                                        messagebox.showerror("Error", "Please Save the Record FIrst......")
                                    elif len(data) != 0:
                                        conn.commit()
                                    conn.close()
                                    Term1_English_Marks = data[2]
                                    Term1_Hindi_Marks = data[3]
                                    Term1_Mathematics_Marks = data[4]
                                    Term1_Drawing_Marks = data[5]
                                    Term1_General_Awareness_Marks = data[6]
                                    Term1_Environmental_Science_Marks = data[7]
                                    Term2_English_Marks = data[8]
                                    Term2_Hindi_Marks = data[9]
                                    Term2_Mathematics_Marks = data[10]
                                    Term2_Drawing_Marks = data[11]
                                    Term2_General_Awareness_Marks = data[12]
                                    Term2_Environmental_Science_Marks = data[13]

                                    subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                    subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                    subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                    subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                    subject5 = [int(Term1_General_Awareness_Marks), int(Term2_General_Awareness_Marks)]
                                    subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                    t = [1,2]
                                    pl.xlabel("Term")
                                    pl.ylabel("Grade")
                                    pl.title("Progress Report")
                                    pl.ylim(1, 150)
                                    pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                    pl.xticks([1, 2])
                                    pl.plot(t, subject1, marker = "d", label = "English")
                                    pl.plot(t, subject2, marker = "d", label = "Hindi")
                                    pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                    pl.plot(t, subject4, marker = "d", label = "Drawing")
                                    pl.plot(t, subject5, marker = "d", label = "General Awareness")
                                    pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                    pl.legend()
                                    fig1 = pl.gcf()
                                    pl.show()
                                    pl.draw()
                                    fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_Nursery_UKG/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                            except Exception as es:
                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                        else:
                            if self.var_class_section.get() == "UKG":
                                try:
                                    if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                        messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                    else:
                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                        my_cursor = conn.cursor()
                                        sql = "SELECT * FROM PROGRESS_REPORT_CLASS_UKG WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                        my_cursor.execute(sql)
                                        data = my_cursor.fetchone()
                                        if len(data) == 0:
                                            messagebox.showerror("Error", "Please Save the Record FIrst......")
                                        elif len(data) != 0:
                                            conn.commit()
                                        conn.close()
                                        Term1_English_Marks = data[2]
                                        Term1_Hindi_Marks = data[3]
                                        Term1_Mathematics_Marks = data[4]
                                        Term1_Drawing_Marks = data[5]
                                        Term1_General_Awareness_Marks = data[6]
                                        Term1_Environmental_Science_Marks = data[7]
                                        Term2_English_Marks = data[8]
                                        Term2_Hindi_Marks = data[9]
                                        Term2_Mathematics_Marks = data[10]
                                        Term2_Drawing_Marks = data[11]
                                        Term2_General_Awareness_Marks = data[12]
                                        Term2_Environmental_Science_Marks = data[13]

                                        subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                        subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                        subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                        subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                        subject5 = [int(Term1_General_Awareness_Marks), int(Term2_General_Awareness_Marks)]
                                        subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                        t = [1,2]
                                        pl.xlabel("Term")
                                        pl.ylabel("Grade")
                                        pl.title("Progress Report")
                                        pl.ylim(1, 150)
                                        pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                        pl.xticks([1, 2])
                                        pl.plot(t, subject1, marker = "d", label = "English")
                                        pl.plot(t, subject2, marker = "d", label = "Hindi")
                                        pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                        pl.plot(t, subject4, marker = "d", label = "Drawing")
                                        pl.plot(t, subject5, marker = "d", label = "General Awareness")
                                        pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                        pl.legend()
                                        fig1 = pl.gcf()
                                        pl.show()
                                        pl.draw()
                                        fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_Nursery_UKG/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                            else:
                                if self.var_class_section.get() == "Class - I":
                                    try:
                                        if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                            messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                        else:
                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                            my_cursor = conn.cursor()
                                            sql = "SELECT * FROM PROGRESS_REPORT_CLASS_1 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                            my_cursor.execute(sql)
                                            data = my_cursor.fetchone()
                                            if len(data) == 0:
                                                messagebox.showerror("Error", "Please Save the Record FIrst......")
                                            elif len(data) != 0:
                                                conn.commit()
                                            conn.close()
                                            Term1_English_Marks = data[2]
                                            Term1_Hindi_Marks = data[3]
                                            Term1_Mathematics_Marks = data[4]
                                            Term1_Drawing_Marks = data[5]
                                            Term1_General_Knowledge_Marks = data[6]
                                            Term1_Environmental_Science_Marks = data[7]
                                            Term2_English_Marks = data[8]
                                            Term2_Hindi_Marks = data[9]
                                            Term2_Mathematics_Marks = data[10]
                                            Term2_Drawing_Marks = data[11]
                                            Term2_General_Knowledge_Marks = data[12]
                                            Term2_Environmental_Science_Marks = data[13]

                                            subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                            subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                            subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                            subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                            subject5 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                            subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                            t = [1,2]
                                            pl.xlabel("Term")
                                            pl.ylabel("Grade")
                                            pl.title("Progress Report")
                                            pl.ylim(1, 150)
                                            pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                            pl.xticks([1, 2])
                                            pl.plot(t, subject1, marker = "d", label = "English")
                                            pl.plot(t, subject2, marker = "d", label = "Hindi")
                                            pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                            pl.plot(t, subject4, marker = "d", label = "Drawing")
                                            pl.plot(t, subject5, marker = "d", label = "General Knowledge")
                                            pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                            pl.legend()
                                            fig1 = pl.gcf()
                                            pl.show()
                                            pl.draw()
                                            fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_1_5/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                    except Exception as es:
                                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                else:
                                    if self.var_class_section.get() == "Class - II":
                                        try:
                                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                            else:
                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                my_cursor = conn.cursor()
                                                sql = "SELECT * FROM PROGRESS_REPORT_CLASS_2 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                my_cursor.execute(sql)
                                                data = my_cursor.fetchone()
                                                if len(data) == 0:
                                                    messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                elif len(data) != 0:
                                                    conn.commit()
                                                conn.close()
                                                Term1_English_Marks = data[2]
                                                Term1_Hindi_Marks = data[3]
                                                Term1_Mathematics_Marks = data[4]
                                                Term1_Drawing_Marks = data[5]
                                                Term1_General_Knowledge_Marks = data[6]
                                                Term1_Environmental_Science_Marks = data[7]
                                                Term2_English_Marks = data[8]
                                                Term2_Hindi_Marks = data[9]
                                                Term2_Mathematics_Marks = data[10]
                                                Term2_Drawing_Marks = data[11]
                                                Term2_General_Knowledge_Marks = data[12]
                                                Term2_Environmental_Science_Marks = data[13]

                                                subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                                subject5 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                                t = [1,2]
                                                pl.xlabel("Term")
                                                pl.ylabel("Grade")
                                                pl.title("Progress Report")
                                                pl.ylim(1, 150)
                                                pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                pl.xticks([1, 2])
                                                pl.plot(t, subject1, marker = "d", label = "English")
                                                pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                pl.plot(t, subject4, marker = "d", label = "Drawing")
                                                pl.plot(t, subject5, marker = "d", label = "General Knowledge")
                                                pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                                pl.legend()
                                                fig1 = pl.gcf()
                                                pl.show()
                                                pl.draw()
                                                fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_1_5/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                        except Exception as es:
                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                    else:
                                        if self.var_class_section.get() == "Class - III":
                                            try:
                                                if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                    messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                else:
                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                    my_cursor = conn.cursor()
                                                    sql = "SELECT * FROM PROGRESS_REPORT_CLASS_3 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                    my_cursor.execute(sql)
                                                    data = my_cursor.fetchone()
                                                    if len(data) == 0:
                                                        messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                    elif len(data) != 0:
                                                        conn.commit()
                                                    conn.close()
                                                    Term1_English_Marks = data[2]
                                                    Term1_Hindi_Marks = data[3]
                                                    Term1_Mathematics_Marks = data[4]
                                                    Term1_Drawing_Marks = data[5]
                                                    Term1_General_Knowledge_Marks = data[6]
                                                    Term1_Environmental_Science_Marks = data[7]
                                                    Term2_English_Marks = data[8]
                                                    Term2_Hindi_Marks = data[9]
                                                    Term2_Mathematics_Marks = data[10]
                                                    Term2_Drawing_Marks = data[11]
                                                    Term2_General_Knowledge_Marks = data[12]
                                                    Term2_Environmental_Science_Marks = data[13]

                                                    subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                    subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                    subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                    subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                                    subject5 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                    subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                                    t = [1,2]
                                                    pl.xlabel("Term")
                                                    pl.ylabel("Grade")
                                                    pl.title("Progress Report")
                                                    pl.ylim(1, 150)
                                                    pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                    pl.xticks([1, 2])
                                                    pl.plot(t, subject1, marker = "d", label = "English")
                                                    pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                    pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                    pl.plot(t, subject4, marker = "d", label = "Drawing")
                                                    pl.plot(t, subject5, marker = "d", label = "General Knowledge")
                                                    pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                                    pl.legend()
                                                    fig1 = pl.gcf()
                                                    pl.show()
                                                    pl.draw()
                                                    fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_1_5/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                            except Exception as es:
                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                        else:
                                            if self.var_class_section.get() == "Class - IV":
                                                try:
                                                    if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                        messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                    else:
                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                        my_cursor = conn.cursor()
                                                        sql = "SELECT * FROM PROGRESS_REPORT_CLASS_4 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                        my_cursor.execute(sql)
                                                        data = my_cursor.fetchone()
                                                        if len(data) == 0:
                                                            messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                        elif len(data) != 0:
                                                            conn.commit()
                                                        conn.close()
                                                        Term1_English_Marks = data[2]
                                                        Term1_Hindi_Marks = data[3]
                                                        Term1_Mathematics_Marks = data[4]
                                                        Term1_Drawing_Marks = data[5]
                                                        Term1_General_Knowledge_Marks = data[6]
                                                        Term1_Environmental_Science_Marks = data[7]
                                                        Term2_English_Marks = data[8]
                                                        Term2_Hindi_Marks = data[9]
                                                        Term2_Mathematics_Marks = data[10]
                                                        Term2_Drawing_Marks = data[11]
                                                        Term2_General_Knowledge_Marks = data[12]
                                                        Term2_Environmental_Science_Marks = data[13]

                                                        subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                        subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                        subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                        subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                                        subject5 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                        subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                                        t = [1,2]
                                                        pl.xlabel("Term")
                                                        pl.ylabel("Grade")
                                                        pl.title("Progress Report")
                                                        pl.ylim(1, 150)
                                                        pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                        pl.xticks([1, 2])
                                                        pl.plot(t, subject1, marker = "d", label = "English")
                                                        pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                        pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                        pl.plot(t, subject4, marker = "d", label = "Drawing")
                                                        pl.plot(t, subject5, marker = "d", label = "General Knowledge")
                                                        pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                                        pl.legend()
                                                        fig1 = pl.gcf()
                                                        pl.show()
                                                        pl.draw()
                                                        fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_1_5/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                except Exception as es:
                                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                            else:
                                                if self.var_class_section.get() == "Class - V":
                                                    try:
                                                        if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                            messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                        else:
                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                            my_cursor = conn.cursor()
                                                            sql = "SELECT * FROM PROGRESS_REPORT_CLASS_5 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                            my_cursor.execute(sql)
                                                            data = my_cursor.fetchone()
                                                            if len(data) == 0:
                                                                messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                            elif len(data) != 0:
                                                                conn.commit()
                                                            conn.close()
                                                            Term1_English_Marks = data[2]
                                                            Term1_Hindi_Marks = data[3]
                                                            Term1_Mathematics_Marks = data[4]
                                                            Term1_Drawing_Marks = data[5]
                                                            Term1_General_Knowledge_Marks = data[6]
                                                            Term1_Environmental_Science_Marks = data[7]
                                                            Term2_English_Marks = data[8]
                                                            Term2_Hindi_Marks = data[9]
                                                            Term2_Mathematics_Marks = data[10]
                                                            Term2_Drawing_Marks = data[11]
                                                            Term2_General_Knowledge_Marks = data[12]
                                                            Term2_Environmental_Science_Marks = data[13]

                                                            subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                            subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                            subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                            subject4 = [int(Term1_Drawing_Marks), int(Term2_Drawing_Marks)]
                                                            subject5 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                            subject6 = [int(Term1_Environmental_Science_Marks), int(Term2_Environmental_Science_Marks)]

                                                            t = [1,2]
                                                            pl.xlabel("Term")
                                                            pl.ylabel("Grade")
                                                            pl.title("Progress Report")
                                                            pl.ylim(1, 150)
                                                            pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                            pl.xticks([1, 2])
                                                            pl.plot(t, subject1, marker = "d", label = "English")
                                                            pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                            pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                            pl.plot(t, subject4, marker = "d", label = "Drawing")
                                                            pl.plot(t, subject5, marker = "d", label = "General Knowledge")
                                                            pl.plot(t, subject6, marker = "d", label = "Environmental Science")
                                                            pl.legend()
                                                            fig1 = pl.gcf()
                                                            pl.show()
                                                            pl.draw()
                                                            fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_1_5/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                    except Exception as es:
                                                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                else:
                                                    if self.var_class_section.get() == "Class - VI":
                                                        try:
                                                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                            else:
                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                my_cursor = conn.cursor()
                                                                sql = "SELECT * FROM PROGRESS_REPORT_CLASS_6 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                my_cursor.execute(sql)
                                                                data = my_cursor.fetchone()
                                                                if len(data) == 0:
                                                                    messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                elif len(data) != 0:
                                                                    conn.commit()
                                                                conn.close()
                                                                Term1_English_Marks = data[2]
                                                                Term1_Hindi_Marks = data[3]
                                                                Term1_Mathematics_Marks = data[4]
                                                                Term1_Social_Science_Marks = data[5]
                                                                Term1_Science_Marks = data[6]
                                                                Term1_General_Knowledge_Marks = data[7]
                                                                Term1_Computer_Science_Marks = data[8]
                                                                Term2_English_Marks = data[9]
                                                                Term2_Hindi_Marks = data[10]
                                                                Term2_Mathematics_Marks = data[11]
                                                                Term2_Social_Science_Marks = data[12]
                                                                Term2_Science_Marks = data[13]
                                                                Term2_General_Knowledge_Marks = data[14]
                                                                Term2_Computer_Science_Marks = data[15]

                                                                subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                                subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                                subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                                subject4 = [int(Term1_Social_Science_Marks), int(Term2_Social_Science_Marks)]
                                                                subject5 = [int(Term1_Science_Marks), int(Term2_Science_Marks)]
                                                                subject6 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                                subject7 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks)]

                                                                t = [1,2]
                                                                pl.xlabel("Term")
                                                                pl.ylabel("Grade")
                                                                pl.title("Progress Report")
                                                                pl.ylim(1, 150)
                                                                pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                pl.xticks([1, 2])
                                                                pl.plot(t, subject1, marker = "d", label = "English")
                                                                pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                                pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                                pl.plot(t, subject4, marker = "d", label = "Social Science")
                                                                pl.plot(t, subject5, marker = "d", label = "Science")
                                                                pl.plot(t, subject6, marker = "d", label = "General Knowledge")
                                                                pl.plot(t, subject7, marker = "d", label = "Computer Science")
                                                                pl.legend()
                                                                fig1 = pl.gcf()
                                                                pl.show()
                                                                pl.draw()
                                                                fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_6_8/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                        except Exception as es:
                                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                    else:
                                                        if self.var_class_section.get() == "Class - VII":
                                                            try:
                                                                if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                    messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                else:
                                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                    my_cursor = conn.cursor()
                                                                    sql = "SELECT * FROM PROGRESS_REPORT_CLASS_7 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                    my_cursor.execute(sql)
                                                                    data = my_cursor.fetchone()
                                                                    if len(data) == 0:
                                                                        messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                    elif len(data) != 0:
                                                                        conn.commit()
                                                                    conn.close()
                                                                    Term1_English_Marks = data[2]
                                                                    Term1_Hindi_Marks = data[3]
                                                                    Term1_Mathematics_Marks = data[4]
                                                                    Term1_Social_Science_Marks = data[5]
                                                                    Term1_Science_Marks = data[6]
                                                                    Term1_General_Knowledge_Marks = data[7]
                                                                    Term1_Computer_Science_Marks = data[8]
                                                                    Term2_English_Marks = data[9]
                                                                    Term2_Hindi_Marks = data[10]
                                                                    Term2_Mathematics_Marks = data[11]
                                                                    Term2_Social_Science_Marks = data[12]
                                                                    Term2_Science_Marks = data[13]
                                                                    Term2_General_Knowledge_Marks = data[14]
                                                                    Term2_Computer_Science_Marks = data[15]

                                                                    subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                                    subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                                    subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                                    subject4 = [int(Term1_Social_Science_Marks), int(Term2_Social_Science_Marks)]
                                                                    subject5 = [int(Term1_Science_Marks), int(Term2_Science_Marks)]
                                                                    subject6 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                                    subject7 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks)]

                                                                    t = [1,2]
                                                                    pl.xlabel("Term")
                                                                    pl.ylabel("Grade")
                                                                    pl.title("Progress Report")
                                                                    pl.ylim(1, 150)
                                                                    pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                    pl.xticks([1, 2])
                                                                    pl.plot(t, subject1, marker = "d", label = "English")
                                                                    pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                                    pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                                    pl.plot(t, subject4, marker = "d", label = "Social Science")
                                                                    pl.plot(t, subject5, marker = "d", label = "Science")
                                                                    pl.plot(t, subject6, marker = "d", label = "General Knowledge")
                                                                    pl.plot(t, subject7, marker = "d", label = "Computer Science")
                                                                    pl.legend()
                                                                    fig1 = pl.gcf()
                                                                    pl.show()
                                                                    pl.draw()
                                                                    fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_6_8/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                            except Exception as es:
                                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                        else:
                                                            if self.var_class_section.get() == "Class - VIII":
                                                                try:
                                                                    if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                        messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                    else:
                                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                        my_cursor = conn.cursor()
                                                                        sql = "SELECT * FROM PROGRESS_REPORT_CLASS_8 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                        my_cursor.execute(sql)
                                                                        data = my_cursor.fetchone()
                                                                        if len(data) == 0:
                                                                            messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                        elif len(data) != 0:
                                                                            conn.commit()
                                                                        conn.close()
                                                                        Term1_English_Marks = data[2]
                                                                        Term1_Hindi_Marks = data[3]
                                                                        Term1_Mathematics_Marks = data[4]
                                                                        Term1_Social_Science_Marks = data[5]
                                                                        Term1_Science_Marks = data[6]
                                                                        Term1_General_Knowledge_Marks = data[7]
                                                                        Term1_Computer_Science_Marks = data[8]
                                                                        Term2_English_Marks = data[9]
                                                                        Term2_Hindi_Marks = data[10]
                                                                        Term2_Mathematics_Marks = data[11]
                                                                        Term2_Social_Science_Marks = data[12]
                                                                        Term2_Science_Marks = data[13]
                                                                        Term2_General_Knowledge_Marks = data[14]
                                                                        Term2_Computer_Science_Marks = data[15]

                                                                        subject1 = [int(Term1_English_Marks), int(Term2_English_Marks)]
                                                                        subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks)]
                                                                        subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks)]
                                                                        subject4 = [int(Term1_Social_Science_Marks), int(Term2_Social_Science_Marks)]
                                                                        subject5 = [int(Term1_Science_Marks), int(Term2_Science_Marks)]
                                                                        subject6 = [int(Term1_General_Knowledge_Marks), int(Term2_General_Knowledge_Marks)]
                                                                        subject7 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks)]

                                                                        t = [1,2]
                                                                        pl.xlabel("Term")
                                                                        pl.ylabel("Grade")
                                                                        pl.title("Progress Report")
                                                                        pl.ylim(1, 150)
                                                                        pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                        pl.xticks([1, 2])
                                                                        pl.plot(t, subject1, marker = "d", label = "English")
                                                                        pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                                        pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                                        pl.plot(t, subject4, marker = "d", label = "Social Science")
                                                                        pl.plot(t, subject5, marker = "d", label = "Science")
                                                                        pl.plot(t, subject6, marker = "d", label = "General Knowledge")
                                                                        pl.plot(t, subject7, marker = "d", label = "Computer Science")
                                                                        pl.legend()
                                                                        fig1 = pl.gcf()
                                                                        pl.show()
                                                                        pl.draw()
                                                                        fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_6_8/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                except Exception as es:
                                                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                            else:
                                                                if self.var_class_section.get() == "Class - IX":
                                                                    try:
                                                                        if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                            messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                        else:
                                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                            my_cursor = conn.cursor()
                                                                            sql = "SELECT * FROM PROGRESS_REPORT_CLASS_9 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                            my_cursor.execute(sql)
                                                                            data = my_cursor.fetchone()
                                                                            if len(data) == 0:
                                                                                messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                            elif len(data) != 0:
                                                                                conn.commit()
                                                                            conn.close()
                                                                            Term1_English_Marks = data[2]
                                                                            Term1_Hindi_Marks = data[3]
                                                                            Term1_Mathematics_Marks = data[4]
                                                                            Term1_Social_Science_Marks = data[5]
                                                                            Term1_Science_Marks = data[6]
                                                                            Term1_Physical_Education_Marks = data[7]
                                                                            Term1_Computer_Science_Marks = data[8]
                                                                            Term2_English_Marks = data[9]
                                                                            Term2_Hindi_Marks = data[10]
                                                                            Term2_Mathematics_Marks = data[11]
                                                                            Term2_Social_Science_Marks = data[12]
                                                                            Term2_Science_Marks = data[13]
                                                                            Term2_Physical_Education_Marks = data[14]
                                                                            Term2_Computer_Science_Marks = data[15]
                                                                            Term3_English_Marks = data[16]
                                                                            Term3_Hindi_Marks = data[17]
                                                                            Term3_Mathematics_Marks = data[18]
                                                                            Term3_Social_Science_Marks = data[19]
                                                                            Term3_Science_Marks = data[20]
                                                                            Term3_Physical_Education_Marks = data[21]
                                                                            Term3_Computer_Science_Marks = data[22]

                                                                            subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                            subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks), int(Term3_Hindi_Marks)]
                                                                            subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                            subject4 = [int(Term1_Social_Science_Marks), int(Term2_Social_Science_Marks), int(Term3_Social_Science_Marks)]
                                                                            subject5 = [int(Term1_Science_Marks), int(Term2_Science_Marks), int(Term3_Science_Marks)]
                                                                            subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]
                                                                            subject7 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks), int(Term3_Computer_Science_Marks)]

                                                                            t = [1,2,3]
                                                                            pl.xlabel("Term")
                                                                            pl.ylabel("Grade")
                                                                            pl.title("Progress Report")
                                                                            pl.ylim(1, 150)
                                                                            pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                            pl.xticks([1, 2,3])
                                                                            pl.plot(t, subject1, marker = "d", label = "English")
                                                                            pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                                            pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                                            pl.plot(t, subject4, marker = "d", label = "Social Science")
                                                                            pl.plot(t, subject5, marker = "d", label = "Science")
                                                                            pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                            pl.plot(t, subject7, marker = "d", label = "Computer Science")
                                                                            pl.legend()
                                                                            fig1 = pl.gcf()
                                                                            pl.show()
                                                                            pl.draw()
                                                                            fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_9_10/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                    except Exception as es:
                                                                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                else:
                                                                    if self.var_class_section.get() == "Class - X":
                                                                        try:
                                                                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                            else:
                                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                my_cursor = conn.cursor()
                                                                                sql = "SELECT * FROM PROGRESS_REPORT_CLASS_10 WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                my_cursor.execute(sql)
                                                                                data = my_cursor.fetchone()
                                                                                if len(data) == 0:
                                                                                    messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                elif len(data) != 0:
                                                                                    conn.commit()
                                                                                conn.close()
                                                                                Term1_English_Marks = data[2]
                                                                                Term1_Hindi_Marks = data[3]
                                                                                Term1_Mathematics_Marks = data[4]
                                                                                Term1_Social_Science_Marks = data[5]
                                                                                Term1_Science_Marks = data[6]
                                                                                Term1_Physical_Education_Marks = data[7]
                                                                                Term1_Computer_Science_Marks = data[8]
                                                                                Term2_English_Marks = data[9]
                                                                                Term2_Hindi_Marks = data[10]
                                                                                Term2_Mathematics_Marks = data[11]
                                                                                Term2_Social_Science_Marks = data[12]
                                                                                Term2_Science_Marks = data[13]
                                                                                Term2_Physical_Education_Marks = data[14]
                                                                                Term2_Computer_Science_Marks = data[15]
                                                                                Term3_English_Marks = data[16]
                                                                                Term3_Hindi_Marks = data[17]
                                                                                Term3_Mathematics_Marks = data[18]
                                                                                Term3_Social_Science_Marks = data[19]
                                                                                Term3_Science_Marks = data[20]
                                                                                Term3_Physical_Education_Marks = data[21]
                                                                                Term3_Computer_Science_Marks = data[22]

                                                                                subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                subject2 = [int(Term1_Hindi_Marks), int(Term2_Hindi_Marks), int(Term3_Hindi_Marks)]
                                                                                subject3 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                subject4 = [int(Term1_Social_Science_Marks), int(Term2_Social_Science_Marks), int(Term3_Social_Science_Marks)]
                                                                                subject5 = [int(Term1_Science_Marks), int(Term2_Science_Marks), int(Term3_Science_Marks)]
                                                                                subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]
                                                                                subject7 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks), int(Term3_Computer_Science_Marks)]

                                                                                t = [1,2,3]
                                                                                pl.xlabel("Term")
                                                                                pl.ylabel("Grade")
                                                                                pl.title("Progress Report")
                                                                                pl.ylim(1, 150)
                                                                                pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                pl.xticks([1, 2,3])
                                                                                pl.plot(t, subject1, marker = "d", label = "English")
                                                                                pl.plot(t, subject2, marker = "d", label = "Hindi")
                                                                                pl.plot(t, subject3, marker = "d", label = "Mathematics")
                                                                                pl.plot(t, subject4, marker = "d", label = "Social Science")
                                                                                pl.plot(t, subject5, marker = "d", label = "Science")
                                                                                pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                pl.plot(t, subject7, marker = "d", label = "Computer Science")
                                                                                pl.legend()
                                                                                fig1 = pl.gcf()
                                                                                pl.show()
                                                                                pl.draw()
                                                                                fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_9_10/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                        except Exception as es:
                                                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                    else:
                                                                        if self.var_class_section.get() == "Class - XI -- Section - A":
                                                                            try:
                                                                                if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                    messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                else:
                                                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                    my_cursor = conn.cursor()
                                                                                    sql = "SELECT * FROM PROGRESS_REPORT_CLASS_11_A WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                    my_cursor.execute(sql)
                                                                                    data = my_cursor.fetchone()
                                                                                    if len(data) == 0:
                                                                                        messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                    elif len(data) != 0:
                                                                                        conn.commit()
                                                                                    conn.close()
                                                                                    Term1_English_Marks = data[2]
                                                                                    Term1_Mathematics_Marks = data[3]
                                                                                    Term1_Physics_Marks = data[4]
                                                                                    Term1_Chemistry_Marks = data[5]
                                                                                    Term1_Computer_Science_Marks = data[6]
                                                                                    Term1_Physical_Education_Marks = data[7]
                                                                                    Term2_English_Marks = data[8]
                                                                                    Term2_Mathematics_Marks = data[9]
                                                                                    Term2_Physics_Marks = data[10]
                                                                                    Term2_Chemistry_Marks = data[11]
                                                                                    Term2_Computer_Science_Marks = data[12]
                                                                                    Term2_Physical_Education_Marks = data[13]
                                                                                    Term3_English_Marks = data[14]
                                                                                    Term3_Mathematics_Marks = data[15]
                                                                                    Term3_Physics_Marks = data[16]
                                                                                    Term3_Chemistry_Marks = data[17]
                                                                                    Term3_Computer_Science_Marks = data[18]
                                                                                    Term3_Physical_Education_Marks = data[19]

                                                                                    subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                    subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                    subject3 = [int(Term1_Physics_Marks), int(Term2_Physics_Marks), int(Term3_Physics_Marks)]
                                                                                    subject4 = [int(Term1_Chemistry_Marks), int(Term2_Chemistry_Marks), int(Term3_Chemistry_Marks)]
                                                                                    subject5 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks), int(Term3_Computer_Science_Marks)]
                                                                                    subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                    t = [1,2,3]
                                                                                    pl.xlabel("Term")
                                                                                    pl.ylabel("Grade")
                                                                                    pl.title("Progress Report")
                                                                                    pl.ylim(1, 150)
                                                                                    pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                    pl.xticks([1, 2, 3])
                                                                                    pl.plot(t, subject1, marker = "d", label = "English")
                                                                                    pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                    pl.plot(t, subject3, marker = "d", label = "Physics")
                                                                                    pl.plot(t, subject4, marker = "d", label = "Chemistry")
                                                                                    pl.plot(t, subject5, marker = "d", label = "Computer Science")
                                                                                    pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                    pl.legend()
                                                                                    fig1 = pl.gcf()
                                                                                    pl.show()
                                                                                    pl.draw()
                                                                                    fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_11/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                            except Exception as es:
                                                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                        else:
                                                                            if self.var_class_section.get() == "Class - XI -- Section - B":
                                                                                try:
                                                                                    if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                        messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                    else:
                                                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                        my_cursor = conn.cursor()
                                                                                        sql = "SELECT * FROM PROGRESS_REPORT_CLASS_11_B WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                        my_cursor.execute(sql)
                                                                                        data = my_cursor.fetchone()
                                                                                        if len(data) == 0:
                                                                                            messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                        elif len(data) != 0:
                                                                                            conn.commit()
                                                                                        conn.close()
                                                                                        Term1_English_Marks = data[2]
                                                                                        Term1_Mathematics_Marks = data[3]
                                                                                        Term1_Physics_Marks = data[4]
                                                                                        Term1_Chemistry_Marks = data[5]
                                                                                        Term1_Biology_Marks = data[6]
                                                                                        Term1_Physical_Education_Marks = data[7]
                                                                                        Term2_English_Marks = data[8]
                                                                                        Term2_Mathematics_Marks = data[9]
                                                                                        Term2_Physics_Marks = data[10]
                                                                                        Term2_Chemistry_Marks = data[11]
                                                                                        Term2_Biology_Marks = data[12]
                                                                                        Term2_Physical_Education_Marks = data[13]
                                                                                        Term3_English_Marks = data[14]
                                                                                        Term3_Mathematics_Marks = data[15]
                                                                                        Term3_Physics_Marks = data[16]
                                                                                        Term3_Chemistry_Marks = data[17]
                                                                                        Term3_Biology_Marks = data[18]
                                                                                        Term3_Physical_Education_Marks = data[19]

                                                                                        subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                        subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                        subject3 = [int(Term1_Physics_Marks), int(Term2_Physics_Marks), int(Term3_Physics_Marks)]
                                                                                        subject4 = [int(Term1_Chemistry_Marks), int(Term2_Chemistry_Marks), int(Term3_Chemistry_Marks)]
                                                                                        subject5 = [int(Term1_Biology_Marks), int(Term2_Biology_Marks), int(Term3_Biology_Marks)]
                                                                                        subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                        t = [1,2,3]
                                                                                        pl.xlabel("Term")
                                                                                        pl.ylabel("Grade")
                                                                                        pl.title("Progress Report")
                                                                                        pl.ylim(1, 150)
                                                                                        pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                        pl.xticks([1, 2, 3])
                                                                                        pl.plot(t, subject1, marker = "d", label = "English")
                                                                                        pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                        pl.plot(t, subject3, marker = "d", label = "Physics")
                                                                                        pl.plot(t, subject4, marker = "d", label = "Chemistry")
                                                                                        pl.plot(t, subject5, marker = "d", label = "Biology")
                                                                                        pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                        pl.legend()
                                                                                        fig1 = pl.gcf()
                                                                                        pl.show()
                                                                                        pl.draw()
                                                                                        fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_11/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                except Exception as es:
                                                                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                            else:
                                                                                if self.var_class_section.get() == "Class - XI -- Section - C":
                                                                                    try:
                                                                                        if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                            messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                        else:
                                                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                            my_cursor = conn.cursor()
                                                                                            sql = "SELECT * FROM PROGRESS_REPORT_CLASS_11_C WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                            my_cursor.execute(sql)
                                                                                            data = my_cursor.fetchone()
                                                                                            if len(data) == 0:
                                                                                                messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                            elif len(data) != 0:
                                                                                                conn.commit()
                                                                                            conn.close()
                                                                                            Term1_English_Marks = data[2]
                                                                                            Term1_Mathematics_Marks = data[3]
                                                                                            Term1_Accountancy_Marks = data[4]
                                                                                            Term1_Economics_Marks = data[5]
                                                                                            Term1_Business_Studies_Marks = data[6]
                                                                                            Term1_Physical_Education_Marks = data[7]
                                                                                            Term2_English_Marks = data[8]
                                                                                            Term2_Mathematics_Marks = data[9]
                                                                                            Term2_Accountancy_Marks = data[10]
                                                                                            Term2_Economics_Marks = data[11]
                                                                                            Term2_Business_Studies_Marks = data[12]
                                                                                            Term2_Physical_Education_Marks = data[13]
                                                                                            Term3_English_Marks = data[14]
                                                                                            Term3_Mathematics_Marks = data[15]
                                                                                            Term3_Accountancy_Marks = data[16]
                                                                                            Term3_Economics_Marks = data[17]
                                                                                            Term3_Business_Studies_Marks = data[18]
                                                                                            Term3_Physical_Education_Marks = data[19]

                                                                                            subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                            subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                            subject3 = [int(Term1_Accountancy_Marks), int(Term2_Accountancy_Marks), int(Term3_Accountancy_Marks)]
                                                                                            subject4 = [int(Term1_Economics_Marks), int(Term2_Economics_Marks), int(Term3_Economics_Marks)]
                                                                                            subject5 = [int(Term1_Business_Studies_Marks), int(Term2_Business_Studies_Marks), int(Term3_Business_Studies_Marks)]
                                                                                            subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                            t = [1,2,3]
                                                                                            pl.xlabel("Term")
                                                                                            pl.ylabel("Grade")
                                                                                            pl.title("Progress Report")
                                                                                            pl.ylim(1, 150)
                                                                                            pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                            pl.xticks([1, 2, 3])
                                                                                            pl.plot(t, subject1, marker = "d", label = "English")
                                                                                            pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                            pl.plot(t, subject3, marker = "d", label = "Accountancy")
                                                                                            pl.plot(t, subject4, marker = "d", label = "Economics")
                                                                                            pl.plot(t, subject5, marker = "d", label = "Business Studies")
                                                                                            pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                            pl.legend()
                                                                                            fig1 = pl.gcf()
                                                                                            pl.show()
                                                                                            pl.draw()
                                                                                            fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_11/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                    except Exception as es:
                                                                                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                else:
                                                                                    if self.var_class_section.get() == "Class - XI -- Section - D":
                                                                                        try:
                                                                                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                                messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                            else:
                                                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                                my_cursor = conn.cursor()
                                                                                                sql = "SELECT * FROM PROGRESS_REPORT_CLASS_11_D WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                                my_cursor.execute(sql)
                                                                                                data = my_cursor.fetchone()
                                                                                                if len(data) == 0:
                                                                                                    messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                                elif len(data) != 0:
                                                                                                    conn.commit()
                                                                                                conn.close()
                                                                                                Term1_English_Marks = data[2]
                                                                                                Term1_Mathematics_Marks = data[3]
                                                                                                Term1_Accountancy_Marks = data[4]
                                                                                                Term1_Economics_Marks = data[5]
                                                                                                Term1_Business_Studies_Marks = data[6]
                                                                                                Term1_COmputer_Science_Marks = data[7]
                                                                                                Term2_English_Marks = data[8]
                                                                                                Term2_Mathematics_Marks = data[9]
                                                                                                Term2_Accountancy_Marks = data[10]
                                                                                                Term2_Economics_Marks = data[11]
                                                                                                Term2_Business_Studies_Marks = data[12]
                                                                                                Term2_COmputer_Science_Marks = data[13]
                                                                                                Term3_English_Marks = data[14]
                                                                                                Term3_Mathematics_Marks = data[15]
                                                                                                Term3_Accountancy_Marks = data[16]
                                                                                                Term3_Economics_Marks = data[17]
                                                                                                Term3_Business_Studies_Marks = data[18]
                                                                                                Term3_COmputer_Science_Marks = data[19]

                                                                                                subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                                subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                                subject3 = [int(Term1_Accountancy_Marks), int(Term2_Accountancy_Marks), int(Term3_Accountancy_Marks)]
                                                                                                subject4 = [int(Term1_Economics_Marks), int(Term2_Economics_Marks), int(Term3_Economics_Marks)]
                                                                                                subject5 = [int(Term1_Business_Studies_Marks), int(Term2_Business_Studies_Marks), int(Term3_Business_Studies_Marks)]
                                                                                                subject6 = [int(Term1_COmputer_Science_Marks), int(Term2_COmputer_Science_Marks), int(Term3_COmputer_Science_Marks)]

                                                                                                t = [1,2,3]
                                                                                                pl.xlabel("Term")
                                                                                                pl.ylabel("Grade")
                                                                                                pl.title("Progress Report")
                                                                                                pl.ylim(1, 150)
                                                                                                pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                                pl.xticks([1, 2, 3])
                                                                                                pl.plot(t, subject1, marker = "d", label = "English")
                                                                                                pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                                pl.plot(t, subject3, marker = "d", label = "Accountancy")
                                                                                                pl.plot(t, subject4, marker = "d", label = "Economics")
                                                                                                pl.plot(t, subject5, marker = "d", label = "Business Studies")
                                                                                                pl.plot(t, subject6, marker = "d", label = "Computer Science")
                                                                                                pl.legend()
                                                                                                fig1 = pl.gcf()
                                                                                                pl.show()
                                                                                                pl.draw()
                                                                                                fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_11/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                        except Exception as es:
                                                                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                    else:
                                                                                        if self.var_class_section.get() == "Class - XII -- Section - A":
                                                                                            try:
                                                                                                if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                                    messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                                else:
                                                                                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                                    my_cursor = conn.cursor()
                                                                                                    sql = "SELECT * FROM PROGRESS_REPORT_CLASS_12_A WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                                    my_cursor.execute(sql)
                                                                                                    data = my_cursor.fetchone()
                                                                                                    if len(data) == 0:
                                                                                                        messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                                    elif len(data) != 0:
                                                                                                        conn.commit()
                                                                                                    conn.close()
                                                                                                    Term1_English_Marks = data[2]
                                                                                                    Term1_Mathematics_Marks = data[3]
                                                                                                    Term1_Physics_Marks = data[4]
                                                                                                    Term1_Chemistry_Marks = data[5]
                                                                                                    Term1_Computer_Science_Marks = data[6]
                                                                                                    Term1_Physical_Education_Marks = data[7]
                                                                                                    Term2_English_Marks = data[8]
                                                                                                    Term2_Mathematics_Marks = data[9]
                                                                                                    Term2_Physics_Marks = data[10]
                                                                                                    Term2_Chemistry_Marks = data[11]
                                                                                                    Term2_Computer_Science_Marks = data[12]
                                                                                                    Term2_Physical_Education_Marks = data[13]
                                                                                                    Term3_English_Marks = data[14]
                                                                                                    Term3_Mathematics_Marks = data[15]
                                                                                                    Term3_Physics_Marks = data[16]
                                                                                                    Term3_Chemistry_Marks = data[17]
                                                                                                    Term3_Computer_Science_Marks = data[18]
                                                                                                    Term3_Physical_Education_Marks = data[19]

                                                                                                    subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                                    subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                                    subject3 = [int(Term1_Physics_Marks), int(Term2_Physics_Marks), int(Term3_Physics_Marks)]
                                                                                                    subject4 = [int(Term1_Chemistry_Marks), int(Term2_Chemistry_Marks), int(Term3_Chemistry_Marks)]
                                                                                                    subject5 = [int(Term1_Computer_Science_Marks), int(Term2_Computer_Science_Marks), int(Term3_Computer_Science_Marks)]
                                                                                                    subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                                    t = [1,2,3]
                                                                                                    pl.xlabel("Term")
                                                                                                    pl.ylabel("Grade")
                                                                                                    pl.title("Progress Report")
                                                                                                    pl.ylim(1, 150)
                                                                                                    pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                                    pl.xticks([1, 2, 3])
                                                                                                    pl.plot(t, subject1, marker = "d", label = "English")
                                                                                                    pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                                    pl.plot(t, subject3, marker = "d", label = "Physics")
                                                                                                    pl.plot(t, subject4, marker = "d", label = "Chemistry")
                                                                                                    pl.plot(t, subject5, marker = "d", label = "Computer Science")
                                                                                                    pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                                    pl.legend()
                                                                                                    fig1 = pl.gcf()
                                                                                                    pl.show()
                                                                                                    pl.draw()
                                                                                                    fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_12/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                            except Exception as es:
                                                                                                messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                        else:
                                                                                            if self.var_class_section.get() == "Class - XII -- Section - B":
                                                                                                try:
                                                                                                    if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                                        messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                                    else:
                                                                                                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                                        my_cursor = conn.cursor()
                                                                                                        sql = "SELECT * FROM PROGRESS_REPORT_CLASS_12_B WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                                        my_cursor.execute(sql)
                                                                                                        data = my_cursor.fetchone()
                                                                                                        if len(data) == 0:
                                                                                                            messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                                        elif len(data) != 0:
                                                                                                            conn.commit()
                                                                                                        conn.close()
                                                                                                        Term1_English_Marks = data[2]
                                                                                                        Term1_Mathematics_Marks = data[3]
                                                                                                        Term1_Physics_Marks = data[4]
                                                                                                        Term1_Chemistry_Marks = data[5]
                                                                                                        Term1_Biology_Marks = data[6]
                                                                                                        Term1_Physical_Education_Marks = data[7]
                                                                                                        Term2_English_Marks = data[8]
                                                                                                        Term2_Mathematics_Marks = data[9]
                                                                                                        Term2_Physics_Marks = data[10]
                                                                                                        Term2_Chemistry_Marks = data[11]
                                                                                                        Term2_Biology_Marks = data[12]
                                                                                                        Term2_Physical_Education_Marks = data[13]
                                                                                                        Term3_English_Marks = data[14]
                                                                                                        Term3_Mathematics_Marks = data[15]
                                                                                                        Term3_Physics_Marks = data[16]
                                                                                                        Term3_Chemistry_Marks = data[17]
                                                                                                        Term3_Biology_Marks = data[18]
                                                                                                        Term3_Physical_Education_Marks = data[19]

                                                                                                        subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                                        subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                                        subject3 = [int(Term1_Physics_Marks), int(Term2_Physics_Marks), int(Term3_Physics_Marks)]
                                                                                                        subject4 = [int(Term1_Chemistry_Marks), int(Term2_Chemistry_Marks), int(Term3_Chemistry_Marks)]
                                                                                                        subject5 = [int(Term1_Biology_Marks), int(Term2_Biology_Marks), int(Term3_Biology_Marks)]
                                                                                                        subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                                        t = [1,2,3]
                                                                                                        pl.xlabel("Term")
                                                                                                        pl.ylabel("Grade")
                                                                                                        pl.title("Progress Report")
                                                                                                        pl.ylim(1, 150)
                                                                                                        pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                                        pl.xticks([1, 2, 3])
                                                                                                        pl.plot(t, subject1, marker = "d", label = "English")
                                                                                                        pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                                        pl.plot(t, subject3, marker = "d", label = "Physics")
                                                                                                        pl.plot(t, subject4, marker = "d", label = "Chemistry")
                                                                                                        pl.plot(t, subject5, marker = "d", label = "Biology")
                                                                                                        pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                                        pl.legend()
                                                                                                        fig1 = pl.gcf()
                                                                                                        pl.show()
                                                                                                        pl.draw()
                                                                                                        fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_12/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                                except Exception as es:
                                                                                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                            else:
                                                                                                if self.var_class_section.get() == "Class - XII -- Section - C":
                                                                                                    try:
                                                                                                        if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                                            messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                                        else:
                                                                                                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                                            my_cursor = conn.cursor()
                                                                                                            sql = "SELECT * FROM PROGRESS_REPORT_CLASS_12_C WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                                            my_cursor.execute(sql)
                                                                                                            data = my_cursor.fetchone()
                                                                                                            if len(data) == 0:
                                                                                                                messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                                            elif len(data) != 0:
                                                                                                                conn.commit()
                                                                                                            conn.close()
                                                                                                            Term1_English_Marks = data[2]
                                                                                                            Term1_Mathematics_Marks = data[3]
                                                                                                            Term1_Accountancy_Marks = data[4]
                                                                                                            Term1_Economics_Marks = data[5]
                                                                                                            Term1_Business_Studies_Marks = data[6]
                                                                                                            Term1_Physical_Education_Marks = data[7]
                                                                                                            Term2_English_Marks = data[8]
                                                                                                            Term2_Mathematics_Marks = data[9]
                                                                                                            Term2_Accountancy_Marks = data[10]
                                                                                                            Term2_Economics_Marks = data[11]
                                                                                                            Term2_Business_Studies_Marks = data[12]
                                                                                                            Term2_Physical_Education_Marks = data[13]
                                                                                                            Term3_English_Marks = data[14]
                                                                                                            Term3_Mathematics_Marks = data[15]
                                                                                                            Term3_Accountancy_Marks = data[16]
                                                                                                            Term3_Economics_Marks = data[17]
                                                                                                            Term3_Business_Studies_Marks = data[18]
                                                                                                            Term3_Physical_Education_Marks = data[19]

                                                                                                            subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                                            subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                                            subject3 = [int(Term1_Accountancy_Marks), int(Term2_Accountancy_Marks), int(Term3_Accountancy_Marks)]
                                                                                                            subject4 = [int(Term1_Economics_Marks), int(Term2_Economics_Marks), int(Term3_Economics_Marks)]
                                                                                                            subject5 = [int(Term1_Business_Studies_Marks), int(Term2_Business_Studies_Marks), int(Term3_Business_Studies_Marks)]
                                                                                                            subject6 = [int(Term1_Physical_Education_Marks), int(Term2_Physical_Education_Marks), int(Term3_Physical_Education_Marks)]

                                                                                                            t = [1,2,3]
                                                                                                            pl.xlabel("Term")
                                                                                                            pl.ylabel("Grade")
                                                                                                            pl.title("Progress Report")
                                                                                                            pl.ylim(1, 150)
                                                                                                            pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                                            pl.xticks([1, 2, 3])
                                                                                                            pl.plot(t, subject1, marker = "d", label = "English")
                                                                                                            pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                                            pl.plot(t, subject3, marker = "d", label = "Accountancy")
                                                                                                            pl.plot(t, subject4, marker = "d", label = "Economics")
                                                                                                            pl.plot(t, subject5, marker = "d", label = "Business Studies")
                                                                                                            pl.plot(t, subject6, marker = "d", label = "Physical Education")
                                                                                                            pl.legend()
                                                                                                            fig1 = pl.gcf()
                                                                                                            pl.show()
                                                                                                            pl.draw()
                                                                                                            fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_12/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                                    except Exception as es:
                                                                                                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                                else:
                                                                                                    if self.var_class_section.get() == "Class - XII -- Section - D":
                                                                                                        try:
                                                                                                            if self.var_term1_subject1.get() == "" or self.var_term1_subject2.get() == "" or self.var_term1_subject3.get() == "" or self.var_term1_subject4.get() == "" or self.var_term1_subject5.get() == "" or self.var_term1_subject6.get() == "" or self.var_term2_subject1.get() == "" or self.var_term2_subject2.get() == "" or self.var_term2_subject3.get() == "" or self.var_term2_subject4.get() == "" or self.var_term2_subject5.get() == "" or self.var_term2_subject6.get() == "":
                                                                                                                messagebox.showerror("Error", f"Please Write Marks Of Student - {self.var_name.get()}")
                                                                                                            else:
                                                                                                                conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                                                                                                my_cursor = conn.cursor()
                                                                                                                sql = "SELECT * FROM PROGRESS_REPORT_CLASS_12_D WHERE Admission_ID='%s' AND Student_Name='%s'"%(self.var_admission_id.get(), self.var_name.get())
                                                                                                                my_cursor.execute(sql)
                                                                                                                data = my_cursor.fetchone()
                                                                                                                if len(data) == 0:
                                                                                                                    messagebox.showerror("Error", "Please Save the Record FIrst......")
                                                                                                                elif len(data) != 0:
                                                                                                                    conn.commit()
                                                                                                                conn.close()
                                                                                                                Term1_English_Marks = data[2]
                                                                                                                Term1_Mathematics_Marks = data[3]
                                                                                                                Term1_Accountancy_Marks = data[4]
                                                                                                                Term1_Economics_Marks = data[5]
                                                                                                                Term1_Business_Studies_Marks = data[6]
                                                                                                                Term1_COmputer_Science_Marks = data[7]
                                                                                                                Term2_English_Marks = data[8]
                                                                                                                Term2_Mathematics_Marks = data[9]
                                                                                                                Term2_Accountancy_Marks = data[10]
                                                                                                                Term2_Economics_Marks = data[11]
                                                                                                                Term2_Business_Studies_Marks = data[12]
                                                                                                                Term2_COmputer_Science_Marks = data[13]
                                                                                                                Term3_English_Marks = data[14]
                                                                                                                Term3_Mathematics_Marks = data[15]
                                                                                                                Term3_Accountancy_Marks = data[16]
                                                                                                                Term3_Economics_Marks = data[17]
                                                                                                                Term3_Business_Studies_Marks = data[18]
                                                                                                                Term3_COmputer_Science_Marks = data[19]

                                                                                                                subject1 = [int(Term1_English_Marks), int(Term2_English_Marks), int(Term3_English_Marks)]
                                                                                                                subject2 = [int(Term1_Mathematics_Marks), int(Term2_Mathematics_Marks), int(Term3_Mathematics_Marks)]
                                                                                                                subject3 = [int(Term1_Accountancy_Marks), int(Term2_Accountancy_Marks), int(Term3_Accountancy_Marks)]
                                                                                                                subject4 = [int(Term1_Economics_Marks), int(Term2_Economics_Marks), int(Term3_Economics_Marks)]
                                                                                                                subject5 = [int(Term1_Business_Studies_Marks), int(Term2_Business_Studies_Marks), int(Term3_Business_Studies_Marks)]
                                                                                                                subject6 = [int(Term1_COmputer_Science_Marks), int(Term2_COmputer_Science_Marks), int(Term3_COmputer_Science_Marks)]

                                                                                                                t = [1,2,3]
                                                                                                                pl.xlabel("Term")
                                                                                                                pl.ylabel("Grade")
                                                                                                                pl.title("Progress Report")
                                                                                                                pl.ylim(1, 150)
                                                                                                                pl.yticks([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])
                                                                                                                pl.xticks([1, 2, 3])
                                                                                                                pl.plot(t, subject1, marker = "d", label = "English")
                                                                                                                pl.plot(t, subject2, marker = "d", label = "Mathematics")
                                                                                                                pl.plot(t, subject3, marker = "d", label = "Accountancy")
                                                                                                                pl.plot(t, subject4, marker = "d", label = "Economics")
                                                                                                                pl.plot(t, subject5, marker = "d", label = "Business Studies")
                                                                                                                pl.plot(t, subject6, marker = "d", label = "Computer Science")
                                                                                                                pl.legend()
                                                                                                                fig1 = pl.gcf()
                                                                                                                pl.show()
                                                                                                                pl.draw()
                                                                                                                fig1.savefig(f'C:/UTSAV/Python-MySQL/School Management System/Progress_Report_Record/Class_12/{self.var_name.get()}_{self.var_class_section.get()}.pdf', dpi=100)
                                                                                                        except Exception as es:
                                                                                                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_progress)
                                                                                                    else:
                                                                                                        messagebox.showerror("Error", "Error.....")

                def reset_data(self):
                    self.var_admission_id.set("")
                    self.var_name.set("")
                    self.var_class_section.set("Select Class - Section")
                    self.var_term1_subject1_name.set("")
                    self.var_term1_subject1.set("")
                    self.var_term1_subject2_name.set("")
                    self.var_term1_subject2.set("")
                    self.var_term1_subject3_name.set("")
                    self.var_term1_subject3.set("")
                    self.var_term1_subject4_name.set("")
                    self.var_term1_subject4.set("")
                    self.var_term1_subject5_name.set("")
                    self.var_term1_subject5.set("")
                    self.var_term1_subject6_name.set("")
                    self.var_term1_subject6.set("")
                    self.var_term1_subject7_name.set("")
                    self.var_term1_subject7.set("")
                    self.var_term2_subject1_name.set("")
                    self.var_term2_subject1.set("")
                    self.var_term2_subject2_name.set("")
                    self.var_term2_subject2.set("")
                    self.var_term2_subject3_name.set("")
                    self.var_term2_subject3.set("")
                    self.var_term2_subject4_name.set("")
                    self.var_term2_subject4.set("")
                    self.var_term2_subject5_name.set("")
                    self.var_term2_subject5.set("")
                    self.var_term2_subject6_name.set("")
                    self.var_term2_subject6.set("")
                    self.var_term2_subject7_name.set("")
                    self.var_term2_subject7.set("")
                    self.var_term3_subject1_name.set("")
                    self.var_term3_subject1.set("")
                    self.var_term3_subject2_name.set("")
                    self.var_term3_subject2.set("")
                    self.var_term3_subject3_name.set("")
                    self.var_term3_subject3.set("")
                    self.var_term3_subject4_name.set("")
                    self.var_term3_subject4.set("")
                    self.var_term3_subject5_name.set("")
                    self.var_term3_subject5.set("")
                    self.var_term3_subject6_name.set("")
                    self.var_term3_subject6.set("")
                    self.var_term3_subject7_name.set("")
                    self.var_term3_subject7.set("")

            if __name__ == "__main__":
                root_progress = Toplevel()
                obj_progress = PROGRESS(root_progress)
                root_progress.mainloop()

        def achievement_record(self):
            class Achievement_Record:

                def __init__(self,root):
                    self.root = root
                    self.root.geometry("1350x700+0+0")
                    self.root.title("ACHIEVEMENT MANAGEMENT SYSTEM")

                    # img
                    img = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\scenery_4.jpg")
                    img = img.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg = ImageTk.PhotoImage(img)
                    self.btn = Button(self.root, command = self.open_img, image = self.photoimg, cursor="hand2")
                    self.btn.place(x = 0, y = 0, width = 1380, height = 710)

                    title = Label(self.root, text = " ACHIEVEMENT  RECORD  MANAGEMENT  SYSTEM ", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED)
                    title.place(x = 160, y = 10)

                    # Academeic Excellence
                    academic = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\ae2.jpg")
                    academic = academic.resize((248,248), Image.ANTIALIAS)
                    self.photoacademic = ImageTk.PhotoImage(academic)
                    self.btn_1 = Button(self.root, command = self.open_img_1, image = self.photoacademic)
                    self.btn_1.place(x = 125, y = 120, width = 250, height = 250)

                    title_1 = Button(self.root, text = "Academic\nExcellence", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.academic_excellence)
                    title_1.place(x = 140, y = 390)

                    # Teamwork Certificate
                    teamwork = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\tc4.jpg")
                    teamwork = teamwork.resize((278,248), Image.ANTIALIAS)
                    self.phototeamwork = ImageTk.PhotoImage(teamwork)
                    self.btn_2 = Button(self.root, command = self.open_img_2, image = self.phototeamwork)
                    self.btn_2.place(x = 410, y = 120, width = 280, height = 250)

                    title_2 = Button(self.root, text = "Teamwork\nCertificate", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.teamwork_certificate)
                    title_2.place(x = 435, y = 390)

                    # Participating Certificate
                    participating = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\pc4.jpg")
                    participating = participating.resize((278,248), Image.ANTIALIAS)
                    self.photoparticipating = ImageTk.PhotoImage(participating)
                    self.btn_3 = Button(self.root, command = self.open_img_3, image = self.photoparticipating)
                    self.btn_3.place(x = 715, y = 120, width = 285, height = 250)

                    title_3 = Button(self.root, text = "Participating \nCertificate", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.participating_certificate)
                    title_3.place(x = 715, y = 390)

                    # Student Of The Year
                    student = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\sy2.jpg")
                    student = student.resize((248,248), Image.ANTIALIAS)
                    self.photostudent = ImageTk.PhotoImage(student)
                    self.btn_4 = Button(self.root, command = self.open_img_4, image = self.photostudent)
                    self.btn_4.place(x = 1025, y = 120, width = 250, height = 250)

                    title_4 = Button(self.root, text = "Student Of \nThe Year", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED, cursor = "hand2", command = self.student_of_the_year)
                    title_4.place(x = 1025, y = 390)

                # Academic Excellence
                def academic_excellence(self):
                    class excellence:

                        def __init__(self, root_1):
                            self.root_1 = root_1
                            self.root_1.title("ACADEMIC EXCELLENCE SYSTEM")
                            self.root_1.geometry("1100x640+150+40")
                            self.root_1.config(bg = "Darkolivegreen")
                            self.root_1.resizable(FALSE, FALSE)
                            self.root_1.focus_force()
                            self.root_1.grab_set()

                            title = Label(self.root_1, text = " ACADEMIC EXCELLENCE SYSTEM ", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED)
                            title.place(x = 5, y = 5, width = 1090)

                            # Variables
                            self.var_student_id = StringVar()
                            self.var_name = StringVar()
                            self.var_teacher = StringVar()
                            self.var_principle = StringVar()
                            self.var_cls = StringVar()
                            self.var_class_position = StringVar()
                            self.var_percentage = StringVar()
                            self.var_year = StringVar()

                            # 5th
                            img_5 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\ae1.jpg")
                            img_5 = img_5.resize((235,235), Image.ANTIALIAS)
                            photoimg_5 = ImageTk.PhotoImage(img_5)

                            btn_5 = Label(self.root_1, image = photoimg_5)
                            btn_5.place(x = 860, y = 95, width = 235, height = 240)

                            # 6th
                            img_6 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\ae3.jpg")
                            img_6 = img_6.resize((235,235), Image.ANTIALIAS)
                            photoimg_6 = ImageTk.PhotoImage(img_6)

                            btn_6 = Label(self.root_1, image = photoimg_6)
                            btn_6.place(x = 860, y = 360, width = 235, height = 240)

                            # Current Academic Label Frame Information
                            acd_lbl_info_frame = LabelFrame(self.root_1, bd = 4, relief = SUNKEN, padx = 2, text = "Academic Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            acd_lbl_info_frame.place(x = 5, y = 95, width = 845, height = 240)

                            # Academic Frame Information
                            acd_frame = Frame(self.root_1, bd = 4, relief = SUNKEN, bg = "White")
                            acd_frame.place(x = 170, y = 360, width = 680, height = 260)
                            excellence_title = Label(acd_frame, text = "Academic Excellence", font = "arial 15 bold", bd = 7, relief = GROOVE).pack(fill = X)
                            scroll_y = Scrollbar(acd_frame, orient = VERTICAL)
                            self.txtarea = Text(acd_frame, yscrollcommand = scroll_y.set)
                            scroll_y.pack(side = RIGHT, fill = Y)
                            scroll_y.config(command = self.txtarea.yview)
                            self.txtarea.pack(fill = BOTH, expand = 1)

                            # Academic Label Frame Information
                            ## Student ID
                            lbl_student_id = Label(acd_lbl_info_frame, text = "Student ID :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_id.place(x = 0, y = 0)
                            txt_student_id = ttk.Entry(acd_lbl_info_frame, textvariable  = self.var_student_id, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_id.place(x = 150, y = 0)

                            ## Student Name
                            lbl_student_name = Label(acd_lbl_info_frame, text = "Student Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_name.place(x = 0, y = 50)
                            txt_student_name = ttk.Entry(acd_lbl_info_frame, textvariable  = self.var_name, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_name.place(x = 150, y = 50)

                            ## Teacher Name
                            lbl_teacher_name = Label(acd_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_teacher_name.place(x = 0, y = 100)
                            txt_teacher_name = ttk.Entry(acd_lbl_info_frame, textvariable  = self.var_teacher, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_teacher_name.place(x = 150, y = 100)

                            ## Principle Name
                            lbl_principle_name = Label(acd_lbl_info_frame, text = "Principle Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_principle_name.place(x = 0, y = 150)
                            txt_principle_name = ttk.Entry(acd_lbl_info_frame, textvariable  = self.var_principle, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_principle_name.place(x = 150, y = 150)

                            ## cls
                            lbl_cls = Label(acd_lbl_info_frame, text = "Class :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_cls.place(x = 400, y = 0)

                            com_cls = ttk.Combobox(acd_lbl_info_frame, textvariable  = self.var_cls, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_cls["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                            com_cls.current(0)
                            com_cls.place(x = 550, y = 0)

                            ## Class Position
                            lbl_class_position = Label(acd_lbl_info_frame, text = "Class Position :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_class_position.place(x = 400, y = 50)

                            com_class_position = ttk.Combobox(acd_lbl_info_frame, textvariable  = self.var_class_position, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_class_position["values"] = ("Select Position", "Ist Position", "IInd Position", "IIIrd Position")
                            com_class_position.current(0)
                            com_class_position.place(x = 550, y = 50)

                            ## Percentage
                            lbl_percentage = Label(acd_lbl_info_frame, text = "Percentage :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_percentage.place(x = 400, y = 100)
                            txt_percentage = ttk.Entry(acd_lbl_info_frame, textvariable  = self.var_percentage, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_percentage.place(x = 550, y = 100)

                            ## Year
                            current_year = Label(acd_lbl_info_frame, text = "Year :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            current_year.place(x = 400, y = 150)
                            com_txt_current_year = ttk.Combobox(acd_lbl_info_frame, textvariable  = self.var_year, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_txt_current_year["value"] = ("Select Year", "2010-2011", "2011-2012", "2012-2013" ,"2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019" ,"2019-2020", "2020-2021", "2021-2022", "2022-2023", "2023-2024", "2024-2025", "2025-2026", "2026-2027", "2027-2028", "2028-2029", "2029-2030", "2030-2031", "2031-2032", "2032-2033", "2033-2034", "2034-2035", "2035-2036", "2036-2037", "2037-2038", "2038-2039", "2039-2040")
                            com_txt_current_year.current(0)
                            com_txt_current_year.place(x = 550, y = 150)

                            # Bottom Left Frame
                            Bottom_Left_Frame = Frame(self.root_1, bd=2, relief=RIDGE, bg="White")
                            Bottom_Left_Frame.place(x = 5, y = 350, width = 150, height =275)

                            # Button Frame
                            btn_frame = Frame(Bottom_Left_Frame, bd=2, relief=RIDGE, bg="Black")
                            btn_frame.place(x = 5, y = 5, width = 135, height = 260)

                            btn_Add = Button(btn_frame, text = "Add Data", command = self.add_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Add.grid(row = 0, column = 0, padx = 1)

                            btn_Save = Button(btn_frame, text = "Save Data", command = self.save_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Save.grid(row = 1, column = 0, padx = 1)

                            btn_Display = Button(btn_frame, text = "Display\nData", command = self.welcome_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Display.grid(row = 2, column = 0, padx = 1)

                            btn_Reset = Button(btn_frame, text = "Reset\nData", command = self.reset_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Reset.grid(row = 3, column = 0, padx = 1)

                            btn_Close = Button(btn_frame, text = "Close", command = self.root_1.destroy, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Close.grid(row = 4, column = 0, padx = 1)
                            
                            self.reset_data()
                            root_1.mainloop()

                        # Add Data
                        def add_data(self):
                            if (self.var_student_id.get() == "" or self.var_name.get() == "" or self.var_teacher.get() == "" or 
                                    self.var_principle.get() == "" or self.var_cls.get() == "" or self.var_class_position.get() == "" or 
                                        self.var_percentage.get() == "" or self.var_year.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("INSERT INTO ACADEMIC_EXCELLENCE VALUES(%s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                    self.var_student_id.get(),
                                                                                                                                    self.var_name.get(),
                                                                                                                                    self.var_teacher.get(),
                                                                                                                                    self.var_principle.get(),
                                                                                                                                    self.var_cls.get(),
                                                                                                                                    self.var_class_position.get(),
                                                                                                                                    self.var_percentage.get(),
                                                                                                                                    self.var_year.get()
                                                                                                                                    ))
                                    conn.commit()
                                    self.reset_data()
                                    conn.close()
                                    messagebox.showinfo("Success", "Academic Record Added Succesfully!", parent = self.root_1)
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_1)

                        # Welcome Data
                        def welcome_data(self):
                            self.txtarea.delete('1.0', END)
                            self.txtarea.insert(END, "\t\t\tACADEMIC EXCELLENCE")
                            self.txtarea.insert(END, "\n\t=========================================================================")
                            self.txtarea.insert(END, f"\n\tStudent ID: {self.var_student_id.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tStudent Name: {self.var_name.get()}")
                            self.txtarea.insert(END, f"\n\tTeacher Name: {self.var_teacher.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tPrinciple Name: {self.var_principle.get()}")
                            self.txtarea.insert(END, f"\n\tClass: {self.var_cls.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tClass Position: {self.var_class_position.get()}")
                            self.txtarea.insert(END, f"\n\tPercentage: {self.var_percentage.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tYear: {self.var_year.get()}")
                            self.txtarea.insert(END, "\n\t=========================================================================")

                        # Save Data
                        def save_data(self):
                            op = messagebox.askyesno("Save Data", "Do You Want to Save the Data?")
                            if op>0:
                                self.excellence_data = self.txtarea.get('1.0', END)
                                f1 = open("C:/UTSAV/Python-MySQL/School Management System/achievement_record/academic_excellence/"+str(self.var_student_id.get())+".txt","w")
                                f1.write(self.excellence_data)
                                f1.close()
                                messagebox.showinfo("Saved", f"Achievement Record\nStudent ID: {self.var_student_id.get()} Saved Successfully.")
                            else:
                                return

                        # Reset Data
                        def reset_data(self):
                            self.var_student_id.set("")
                            self.var_name.set("")
                            self.var_teacher.set("")
                            self.var_principle.set("")
                            self.var_cls.set("Select Class")
                            self.var_class_position.set("Select Class Position")
                            self.var_percentage.set("")
                            self.var_year.set("Select Year")
                            self.welcome_data()

                        # open image 5
                        def open_img_5(self):
                            fln_5 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_5 = Image.open(fln_5)
                            img_browse_5 = img_5.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_5 = ImageTk.PhotoImage(img_browse_5)
                            self.btn_5.config(image = self.photoimg_browse_5)

                        # open image 6
                        def open_img_6(self):
                            fln_6 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_6 = Image.open(fln_6)
                            img_browse_6 = img_6.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_6 = ImageTk.PhotoImage(img_browse_6)
                            self.btn_6.config(image = self.photoimg_browse_6)

                    if __name__ == "__main__":
                        root_1 = Toplevel()
                        obj_1 = excellence(root_1)
                        root_1.mainloop()

                # Participating Certificate
                def participating_certificate(self):
                    class participating:

                        def __init__(self, root_2):
                            self.root_2 = root_2
                            self.root_2.title("PARTICIPATING CERTIFICATE SYSTEM")
                            self.root_2.geometry("1100x640+150+40")
                            self.root_2.config(bg = "Darkolivegreen")
                            self.root_2.resizable(FALSE, FALSE)
                            self.root_2.focus_force()
                            self.root_2.grab_set()

                            title = Label(self.root_2, text = " PARTICIPATING CERTIFICATE SYSTEM ", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED)
                            title.place(x = 5, y = 5, width = 1090)

                            # Variables
                            self.var_student_id = StringVar()
                            self.var_name = StringVar()
                            self.var_teacher = StringVar()
                            self.var_cls = StringVar()
                            self.var_class_position = StringVar()
                            self.var_competition = StringVar()
                            self.var_year = StringVar()

                            # 7th
                            img_7 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\pc1.jpg")
                            img_7 = img_7.resize((235,235), Image.ANTIALIAS)
                            photoimg_7 = ImageTk.PhotoImage(img_7)

                            btn_7 = Label(self.root_2, image = photoimg_7)
                            btn_7.place(x = 860, y = 95, width = 235, height = 240)

                            # 8th
                            img_8 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\pc3.jpg")
                            img_8 = img_8.resize((235,235), Image.ANTIALIAS)
                            photoimg_8 = ImageTk.PhotoImage(img_8)

                            btn_8 = Label(self.root_2, image = photoimg_8)
                            btn_8.place(x = 860, y = 360, width = 235, height = 240)

                            # Current participating Label Frame Information
                            part_lbl_info_frame = LabelFrame(self.root_2, bd = 4, relief = SUNKEN, padx = 2, text = "Participating Information", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            part_lbl_info_frame.place(x = 5, y = 95, width = 845, height = 240)

                            # Participating Frame Information
                            part_frame = Frame(self.root_2, bd = 4, relief = SUNKEN, bg = "White")
                            part_frame.place(x = 170, y = 360, width = 680, height = 260)
                            certificate_title = Label(part_frame, text = "Participating Certificate", font = "arial 15 bold", bd = 7, relief = GROOVE).pack(fill = X)
                            scroll_y = Scrollbar(part_frame, orient = VERTICAL)
                            self.txtarea = Text(part_frame, yscrollcommand = scroll_y.set)
                            scroll_y.pack(side = RIGHT, fill = Y)
                            scroll_y.config(command = self.txtarea.yview)
                            self.txtarea.pack(fill = BOTH, expand = 1)

                            # Academic Label Frame Information
                            ## Student ID
                            lbl_student_id = Label(part_lbl_info_frame, text = "Student ID :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_id.place(x = 0, y = 0)
                            txt_student_id = ttk.Entry(part_lbl_info_frame, textvariable  = self.var_student_id, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_id.place(x = 150, y = 0)

                            ## Student Name
                            lbl_student_name = Label(part_lbl_info_frame, text = "Student Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_name.place(x = 0, y = 50)
                            txt_student_name = ttk.Entry(part_lbl_info_frame, textvariable  = self.var_name, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_name.place(x = 150, y = 50)

                            ## Teacher Name
                            lbl_teacher_name = Label(part_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_teacher_name.place(x = 0, y = 100)
                            txt_teacher_name = ttk.Entry(part_lbl_info_frame, textvariable  = self.var_teacher, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_teacher_name.place(x = 150, y = 100)

                            ## cls
                            lbl_cls = Label(part_lbl_info_frame, text = "Class :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_cls.place(x = 0, y = 150)

                            com_cls = ttk.Combobox(part_lbl_info_frame, textvariable  = self.var_cls, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_cls["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                            com_cls.current(0)
                            com_cls.place(x = 150, y = 150)

                            ## Class Position
                            lbl_class_position = Label(part_lbl_info_frame, text = "Class Position :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_class_position.place(x = 400, y = 0)

                            com_class_position = ttk.Combobox(part_lbl_info_frame, textvariable  = self.var_class_position, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_class_position["values"] = ("Select Position", "Ist Position", "IInd Position", "IIIrd Position", "NONE")
                            com_class_position.current(0)
                            com_class_position.place(x = 550, y = 0)

                            ## Competition
                            lbl_competition = Label(part_lbl_info_frame, text = "Competition :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_competition.place(x = 400, y = 50)

                            com_competition = ttk.Combobox(part_lbl_info_frame, textvariable  = self.var_competition, font = ("Times New Roman", 15, "bold"), width = 20)
                            com_competition["values"] = ("Select Competiton", "Debate", "Story Telling", "Conflict resolution", "Decision-making", "Problem-solving")
                            com_competition.current(0)
                            com_competition.place(x = 550, y = 50)

                            ## Year
                            current_year = Label(part_lbl_info_frame, text = "Year :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            current_year.place(x = 400, y = 100)
                            com_txt_current_year = ttk.Combobox(part_lbl_info_frame, textvariable  = self.var_year, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_txt_current_year["value"] = ("Select Year", "2010-2011", "2011-2012", "2012-2013" ,"2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019" ,"2019-2020", "2020-2021", "2021-2022", "2022-2023", "2023-2024", "2024-2025", "2025-2026", "2026-2027", "2027-2028", "2028-2029", "2029-2030", "2030-2031", "2031-2032", "2032-2033", "2033-2034", "2034-2035", "2035-2036", "2036-2037", "2037-2038", "2038-2039", "2039-2040")
                            com_txt_current_year.current(0)
                            com_txt_current_year.place(x = 550, y = 100)

                            # Bottom Left Frame
                            Bottom_Left_Frame = Frame(self.root_2, bd=2, relief=RIDGE, bg="White")
                            Bottom_Left_Frame.place(x = 5, y = 350, width = 150, height =275)

                            # Button Frame
                            btn_frame = Frame(Bottom_Left_Frame, bd=2, relief=RIDGE, bg="Black")
                            btn_frame.place(x = 5, y = 5, width = 135, height = 260)

                            btn_Add = Button(btn_frame, text = "Add Data", command = self.add_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Add.grid(row = 0, column = 0, padx = 1)

                            btn_Save = Button(btn_frame, text = "Save Data", command = self.save_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Save.grid(row = 1, column = 0, padx = 1)

                            btn_Display = Button(btn_frame, text = "Display\nData", command = self.welcome_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Display.grid(row = 2, column = 0, padx = 1)

                            btn_Reset = Button(btn_frame, text = "Reset\nData", command = self.reset_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Reset.grid(row = 3, column = 0, padx = 1)

                            btn_Close = Button(btn_frame, text = "Close", command = self.root_2.destroy, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Close.grid(row = 4, column = 0, padx = 1)

                            self.reset_data()
                            root_2.mainloop()

                        # Add Data
                        def add_data(self):
                            if (self.var_student_id.get() == "" or self.var_name.get() == "" or self.var_teacher.get() == "" or self.var_cls.get() == "" or 
                                    self.var_class_position.get() == "" or self.var_competition.get() == "" or self.var_year.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("INSERT INTO PARTICIPATING_CERTIFICATE VALUES(%s, %s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                    self.var_student_id.get(),
                                                                                                                                    self.var_name.get(),
                                                                                                                                    self.var_teacher.get(),
                                                                                                                                    self.var_cls.get(),
                                                                                                                                    self.var_class_position.get(),
                                                                                                                                    self.var_competition.get(),
                                                                                                                                    self.var_year.get()
                                                                                                                                    ))
                                    conn.commit()
                                    self.reset_data()
                                    conn.close()
                                    messagebox.showinfo("Success", "Participation Record Added Succesfully!", parent = self.root_2)
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_2)

                        # Welcome Data
                        def welcome_data(self):
                            self.txtarea.delete('1.0', END)
                            self.txtarea.insert(END, "\t\t\tPARTICIPATION CERTIFICATE")
                            self.txtarea.insert(END, "\n\t=========================================================================")
                            self.txtarea.insert(END, f"\n\tStudent ID: {self.var_student_id.get()}")
                            self.txtarea.insert(END, f"\n\tStudent Name: {self.var_name.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tTeacher Name: {self.var_teacher.get()}")
                            self.txtarea.insert(END, f"\n\tClass: {self.var_cls.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tClass Position: {self.var_class_position.get()}")
                            self.txtarea.insert(END, f"\n\tCompetition: {self.var_competition.get()}")
                            self.txtarea.insert(END, f"\n\tYear: {self.var_year.get()}")
                            self.txtarea.insert(END, "\n\t=========================================================================")

                        # Save Data
                        def save_data(self):
                            op = messagebox.askyesno("Save Data", "Do You Want to Save the Data?")
                            if op>0:
                                self.certificate_data = self.txtarea.get('1.0', END)
                                f1 = open("C:/UTSAV/Python-MySQL/School Management System/achievement_record/participating_certificate/"+str(self.var_student_id.get())+".txt","w")
                                f1.write(self.certificate_data)
                                f1.close()
                                messagebox.showinfo("Saved", f"Participation Record\nStudent ID: {self.var_student_id.get()} Saved Successfully.")
                            else:
                                return

                        # Reset Data
                        def reset_data(self):
                            self.var_student_id.set("")
                            self.var_name.set("")
                            self.var_teacher.set("")
                            self.var_cls.set("Select Class")
                            self.var_class_position.set("Select Class Position")
                            self.var_competition.set("Select Competition")
                            self.var_year.set("Select Year")
                            self.welcome_data()

                        # open image 7
                        def open_img_7(self):
                            fln_7 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_7 = Image.open(fln_7)
                            img_browse_7 = img_7.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_7 = ImageTk.PhotoImage(img_browse_7)
                            self.btn_7.config(image = self.photoimg_browse_7)

                        # open image 8
                        def open_img_8(self):
                            fln_8 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_8 = Image.open(fln_8)
                            img_browse_8 = img_8.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_8 = ImageTk.PhotoImage(img_browse_8)
                            self.btn_8.config(image = self.photoimg_browse_8)

                    if __name__ == "__main__":
                        root_2 = Toplevel()
                        obj_2 = participating(root_2)
                        root_2.mainloop()

                # Teamwork Certificate
                def teamwork_certificate(self):
                    class teamwork:

                        def __init__(self, root_3):
                            self.root_3 = root_3
                            self.root_3.title("TEAMWORK CERTIFICATE SYSTEM")
                            self.root_3.geometry("1100x640+150+40")
                            self.root_3.config(bg = "Darkolivegreen")
                            self.root_3.resizable(FALSE, FALSE)
                            self.root_3.focus_force()
                            self.root_3.grab_set()

                            title = Label(self.root_3, text = " TEAMWORK CERTIFICATE SYSTEM ", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED)
                            title.place(x = 5, y = 5, width = 1090)

                            # Variables
                            self.var_team_id = StringVar()
                            self.var_name_leader = StringVar()
                            self.var_teacher = StringVar()
                            self.var_cls = StringVar()
                            self.var_class_position = StringVar()
                            self.var_member = StringVar()
                            self.var_competition = StringVar()

                            # 9th
                            img_9 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\tc1.jpg")
                            img_9 = img_9.resize((235,235), Image.ANTIALIAS)
                            photoimg_9 = ImageTk.PhotoImage(img_9)

                            btn_9 = Label(self.root_3, image = photoimg_9)
                            btn_9.place(x = 860, y = 95, width = 235, height = 240)

                            # 10th
                            img_10 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\tc2.jpg")
                            img_10 = img_10.resize((235,235), Image.ANTIALIAS)
                            photoimg_10 = ImageTk.PhotoImage(img_10)

                            btn_10 = Label(self.root_3, image = photoimg_10)
                            btn_10.place(x = 860, y = 360, width = 235, height = 240)

                            # Current teamwork Label Frame Information
                            team_lbl_info_frame = LabelFrame(self.root_3, bd = 4, relief = SUNKEN, padx = 2, text = "Teamwork Certificate", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            team_lbl_info_frame.place(x = 5, y = 95, width = 845, height = 240)

                            # Teamwork Frame Information
                            team_frame = Frame(self.root_3, bd = 4, relief = SUNKEN, bg = "White")
                            team_frame.place(x = 170, y = 360, width = 680, height = 260)
                            certificate_title = Label(team_frame, text = "Teamwork Certificate", font = "arial 15 bold", bd = 7, relief = GROOVE).pack(fill = X)
                            scroll_y = Scrollbar(team_frame, orient = VERTICAL)
                            self.txtarea = Text(team_frame, yscrollcommand = scroll_y.set)
                            scroll_y.pack(side = RIGHT, fill = Y)
                            scroll_y.config(command = self.txtarea.yview)
                            self.txtarea.pack(fill = BOTH, expand = 1)

                            # Academic Label Frame Information
                            ## Student ID
                            lbl_student_id = Label(team_lbl_info_frame, text = "Team ID :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_id.place(x = 0, y = 0)
                            txt_student_id = ttk.Entry(team_lbl_info_frame, textvariable  = self.var_team_id, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_id.place(x = 150, y = 0)

                            ## Student Name
                            lbl_student_name = Label(team_lbl_info_frame, text = "Leader Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_name.place(x = 0, y = 50)
                            txt_student_name = ttk.Entry(team_lbl_info_frame, textvariable  = self.var_name_leader, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_name.place(x = 150, y = 50)

                            ## Teacher Name
                            lbl_teacher_name = Label(team_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_teacher_name.place(x = 0, y = 100)
                            txt_teacher_name = ttk.Entry(team_lbl_info_frame, textvariable  = self.var_teacher, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_teacher_name.place(x = 150, y = 100)

                            ## cls
                            lbl_cls = Label(team_lbl_info_frame, text = "Class :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_cls.place(x = 0, y = 150)

                            com_cls = ttk.Combobox(team_lbl_info_frame, textvariable  = self.var_cls, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_cls["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                            com_cls.current(0)
                            com_cls.place(x = 150, y = 150)

                            ## Class Position
                            lbl_class_position = Label(team_lbl_info_frame, text = "Class Position :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_class_position.place(x = 400, y = 0)

                            com_class_position = ttk.Combobox(team_lbl_info_frame, textvariable  = self.var_class_position, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_class_position["values"] = ("Select Position", "Ist Position", "IInd Position", "IIIrd Position", "NONE")
                            com_class_position.current(0)
                            com_class_position.place(x = 550, y = 0)

                            ## Members Name
                            lbl_member = Label(team_lbl_info_frame, text = "Members Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_member.place(x = 400, y = 50)
                            txt_member = ttk.Entry(team_lbl_info_frame, textvariable  = self.var_member, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_member.place(x = 550, y = 50)

                            ## Competition
                            lbl_competition = Label(team_lbl_info_frame, text = "Competition :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_competition.place(x = 400, y = 100)

                            com_competition = ttk.Combobox(team_lbl_info_frame, textvariable  = self.var_competition, font = ("Times New Roman", 15, "bold"), width = 20)
                            com_competition["values"] = ("Select Competiton", "Debate", "Story Telling", "Conflict resolution", "Decision-making", "Problem-solving")
                            com_competition.current(0)
                            com_competition.place(x = 550, y = 100)

                            # Bottom Left Frame
                            Bottom_Left_Frame = Frame(self.root_3, bd=2, relief=RIDGE, bg="White")
                            Bottom_Left_Frame.place(x = 5, y = 350, width = 150, height =275)

                            # Button Frame
                            btn_frame = Frame(Bottom_Left_Frame, bd=2, relief=RIDGE, bg="Black")
                            btn_frame.place(x = 5, y = 5, width = 135, height = 260)

                            btn_Add = Button(btn_frame, text = "Add Data", command = self.add_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Add.grid(row = 0, column = 0, padx = 1)

                            btn_Save = Button(btn_frame, text = "Save Data", command = self.save_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Save.grid(row = 1, column = 0, padx = 1)

                            btn_Display = Button(btn_frame, text = "Display\nData", command = self.welcome_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Display.grid(row = 2, column = 0, padx = 1)

                            btn_Reset = Button(btn_frame, text = "Reset\nData", command = self.reset_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Reset.grid(row = 3, column = 0, padx = 1)

                            btn_Close = Button(btn_frame, text = "Close", command = self.root_3.destroy, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Close.grid(row = 4, column = 0, padx = 1)

                            self.reset_data()
                            root_3.mainloop()

                        # Add Data
                        def add_data(self):
                            if (self.var_team_id.get() == "" or self.var_name_leader.get() == "" or self.var_teacher.get() == "" or self.var_cls.get() == "" or 
                                    self.var_class_position.get() == "" or self.var_member.get() == "" or self.var_competition.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("INSERT INTO TEAMWORK_CERTIFICATE VALUES(%s, %s, %s, %s, %s, %s, %s)", (
                                                                                                                                    self.var_team_id.get(),
                                                                                                                                    self.var_name_leader.get(),
                                                                                                                                    self.var_teacher.get(),
                                                                                                                                    self.var_cls.get(),
                                                                                                                                    self.var_class_position.get(),
                                                                                                                                    self.var_member.get(),
                                                                                                                                    self.var_competition.get()
                                                                                                                                    ))
                                    conn.commit()
                                    self.reset_data()
                                    conn.close()
                                    messagebox.showinfo("Success", "Teamwork Record Added Succesfully!", parent = self.root_3)
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_3)

                        # Welcome Data
                        def welcome_data(self):
                            self.txtarea.delete('1.0', END)
                            self.txtarea.insert(END, "\t\t\tTEAMWORK CERTIFICATE")
                            self.txtarea.insert(END, "\n\t=========================================================================")
                            self.txtarea.insert(END, f"\n\tTeam ID: {self.var_team_id.get()}")
                            self.txtarea.insert(END, f"\n\tLeader Name: {self.var_name_leader.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tTeacher Name: {self.var_teacher.get()}")
                            self.txtarea.insert(END, f"\n\tClass: {self.var_cls.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tClass Position: {self.var_class_position.get()}")
                            self.txtarea.insert(END, f"\n\tMembers Name: {self.var_member.get()}")
                            self.txtarea.insert(END, f"\n\tCompetition: {self.var_competition.get()}")
                            self.txtarea.insert(END, "\n\t=========================================================================")

                        # Save Data
                        def save_data(self):
                            op = messagebox.askyesno("Save Data", "Do You Want to Save the Data?")
                            if op>0:
                                self.certificate_data = self.txtarea.get('1.0', END)
                                f1 = open("C:/UTSAV/Python-MySQL/School Management System/achievement_record/teamwork_certificate/"+str(self.var_team_id.get())+".txt","w")
                                f1.write(self.certificate_data)
                                f1.close()
                                messagebox.showinfo("Saved", f"Teamwork Record\nTeam ID: {self.var_team_id.get()} Saved Successfully.")
                            else:
                                return

                        # Reset Data
                        def reset_data(self):
                            self.var_team_id.set("")
                            self.var_name_leader.set("")
                            self.var_teacher.set("")
                            self.var_cls.set("Select Class")
                            self.var_class_position.set("Select Class Position")
                            self.var_member.set("")
                            self.var_competition.set("Select Competition")
                            self.welcome_data()

                        # open image 9
                        def open_img_9(self):
                            fln_9 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_9 = Image.open(fln_9)
                            img_browse_9 = img_9.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_9 = ImageTk.PhotoImage(img_browse_9)
                            self.btn_9.config(image = self.photoimg_browse_9)

                        # open image 10
                        def open_img_10(self):
                            fln_10 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_10 = Image.open(fln_10)
                            img_browse_10 = img_10.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_10 = ImageTk.PhotoImage(img_browse_10)
                            self.btn_10.config(image = self.photoimg_browse_10)

                    if __name__ == "__main__":
                        root_3 = Toplevel()
                        obj_3 = teamwork(root_3)
                        root_3.mainloop()

                # Stduent Of The Year
                def student_of_the_year(self):
                    class student:

                        def __init__(self, root_4):
                            self.root_4 = root_4
                            self.root_4.title("STUDENT OF THE YEAR SYSTEM")
                            self.root_4.geometry("1100x640+150+40")
                            self.root_4.config(bg = "Darkolivegreen")
                            self.root_4.resizable(FALSE, FALSE)
                            self.root_4.focus_force()
                            self.root_4.grab_set()

                            title = Label(self.root_4, text = " STUDENT OF THE YEAR SYSTEM ", font = ("Handlee", 30, "bold"), bg = "Black", fg = "white", bd = 15, relief = RAISED)
                            title.place(x = 5, y = 5, width = 1090)

                            # Variables
                            self.var_student_id = StringVar()
                            self.var_name = StringVar()
                            self.var_class_teacher = StringVar()
                            self.var_principle = StringVar()
                            self.var_cls = StringVar()
                            self.var_percentage = StringVar()

                            # 11th
                            img_11 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\sy1.jpg")
                            img_11 = img_11.resize((235,235), Image.ANTIALIAS)
                            photoimg_11 = ImageTk.PhotoImage(img_11)

                            btn_11 = Label(self.root_4, image = photoimg_11)
                            btn_11.place(x = 860, y = 95, width = 235, height = 240)

                            # 12th
                            img_12 = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\achievement_images\sy4.jpg")
                            img_12 = img_12.resize((235,235), Image.ANTIALIAS)
                            photoimg_12 = ImageTk.PhotoImage(img_12)

                            btn_12 = Label(self.root_4, image = photoimg_12)
                            btn_12.place(x = 860, y = 360, width = 235, height = 240)

                            # Current student Label Frame Information
                            std_lbl_info_frame = LabelFrame(self.root_4, bd = 4, relief = SUNKEN, padx = 2, text = "Student Of The Year", font = ("Colonna MT", 15, "bold"), fg = "Red", bg = "White")
                            std_lbl_info_frame.place(x = 5, y = 95, width = 845, height = 240)

                            # student Frame Information
                            std_frame = Frame(self.root_4, bd = 4, relief = SUNKEN, bg = "White")
                            std_frame.place(x = 170, y = 360, width = 680, height = 260)
                            student_title = Label(std_frame, text = "Student Of The Year", font = "arial 15 bold", bd = 7, relief = GROOVE).pack(fill = X)
                            scroll_y = Scrollbar(std_frame, orient = VERTICAL)
                            self.txtarea = Text(std_frame, yscrollcommand = scroll_y.set)
                            scroll_y.pack(side = RIGHT, fill = Y)
                            scroll_y.config(command = self.txtarea.yview)
                            self.txtarea.pack(fill = BOTH, expand = 1)

                            # Academic Label Frame Information
                            ## Student ID
                            lbl_student_id = Label(std_lbl_info_frame, text = "Student ID :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_id.place(x = 0, y = 0)
                            txt_student_id = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_student_id, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_id.place(x = 150, y = 0)

                            ## Student Name
                            lbl_student_name = Label(std_lbl_info_frame, text = "Student Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_student_name.place(x = 0, y = 50)
                            txt_student_name = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_name, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_student_name.place(x = 150, y = 50)

                            ## Teacher Name
                            lbl_teacher_name = Label(std_lbl_info_frame, text = "Teacher Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_teacher_name.place(x = 0, y = 100)
                            txt_teacher_name = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_class_teacher, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_teacher_name.place(x = 150, y = 100)

                            ## Principle Name
                            lbl_principle = Label(std_lbl_info_frame, text = "Principle Name :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_principle.place(x = 400, y = 0)
                            txt_principle = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_principle, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_principle.place(x = 550, y = 0)

                            ## cls
                            lbl_cls = Label(std_lbl_info_frame, text = "Class :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_cls.place(x = 400, y = 50)

                            com_cls = ttk.Combobox(std_lbl_info_frame, textvariable  = self.var_cls, font = ("Times New Roman", 15, "bold"), width = 20, state = "readonly")
                            com_cls["values"] = ("Select Class", "Pre-Nursery", "UKG", "Class I", "Class II", "Class III", "Class IV", "Class V", "Class VI", "Class VII", "Class VIII", "Class IX", "Class X", "Class XI - Section A", "Class XI - Section B", "Class XI - Section C", "Class XI - Section D", "Class XII - Section A", "Class XII - Section B", "Class XII - Section C", "Class XII - Section D")
                            com_cls.current(0)
                            com_cls.place(x = 550, y = 50)

                            ## Percentage
                            lbl_percentage = Label(std_lbl_info_frame, text = "Percentage :", font = ("Times New Roman", 15, "bold"), bg = "White")
                            lbl_percentage.place(x = 400, y = 100)
                            txt_percentage = ttk.Entry(std_lbl_info_frame, textvariable  = self.var_percentage, font = ("Times New Roman", 15, "bold"), width = 22)
                            txt_percentage.place(x = 550, y = 100)

                            # Bottom Left Frame
                            Bottom_Left_Frame = Frame(self.root_4, bd=2, relief=RIDGE, bg="White")
                            Bottom_Left_Frame.place(x = 5, y = 350, width = 150, height =275)

                            # Button Frame
                            btn_frame = Frame(Bottom_Left_Frame, bd=2, relief=RIDGE, bg="Black")
                            btn_frame.place(x = 5, y = 5, width = 135, height = 260)

                            btn_Add = Button(btn_frame, text = "Add Data", command = self.add_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Add.grid(row = 0, column = 0, padx = 1)

                            btn_Save = Button(btn_frame, text = "Save Data", command = self.save_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Save.grid(row = 1, column = 0, padx = 1)

                            btn_Display = Button(btn_frame, text = "Display\nData", command = self.welcome_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Display.grid(row = 2, column = 0, padx = 1)

                            btn_Reset = Button(btn_frame, text = "Reset\nData", command = self.reset_data, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Reset.grid(row = 3, column = 0, padx = 1)

                            btn_Close = Button(btn_frame, text = "Close", command = self.root_4.destroy, font = ("Arial", 15, "bold"), width = 10, bg = "Green", fg = "White")
                            btn_Close.grid(row = 4, column = 0, padx = 1)

                            self.reset_data()
                            root_4.mainloop()

                        # Add Data
                        def add_data(self):
                            if (self.var_student_id.get() == "" or self.var_name.get() == "" or self.var_class_teacher.get() == "" or self.var_principle.get() == "" or 
                                    self.var_cls.get() == "" or self.var_percentage.get() == ""):
                                messagebox.showerror("Error", "All Fields are Required!!")
                            else:
                                try:
                                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                                    my_cursor = conn.cursor()
                                    my_cursor.execute("INSERT INTO STUDENT_OF_THE_YEAR VALUES(%s, %s, %s, %s, %s, %s)", (
                                                                                                                                    self.var_student_id.get(),
                                                                                                                                    self.var_name.get(),
                                                                                                                                    self.var_class_teacher.get(),
                                                                                                                                    self.var_principle.get(),
                                                                                                                                    self.var_cls.get(),
                                                                                                                                    self.var_percentage.get()
                                                                                                                                    ))
                                    conn.commit()
                                    self.reset_data()
                                    conn.close()
                                    messagebox.showinfo("Success", "Student of the Year Record Added Succesfully!", parent = self.root_4)
                                except Exception as es:
                                    messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_4)

                        # Welcome Data
                        def welcome_data(self):
                            self.txtarea.delete('1.0', END)
                            self.txtarea.insert(END, "\t\t\tSTUDENT OF THE YEAR")
                            self.txtarea.insert(END, "\n\t=========================================================================")
                            self.txtarea.insert(END, f"\n\tStudent ID: {self.var_student_id.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tStudent Name: {self.var_name.get()}")
                            self.txtarea.insert(END, f"\n\tTeacher Name: {self.var_class_teacher.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tPrinciple Name: {self.var_principle.get()}")
                            self.txtarea.insert(END, f"\n\tClass: {self.var_cls.get()}")
                            self.txtarea.insert(END, f"\t\t\t\tPercentage: {self.var_percentage.get()}")
                            self.txtarea.insert(END, "\n\t=========================================================================")

                        # Save Data
                        def save_data(self):
                            op = messagebox.askyesno("Save Data", "Do You Want to Save the Data?")
                            if op>0:
                                self.student_data = self.txtarea.get('1.0', END)
                                f1 = open("C:/UTSAV/Python-MySQL/School Management System/achievement_record/student_of_the_year/"+str(self.var_student_id.get())+".txt","w")
                                f1.write(self.student_data)
                                f1.close()
                                messagebox.showinfo("Saved", f"Student of the Year Record\nStudent ID: {self.var_student_id.get()} Saved Successfully.")
                            else:
                                return

                        # Reset Data
                        def reset_data(self):
                            self.var_student_id.set("")
                            self.var_name.set("")
                            self.var_class_teacher.set("")
                            self.var_principle.set("")
                            self.var_cls.set("Select Class")
                            self.var_percentage.set("")
                            self.welcome_data()

                        # open image 11 
                        def open_img_11(self):
                            fln_11 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_11 = Image.open(fln_11)
                            img_browse_11 = img_11.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_11 = ImageTk.PhotoImage(img_browse_11)
                            self.btn_11.config(image = self.photoimg_browse_11)

                        # open image 12
                        def open_img_12(self):
                            fln_12 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                            img_12 = Image.open(fln_12)
                            img_browse_12 = img_12.resize((1380, 710), Image.ANTIALIAS)
                            self.photoimg_browse_12 = ImageTk.PhotoImage(img_browse_12)
                            self.btn_12.config(image = self.photoimg_browse_12)

                    if __name__ == "__main__":
                        root_4 = Toplevel()
                        obj_4 = student(root_4)
                        root_4.mainloop()

                # open image 
                def open_img(self):
                    fln = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img = Image.open(fln)
                    img_browse = img.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse = ImageTk.PhotoImage(img_browse)
                    self.btn.config(image = self.photoimg_browse)

                # open image 
                def open_img_1(self):
                    fln_1 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img_1 = Image.open(fln_1)
                    img_browse_1 = img_1.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse_1 = ImageTk.PhotoImage(img_browse_1)
                    self.btn_1.config(image = self.photoimg_browse_1)

                # open image 2
                def open_img_2(self):
                    fln_2 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img_2 = Image.open(fln_2)
                    img_browse_2 = img_2.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse_2 = ImageTk.PhotoImage(img_browse_2)
                    self.btn_2.config(image = self.photoimg_browse_2)

                # open image 3
                def open_img_3(self):
                    fln_3 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img_3 = Image.open(fln_3)
                    img_browse_3 = img_3.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse_3 = ImageTk.PhotoImage(img_browse_3)
                    self.btn_3.config(image = self.photoimg_browse_3)

                # open image 4
                def open_img_4(self):
                    fln_4 = filedialog.askopenfilename(initialdir = os.getcwd(), title = "Open Image", filetypes = (("JPG File", "*.jpg"), ("PNG File", "*.png"),("ALL Files", "*.*")))
                    img_4 = Image.open(fln_4)
                    img_browse_4 = img_4.resize((1380, 710), Image.ANTIALIAS)
                    self.photoimg_browse_4 = ImageTk.PhotoImage(img_browse_4)
                    self.btn_4.config(image = self.photoimg_browse_4)

            if __name__ == "__main__":
                root = Toplevel()
                obj = Achievement_Record(root)
                root.mainloop()

        def create_table(self):
            class CREATE:

                def __init__(self,root_create):
                    self.root_create = root_create
                    self.root_create.title("CREATE DATABASE AND TABLES")
                    self.root_create.geometry("300x370+534+150")

                    self.root_create.config(bg = "Darkred")

                    self.root_create.focus_force()
                    self.root_create.grab_set()
                    self.root_create.resizable(0,0)

                    # Variables
                    self.var_table_name = StringVar()
                    self.var_table_data = StringVar()

                    bg_lbl = Label(self.root_create, bd=2, relief=RIDGE, bg  ="darkgoldenrod")
                    bg_lbl.place(x = 10, y = 10, width = 280, height = 350)

                    lbl_title = Label(bg_lbl, text = "CREATE", font = ("Colonna MT", 40, "bold"), fg = "darkblue", bg = "darkgoldenrod", bd = 0)
                    lbl_title.place(x = 10, y = 10, width = 250, height = 60)

                    #Label Frame
                    label_frame = Frame(bg_lbl, bd=2, relief=RIDGE, bg="Black")
                    label_frame.place(x = 10, y = 100, width = 254, height = 220)

                    btn_database = Button(label_frame, text = "Create Database",command = self.database, font = ("Arial", 20, "bold"), bg = "Blue", fg = "White")
                    btn_database.place(x = 6, y = 6, width = 240, height = 50)

                    btn_table = Button(label_frame, text = "Create Table", command = self.table, font = ("Arial", 20, "bold"), bg = "Blue", fg = "White")
                    btn_table.place(x = 6, y = 60, width = 240, height = 50)

                    messagebox.showinfo("Info", "Please Create Database If Not Exist")

                    ## Table Name
                    lbl_table_name = Label(label_frame, text = "Table Name :", font = ("Times New Roman", 20, "bold"), bg = "Black", fg = "White")
                    lbl_table_name.place(x = 6, y = 120)

                    com_txt_table_name = ttk.Combobox(label_frame, textvariable  = self.var_table_name, font = ("Times New Roman", 15, "bold"), width = 21, state = "readonly")
                    com_txt_table_name["values"] = ("Select Table Name", "accounts", "admission", "students", "teacher", "course", "exam_management_class_nur_ukg", "exam_management_class_1_5", "exam_management_class_6_8", "exam_management_class_9_10", "exam_management_class_11_12_section_a", "exam_management_class_11_12_section_b", "exam_management_class_11_12_section_c", "exam_management_class_11_12_section_d", "report_card", "progress_report_class_nursery", "progress_report_class_ukg",   "progress_report_class_1", "progress_report_class_2", "progress_report_class_3", "progress_report_class_4", "progress_report_class_5", "progress_report_class_6", "progress_report_class_7", "progress_report_class_8", "progress_report_class_9", "progress_report_class_10", "progress_report_class_11_A", "progress_report_class_11_B", "progress_report_class_11_C", "progress_report_class_11_D", "progress_report_class_12_A", "progress_report_class_12_B", "progress_report_class_12_C", "progress_report_class_12_D", "academic_excellence", "student_of_the_year", "participating_certificate", "teamwork_certificate", "export_login")
                    com_txt_table_name.current(0)
                    com_txt_table_name.place(x = 6, y = 170)

                def database(self):
                    conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger")
                    my_cursor = conn.cursor()
                    my_cursor.execute("CREATE DATABASE SCHOOL_MANAGEMENT_SYSTEM")
                    conn.close()
                    messagebox.showinfo("Success", "Database Created with Name - SCHOOL_MANAGEMENT_SYSTEM")

                def table(self):
                    if self.var_table_name.get() == "Select Table Name":
                        messagebox.showerror("Error", "Please Select Table Name")
                    else:
                        if self.var_table_name.get() == "accounts":
                            conn_1 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_1 = conn_1.cursor()
                            sql_1 = "CREATE TABLE ACCOUNTS (ID int NOT NULL PRIMARY KEY, User_Name varchar(50), Contact varchar(20), Email_ID varchar(50), Password varchar(50));"
                            my_cursor_1.execute(sql_1)
                            conn_1.commit()
                            conn_1.close()
                            conn_2 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_2 = conn_2.cursor()
                            sql_2 = "INSERT INTO ACCOUNTS VALUES (1002, 'UTSAV SINGHAL', '9953718633', 'utsavsinghal26@gmail.com', 'utsav26102004'), (1003, 'SANTOSH SHARMA', '9821621235', 'santosh2002@gmail.com', 'santosh2002');"
                            my_cursor_2.execute(sql_2)
                            conn_2.commit()
                            conn_2.close()
                        elif self.var_table_name.get() == "admission":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE ADMISSIONS (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(255), Father_Name varchar(255), Father_Occupation varchar(255), Mother_Name varchar(255), Mother_Occupation varchar(255), Academic_Year varchar(20), City varchar(255), Gender varchar(10), Date_of_Birth varchar(20), Email_ID varchar(100), Phone_No varchar(20), Address varchar(255), PinCode varchar(10), Course_ID varchar(20), Class_Section varchar(30), Mandatory_Subjects varchar(100), Additional_Subjects varchar(100), Chosen_Additional_Subjects varchar(30));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "students":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE STUDENTS (Roll_No varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class_Section varchar(30), Course varchar(30), Year varchar(20), Gender varchar(10), Date_of_Birth varchar(20), Email_ID varchar(50), Phone_No varchar(50), Address varchar(50), Teacher_Name varchar(50));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "teacher":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE TEACHER (Teacher_ID varchar(30) NOT NULL PRIMARY KEY, Teacher_Name varchar(50), Department varchar(50), Teacher_Post varchar(20), Gender varchar(10), Date_of_Birth varchar(20), Email_ID varchar(50), Phone_No varchar(50), Address varchar(50), Class_Teacher varchar(30), Subjects varchar(80));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "course":
                            conn_1 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_1 = conn_1.cursor()
                            sql_1 = "CREATE TABLE COURSE (Course_ID varchar(20), Course_Name varchar(20), Subjects_Name varchar(100), Additional_Subjects_Name varchar(100), Class varchar(30));"
                            my_cursor_1.execute(sql_1)
                            conn_1.commit()
                            conn_1.close()
                            conn_2 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_2 = conn_2.cursor()
                            sql_2 = "INSERT INTO COURSE VALUES ('SCIENCE145', 'SCIENCE', 'Physics/Chemistry/Maths/English/Computer_Science', 'Physical_Education/NONE', 'Class-XI--Section-A'), ('SCIENCE185', 'SCIENCE', 'Physics/Chemistry/Biology/Maths/English', 'Computer_Science/Physical_Education/NONE', 'Class-XI--Section-B'), ('COMMERCE234', 'COMMERCE', 'Accountance/Business_Studies/Economics/Maths/English', 'Information_Practices/Physical_Education/NONE', 'Class-XI--Section-C'), ('COMMERCE257', 'COMMERCE', 'Accountancy/Business_Studies/Economics/Maths/English', 'Information_Practices/Physical_Education/Entreprenuershp/NONE', ' Class-XI--Section-D'), ('SCIENCE45', 'SCIENCE', 'Physics/Chemistry/Maths/English/Computer_Science', 'Physical_Education/NONE', 'Class-XII--Section-A'), ('SCIENCE85', 'SCIENCE', 'Physics/Chemistry/Biology/Maths/English', 'Computer_Science/Physical_Education/NONE', 'Class-XII--Section-B'), ('COMMERCE74', 'COMMERCE', 'Accountance/Business_Studies/Economics/Maths/English', 'Information_Practices/Physical_Education/NONE', 'Class-XII--Section-C'), ('COMMERCE97', 'COMMERCE', 'Accountancy/Business_Studies/Economics/Maths/English', 'Information_Practices/Physical_Education/Entreprenuershp/NONE', ' Class-XII--Section-D');"
                            my_cursor_2.execute(sql_2)
                            conn_2.commit()
                            conn_2.close()
                        elif self.var_table_name.get() == "exam_management_class_nur_ukg":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_NUR_UKG (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Hindi_Marks varchar(10), Mathematics_Marks varchar(10), Drawing_Marks varchar(10), General_Knowledge_Marks varchar(10), Environmental_Science_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_1_5":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_1_5 (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Hindi_Marks varchar(10), Mathematics_Marks varchar(10), Drawing_Marks varchar(10), General_Knowledge_Marks varchar(10), Environmental_Science_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_6_8":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_6_8 (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Hindi_Marks varchar(10), Mathematics_Marks varchar(10), Social_Science_Marks varchar(10), Science_Marks varchar(10), General_Knowledge_Marks varchar(10), Computer_Science_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_9_10":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_9_10 (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Hindi_Marks varchar(10), Mathematics_Marks varchar(10), Social_Science_Marks varchar(10), Science_Marks varchar(10), Physical_Education_Marks varchar(10), Computer_Science_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_11_12_section_a":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_11_12_SECTION_A (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Mathematics_Marks varchar(10), Physics_Marks varchar(10), Chemistry_Marks varchar(10), Computer_Science_Marks varchar(10), Physical_Education_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_11_12_section_b":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_11_12_SECTION_B (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Mathematics_Marks varchar(10), Physics_Marks varchar(10), Chemistry_Marks varchar(10), Biology_Marks varchar(10), Physical_Education_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_11_12_section_c":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_11_12_SECTION_C (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Mathematics_Marks varchar(10), Accountancy_Marks varchar(10), Economics_Marks varchar(10), Business_Studies_Marks varchar(10), Physical_Education_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "exam_management_class_11_12_section_d":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE EXAM_MANAGEMENT_CLASS_11_12_SECTION_D (Admission_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Class varchar(10), Percentage varchar(10), English_Marks varchar(10), Mathematics_Marks varchar(10), Accountancy_Marks varchar(10), Economics_Marks varchar(10), Business_Studies_Marks varchar(10), Computer_Science_Marks varchar(10), Total_Marks varchar(10), Remarks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_nursery":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_Nursery (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Awareness_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Awareness_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_ukg":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_UKG (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Awareness_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Awareness_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_1":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_1  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_2":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_2  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_3":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_3  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_4":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_4  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_5":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_5  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Drawing_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Environmental_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Drawing_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Environmental_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_6":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_6  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Social_Science_Marks varchar(10), Term1_Science_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Social_Science_Marks varchar(10), Term2_Science_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_7":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_7  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Social_Science_Marks varchar(10), Term1_Science_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Social_Science_Marks varchar(10), Term2_Science_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_8":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_8  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Social_Science_Marks varchar(10), Term1_Science_Marks varchar(10), Term1_General_Knowledge_Marks varchar(10), Term1__Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Social_Science_Marks varchar(10), Term2_Science_Marks varchar(10), Term2_General_Knowledge_Marks varchar(10), Term2_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_9":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_9  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Social_Science_Marks varchar(10), Term1_Science_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Social_Science_Marks varchar(10), Term2_Science_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Hindi_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Social_Science_Marks varchar(10), Term3_Science_Marks varchar(10), Term3_Physical_Education_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_10":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_10  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Hindi_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Social_Science_Marks varchar(10), Term1_Science_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Hindi_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Social_Science_Marks varchar(10), Term2_Science_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Hindi_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Social_Science_Marks varchar(10), Term3_Science_Marks varchar(10), Term3_Physical_Education_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_11_A":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_11_A  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Physics_Marks varchar(10), Term1_Chemistry_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Physics_Marks varchar(10), Term2_Chemistry_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Physics_Marks varchar(10), Term3_Chemistry_Marks varchar(10), Term3_Physical_Education_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_11_B":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_11_B  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Physics_Marks varchar(10), Term1_Chemistry_Marks varchar(10), Term1_Biology_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Physics_Marks varchar(10), Term2_Chemistry_Marks varchar(10), Term2_Biology_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Physics_Marks varchar(10), Term3_Chemistry_Marks varchar(10), Term3_Biology_Marks varchar(10), Term3_Physical_Education_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_11_C":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_11_C  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Accountancy_Marks varchar(10), Term1_Economics_Marks varchar(10), Term1_Business_Studies_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Accountancy_Marks varchar(10), Term2_Economics_Marks varchar(10), Term2_Business_Studies_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Accountancy_Marks varchar(10), Term3_Economics_Marks varchar(10), Term3_Business_Studies_Marks varchar(10), Term3_Physical_Education_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_11_D":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_11_D  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Accountancy_Marks varchar(10), Term1_Economics_Marks varchar(10), Term1_Business_Studies_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Accountancy_Marks varchar(10), Term2_Economics_Marks varchar(10), Term2_Business_Studies_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Accountancy_Marks varchar(10), Term3_Economics_Marks varchar(10), Term3_Business_Studies_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_12_A":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_12_A  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Physics_Marks varchar(10), Term1_Chemistry_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Physics_Marks varchar(10), Term2_Chemistry_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Physics_Marks varchar(10), Term3_Chemistry_Marks varchar(10), Term3_Physical_Education_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_12_B":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_12_B  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Physics_Marks varchar(10), Term1_Chemistry_Marks varchar(10), Term1_Biology_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Physics_Marks varchar(10), Term2_Chemistry_Marks varchar(10), Term2_Biology_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Physics_Marks varchar(10), Term3_Chemistry_Marks varchar(10), Term3_Biology_Marks varchar(10), Term3_Physical_Education_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_12_C":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_12_C  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Accountancy_Marks varchar(10), Term1_Economics_Marks varchar(10), Term1_Business_Studies_Marks varchar(10), Term1_Physical_Education_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Accountancy_Marks varchar(10), Term2_Economics_Marks varchar(10), Term2_Business_Studies_Marks varchar(10), Term2_Physical_Education_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Accountancy_Marks varchar(10), Term3_Economics_Marks varchar(10), Term3_Business_Studies_Marks varchar(10), Term3_Physical_Education_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "progress_report_class_12_D":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE Progress_Report_Class_12_D  (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Term1_English_Marks varchar(10), Term1_Mathematics_Marks varchar(10), Term1_Accountancy_Marks varchar(10), Term1_Economics_Marks varchar(10), Term1_Business_Studies_Marks varchar(10), Term1_Computer_Science_Marks varchar(10), Term2_English_Marks varchar(10), Term2_Mathematics_Marks varchar(10), Term2_Accountancy_Marks varchar(10), Term2_Economics_Marks varchar(10), Term2_Business_Studies_Marks varchar(10), Term2_Computer_Science_Marks varchar(10), Term3_English_Marks varchar(10), Term3_Mathematics_Marks varchar(10), Term3_Accountancy_Marks varchar(10), Term3_Economics_Marks varchar(10), Term3_Business_Studies_Marks varchar(10), Term3_Computer_Science_Marks varchar(10));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "report_card":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE REPORT_CARD (Admission_ID varchar(20) NOT NULL PRIMARY KEY, Student_Name varchar(50), Mother_Name varchar(50), Father_Name varchar(50), Class_Section varchar(30), Percentage varchar(20), Date_of_Birth varchar(20), Roll_No varchar(20));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "academic_excellence":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE ACADEMIC_EXCELLENCE (Student_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Teacher_Name varchar(50), Principle_Name varchar(50), Class_Position varchar(30), Class varchar(30), Percentage varchar(10), Year varchar(20));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "student_of_the_year":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE STUDENT_OF_THE_YEAR (Student_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Teacher_Name varchar(50), Principle varchar(50), Class varchar(20), Percentage varchar(20));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "participating_certificate":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE PARTICIPATING_CERTIFICATE (Student_ID varchar(10) NOT NULL PRIMARY KEY, Student_Name varchar(50), Teacher_Name varchar(50), Class varchar(30), Class_Position varchar(30), Competition varchar(50), Year varchar(20));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "teamwork_certificate":
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor = conn.cursor()
                            sql = "CREATE TABLE TEAMWORK_CERTIFICATE (Team_ID varchar(10) NOT NULL PRIMARY KEY, Leader_Name varchar(50), Teacher_Name varchar(50), Class varchar(30), Class_Position varchar(30), Members_Name varchar(100), Competition varchar(50));"
                            my_cursor.execute(sql)
                            conn.commit()
                            conn.close()
                        elif self.var_table_name.get() == "export_login":
                            conn_1 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_1 = conn_1.cursor()
                            sql_1 = "CREATE TABLE EXPORT_LOGIN (Name varchar(50), Password varchar(50));"
                            my_cursor_1.execute(sql_1)
                            conn_1.commit()
                            conn_1.close()
                            conn_2 = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "SCHOOL_MANAGEMENT_SYSTEM")
                            my_cursor_2 = conn_2.cursor()
                            sql_2 = "INSERT INTO EXPORT_LOGIN VALUES ('UTSAV', 'utsav26102004'), ('SANTOSH', 'santosh2004');"
                            my_cursor_2.execute(sql_2)
                            conn_2.commit()
                            conn_2.close()

            if __name__ == "__main__":
                root_create = Toplevel()
                obj_create = CREATE(root_create)
                root_create.mainloop()

    if __name__ =="__main__":
        root_start = Tk()
        obj_start = START(root_start)
        root_start.mainloop()

def School_Management_System():
    class LOGIN:

        def __init__(self, root_login):
            self.root_login = root_login
            self.root_login.title("Login Page")
            self.root_login.geometry("350x500+530+100")
            self.root_login.config(bg = "#fafafa")
            self.root_login.resizable(0,0)

            # Variables
            self.var_name = StringVar()
            self.var_passwd = StringVar()

            #Making gradient frame
            j = 0
            r = 10
            for i in range(100):
                c = str(240000+r)
                Frame(self.root_login, width=10, height=500, bg="#"+c).place(x = j, y = 0)   
                j = j+10                                                  
                r = r+1

            Frame(self.root_login, width = 310, height = 460, bg = 'white').place(x = 20, y= 20)

            l1 = Label(self.root_login, text = 'Username', font = ('Comic Sans MS', 13), bg ='white')
            l1.place(x = 80, y = 200)
            e1 = Entry(self.root_login, font = ('Consolas',13), textvariable = self.var_name, width = 20, border = 0)
            e1.place(x = 80, y = 230)

            l2 = Label(self.root_login, text = 'Password', font = ('Comic Sans MS',13), bg = 'white')
            l2.place(x = 80, y = 280)
            e2 = Entry(self.root_login, font = ('Consolas',13), textvariable = self.var_passwd, width = 20, border = 0, show = '*')
            e2.place(x = 80, y = 310)

            ###lineframe on entry
            Frame(self.root_login, width = 180, height = 2, bg = '#141414').place(x = 80, y = 332)
            Frame(self.root_login, width = 180, height = 2, bg = '#141414').place(x = 80, y = 252)
            
            img = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\Icon.jpg")
            img = img.resize((121,137), Image.ANTIALIAS)
            self.photoimg = ImageTk.PhotoImage(img)
            self.btn = Label(self.root_login, image = self.photoimg)
            self.btn.place(x = 115, y = 50, width = 121, height = 137)
        
            self.myButton1 = Button(self.root_login, text = "LOGIN", font = ('Handlee',20, "bold"), width = 10, height = 0, fg = "white", border = 0, bg = "#994422", activeforeground = "#994422", activebackground = "white", command = self.cmd)
            self.myButton1.place(x = 90, y = 360)

            self.myButton2 = Button(self.root_login, text = "Register New Account", font = ('Handlee', 12, "bold"), fg = "#994422", border = 0, bg = "White", activeforeground = "#994422", activebackground = "white", command = self.register)
            self.myButton2.place(x = 85, y = 420)

        #Command
        def cmd(self):
            if self.var_name.get() == '' and self.var_passwd.get() == '':
                messagebox.showwarning("LOGIN FAILED","ALL FIELD ARE REQUIRED!!!")
            else:
                if (self.var_name.get() == "" or self.var_passwd.get() == ""):
                        messagebox.showerror("Error", "Fields are Required!!")
                else:
                    try:                
                        conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                        my_cursor = conn.cursor()
                        my_cursor.execute(f"SELECT * FROM ACCOUNTS WHERE User_Name = '{self.var_name.get()}' AND Password = '{self.var_passwd.get()}'")
                        data = my_cursor.fetchone()
                        conn.commit()
                        if len(data) != 0:
                            messagebox.showinfo("LOGIN SUCCESSFULLY", "         WELCOME        ", parent = self.root_login)
                            self.var_name.set("")
                            self.var_passwd.set("")
                            self.root_login.destroy()
                            Main_Window()
                        else:
                            messagebox.showerror("Error", "Invalid Name & Password!!!!")
                        conn.close()
                    except Exception as es:
                        messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_login)

        #Button_with hover effect
        def bttn(self):
            def on_enter(e):
                self.myButton1['background'] = "white"
                self.myButton1['foreground']= "#994422"
            def on_leave(e):
                self.myButton1['background'] = "#994422"
                self.myButton1['foreground']= "white"
            self.myButton1.bind("<Enter>", on_enter)
            self.myButton1.bind("<Leave>", on_leave)
        
        def register(self):
            class REGISTER:

                def __init__(self, root_register):
                    self.root_register = root_register
                    self.root_register.title("Register Page")
                    self.root_register.geometry("600x500+400+100")
                    self.root_register.config(bg = "#fafafa")
                    self.root_register.resizable(0,0)

                    # Variables
                    self.var_id = StringVar()
                    self.var_name = StringVar()
                    self.var_contact = StringVar()
                    self.var_email = StringVar()
                    self.var_passwd = StringVar()

                    #Making gradient frame
                    j = 0
                    r = 10
                    for i in range(100):
                        c = str(240000+r)
                        Frame(self.root_register, width=10, height=500, bg="#"+c).place(x = j, y = 0)   
                        j = j+10                                                  
                        r = r+1

                    Frame(self.root_register, width = 550, height = 460, bg = 'white').place(x = 20, y= 20)

                    l1 = Label(self.root_register, text = 'User ID', font = ('Comic Sans MS', 13), bg ='white')
                    l1.place(x = 80, y = 200)
                    e1 = Entry(self.root_register, font = ('Consolas',13), textvariable = self.var_id, width = 20, border = 0)
                    e1.place(x = 80, y = 230)

                    l2 = Label(self.root_register, text = 'Email', font = ('Comic Sans MS',13), bg = 'white')
                    l2.place(x = 80, y = 270)
                    e2 = Entry(self.root_register, font = ('Consolas',13), textvariable = self.var_email, width = 20, border = 0)
                    e2.place(x = 80, y = 295)

                    l3 = Label(self.root_register, text = 'User Name', font = ('Comic Sans MS', 13), bg ='white')
                    l3.place(x = 332, y = 200)
                    e3 = Entry(self.root_register, font = ('Consolas',13), textvariable = self.var_name, width = 20, border = 0)
                    e3.place(x = 332, y = 230)

                    l4 = Label(self.root_register, text = 'Contact', font = ('Comic Sans MS',13), bg = 'white')
                    l4.place(x = 332, y = 270)
                    e4 = Entry(self.root_register, font = ('Consolas',13), textvariable = self.var_contact, width = 20, border = 0)
                    e4.place(x = 332, y = 295)

                    l5 = Label(self.root_register, text = 'Password', font = ('Comic Sans MS', 13), bg ='white')
                    l5.place(x = 200, y = 335)
                    e5 = Entry(self.root_register, font = ('Consolas',13), textvariable = self.var_passwd, width = 20, border = 0, show = '*')
                    e5.place(x = 200, y = 363)

                    ###lineframe on entry
                    Frame(self.root_register, width = 180, height = 2, bg = '#141414').place(x = 80, y = 252)
                    Frame(self.root_register, width = 180, height = 2, bg = '#141414').place(x = 80, y = 320)
                    Frame(self.root_register, width = 180, height = 2, bg = '#141414').place(x = 332, y = 252)
                    Frame(self.root_register, width = 180, height = 2, bg = '#141414').place(x = 332, y = 320)
                    Frame(self.root_register, width = 180, height = 2, bg = '#141414').place(x = 200, y = 385)
                    
                    img_register = Image.open(r"C:\UTSAV\Python-MySQL\School Management System\Register_Icon.jpg")
                    img_register = img_register.resize((199,180), Image.ANTIALIAS)
                    self.photoimg_register = ImageTk.PhotoImage(img_register)
                    self.btn_register = Label(self.root_register, image = self.photoimg_register)
                    self.btn_register.place(x = 205, y = 30, width = 199, height = 180)

                    self.myButton2 = Button(self.root_register, text = "Register Now", font = ('Handlee', 20, "bold"), fg = "white", bg = "#994422", activeforeground = "#994422", activebackground = "white", command = self.reg)
                    self.myButton2.place(x = 195, y = 405)

                def reg(self):
                    if (self.var_id.get() == "" or self.var_name.get() == "" or self.var_contact.get() == "" or self.var_email.get() == "" or 
                            self.var_passwd.get() == ""):
                        messagebox.showerror("Error", "All Fields are Required!!")
                    else:
                        try:                
                            conn = mysql.connector.connect(host = "localhost", username = "root", password = "tiger", database = "School_Management_System")
                            my_cursor = conn.cursor()
                            my_cursor.execute("INSERT INTO ACCOUNTS (ID, User_Name, Contact, Email_ID, Password) VALUES(%s, %s, %s, %s, %s)", (
                                                                                                                                            self.var_id.get(),
                                                                                                                                            self.var_name.get(),
                                                                                                                                            self.var_contact.get(),
                                                                                                                                            self.var_email.get(),
                                                                                                                                            self.var_passwd.get()
                                                                                                                                        ))
                            conn.commit()
                            conn.close()
                            messagebox.showinfo("Success", "Account Added Succesfully!", parent = self.root_register)
                            self.root_register.destroy()
                        except Exception as es:
                            messagebox.showerror("Error", f"Due to: {str(es)}", parent = self.root_register)

            if __name__ == "__main__":
                root_register = Toplevel()
                obj_register = REGISTER(root_register)
                root_register.mainloop()

    if __name__ == "__main__":
        root_login = Tk()
        obj_login = LOGIN(root_login)
        root_login.mainloop()

def bar():
    b1.config(text = "", bg = "#ab1515")
    b1.place(x = 170, y = 200)
    l4 = Label(window, text = "Loading.....", font = ("Goudy Old Style", 17), fg = "White", bg = "#ab1515")
    l4.place(x = 0, y = 208)

    r = 0
    for i in range(100):
        progress["value"] = r
        window.update_idletasks()
        time.sleep(0.02)
        r += 1
    window.destroy()
    School_Management_System()

progress.place(x = 10, y = 235)

Frame(window, width = 427, height = 241, bg = "#ab1515").place(x = 0, y = 0)

b1 = Button(window, font=("Vijaya", 15, "bold"), text = "Get Started", command = bar, border = 0, fg = "#ab1515")
b1.place(x = 170, y = 174, width = 100)

l1 = Label(window, text="SCHOOL    MANAGEMENT", font = ("Handlee", 20, "bold"), fg = "White", bg = "#ab1515")
l1.place(x = 35, y = 40)
l2 = Label(window, text = "          SYSTEM", font = ("Handlee", 20, "bold"), fg = "White", bg = "#ab1515")
l2.place(x = 65, y = 75)
l3 = Label(window, text = "Created  By:\n        Utsav  Singhal", font = ("Handlee", 16, "italic"), fg = "White", bg = "#ab1515")
l3.place(x = 200, y = 110)

window.mainloop()